==== q1 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[c_customer_id#82 ASC NULLS FIRST], output=[c_customer_id#82])
   +- *(9) Project [c_customer_id#82]
      +- *(9) BroadcastHashJoin [ctr_customer_sk#1], [c_customer_sk#81], Inner, BuildRight, false
         :- *(9) Project [ctr_customer_sk#1]
         :  +- *(9) BroadcastHashJoin [ctr_store_sk#2], [s_store_sk#52], Inner, BuildRight, false
         :     :- *(9) Project [ctr_customer_sk#1, ctr_store_sk#2]
         :     :  +- *(9) BroadcastHashJoin [ctr_store_sk#2], [ctr_store_sk#2#107], Inner, BuildLeft, (cast(ctr_total_return#3 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#103), false
         :     :     :- BroadcastQueryStage 7
         :     :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[1, int, true] as bigint)),false), [plan_id=793]
         :     :     :     +- *(7) Filter isnotnull(ctr_total_return#3)
         :     :     :        +- *(7) HashAggregate(keys=[sr_customer_sk#7, sr_store_sk#11], functions=[sum(UnscaledValue(sr_return_amt#15))], output=[ctr_customer_sk#1, ctr_store_sk#2, ctr_total_return#3])
         :     :     :           +- ShuffleQueryStage 5
         :     :     :              +- Exchange hashpartitioning(sr_customer_sk#7, sr_store_sk#11, 20), ENSURE_REQUIREMENTS, [plan_id=541]
         :     :     :                 +- *(5) HashAggregate(keys=[sr_customer_sk#7, sr_store_sk#11], functions=[partial_sum(UnscaledValue(sr_return_amt#15))], output=[sr_customer_sk#7, sr_store_sk#11, sum#109L])
         :     :     :                    +- *(5) Project [sr_customer_sk#7, sr_store_sk#11, sr_return_amt#15]
         :     :     :                       +- *(5) BroadcastHashJoin [sr_returned_date_sk#4], [d_date_sk#24], Inner, BuildRight, false
         :     :     :                          :- *(5) Filter ((isnotnull(sr_returned_date_sk#4) AND isnotnull(sr_store_sk#11)) AND isnotnull(sr_customer_sk#7))
         :     :     :                          :  +- *(5) ColumnarToRow
         :     :     :                          :     +- FileScan parquet default.store_returns[sr_returned_date_sk#4,sr_customer_sk#7,sr_store_sk#11,sr_return_amt#15] Batched: true, DataFilters: [isnotnull(sr_returned_date_sk#4), isnotnull(sr_store_sk#11), isnotnull(sr_customer_sk#7)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_returns], PartitionFilters: [], PushedFilters: [IsNotNull(sr_returned_date_sk), IsNotNull(sr_store_sk), IsNotNull(sr_customer_sk)], ReadSchema: struct<sr_returned_date_sk:int,sr_customer_sk:int,sr_store_sk:int,sr_return_amt:decimal(7,2)>
         :     :     :                          +- BroadcastQueryStage 0
         :     :     :                             +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=279]
         :     :     :                                +- *(1) Project [d_date_sk#24]
         :     :     :                                   +- *(1) Filter ((isnotnull(d_year#30) AND (d_year#30 = 2000)) AND isnotnull(d_date_sk#24))
         :     :     :                                      +- *(1) ColumnarToRow
         :     :     :                                         +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30] Batched: true, DataFilters: [isnotnull(d_year#30), (d_year#30 = 2000), isnotnull(d_date_sk#24)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :     :     +- *(9) Filter isnotnull((avg(ctr_total_return) * 1.2)#103)
         :     :        +- *(9) HashAggregate(keys=[ctr_store_sk#2], functions=[avg(ctr_total_return#3)], output=[(avg(ctr_total_return) * 1.2)#103, ctr_store_sk#2#107])
         :     :           +- ShuffleQueryStage 8
         :     :              +- Exchange hashpartitioning(ctr_store_sk#2, 20), ENSURE_REQUIREMENTS, [plan_id=862]
         :     :                 +- *(8) HashAggregate(keys=[ctr_store_sk#2], functions=[partial_avg(ctr_total_return#3)], output=[ctr_store_sk#2, sum#112, count#113L])
         :     :                    +- *(8) HashAggregate(keys=[sr_customer_sk#7, sr_store_sk#11], functions=[sum(UnscaledValue(sr_return_amt#15))], output=[ctr_store_sk#2, ctr_total_return#3])
         :     :                       +- ShuffleQueryStage 6
         :     :                          +- Exchange hashpartitioning(sr_customer_sk#7, sr_store_sk#11, 20), ENSURE_REQUIREMENTS, [plan_id=589]
         :     :                             +- *(6) HashAggregate(keys=[sr_customer_sk#7, sr_store_sk#11], functions=[partial_sum(UnscaledValue(sr_return_amt#15))], output=[sr_customer_sk#7, sr_store_sk#11, sum#115L])
         :     :                                +- *(6) Project [sr_customer_sk#7, sr_store_sk#11, sr_return_amt#15]
         :     :                                   +- *(6) BroadcastHashJoin [sr_returned_date_sk#4], [d_date_sk#24], Inner, BuildRight, false
         :     :                                      :- *(6) Filter (isnotnull(sr_returned_date_sk#4) AND isnotnull(sr_store_sk#11))
         :     :                                      :  +- *(6) ColumnarToRow
         :     :                                      :     +- FileScan parquet default.store_returns[sr_returned_date_sk#4,sr_customer_sk#7,sr_store_sk#11,sr_return_amt#15] Batched: true, DataFilters: [isnotnull(sr_returned_date_sk#4), isnotnull(sr_store_sk#11)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_returns], PartitionFilters: [], PushedFilters: [IsNotNull(sr_returned_date_sk), IsNotNull(sr_store_sk)], ReadSchema: struct<sr_returned_date_sk:int,sr_customer_sk:int,sr_store_sk:int,sr_return_amt:decimal(7,2)>
         :     :                                      +- BroadcastQueryStage 2
         :     :                                         +- ReusedExchange [d_date_sk#24], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=279]
         :     +- BroadcastQueryStage 3
         :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=368]
         :           +- *(3) Project [s_store_sk#52]
         :              +- *(3) Filter ((isnotnull(s_state#76) AND (s_state#76 = TN)) AND isnotnull(s_store_sk#52))
         :                 +- *(3) ColumnarToRow
         :                    +- FileScan parquet default.store[s_store_sk#52,s_state#76] Batched: true, DataFilters: [isnotnull(s_state#76), (s_state#76 = TN), isnotnull(s_store_sk#52)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_state), EqualTo(s_state,TN), IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_state:string>
         +- BroadcastQueryStage 4
            +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=391]
               +- *(4) Filter isnotnull(c_customer_sk#81)
                  +- *(4) ColumnarToRow
                     +- FileScan parquet default.customer[c_customer_sk#81,c_customer_id#82] Batched: true, DataFilters: [isnotnull(c_customer_sk#81)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string>

==== q2 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   *(13) Sort [d_week_seq1#136 ASC NULLS FIRST], true, 0
   +- ShuffleQueryStage 10
      +- Exchange rangepartitioning(d_week_seq1#136 ASC NULLS FIRST, 20), ENSURE_REQUIREMENTS, [plan_id=1881]
         +- *(12) Project [d_week_seq1#136, round(CheckOverflow((promote_precision(sun_sales1#137) / promote_precision(sun_sales2#145)), DecimalType(37,20)), 2) AS round((sun_sales1 / sun_sales2), 2)#296, round(CheckOverflow((promote_precision(mon_sales1#138) / promote_precision(mon_sales2#146)), DecimalType(37,20)), 2) AS round((mon_sales1 / mon_sales2), 2)#297, round(CheckOverflow((promote_precision(tue_sales1#139) / promote_precision(tue_sales2#147)), DecimalType(37,20)), 2) AS round((tue_sales1 / tue_sales2), 2)#298, round(CheckOverflow((promote_precision(wed_sales1#140) / promote_precision(wed_sales2#148)), DecimalType(37,20)), 2) AS round((wed_sales1 / wed_sales2), 2)#299, round(CheckOverflow((promote_precision(thu_sales1#141) / promote_precision(thu_sales2#149)), DecimalType(37,20)), 2) AS round((thu_sales1 / thu_sales2), 2)#300, round(CheckOverflow((promote_precision(fri_sales1#142) / promote_precision(fri_sales2#150)), DecimalType(37,20)), 2) AS round((fri_sales1 / fri_sales2), 2)#301, round(CheckOverflow((promote_precision(sat_sales1#143) / promote_precision(sat_sales2#151)), DecimalType(37,20)), 2) AS round((sat_sales1 / sat_sales2), 2)#302]
            +- *(12) BroadcastHashJoin [d_week_seq1#136], [(d_week_seq2#144 - 53)], Inner, BuildRight, false
               :- *(12) Project [d_week_seq#28 AS d_week_seq1#136, sun_sales#156 AS sun_sales1#137, mon_sales#157 AS mon_sales1#138, tue_sales#158 AS tue_sales1#139, wed_sales#159 AS wed_sales1#140, thu_sales#160 AS thu_sales1#141, fri_sales#161 AS fri_sales1#142, sat_sales#162 AS sat_sales1#143]
               :  +- *(12) BroadcastHashJoin [d_week_seq#28], [d_week_seq#235], Inner, BuildRight, false
               :     :- *(12) HashAggregate(keys=[d_week_seq#28], functions=[sum(UnscaledValue(CASE WHEN (d_day_name#38 = Sunday   ) THEN sales_price#153 END)), sum(UnscaledValue(CASE WHEN (d_day_name#38 = Monday   ) THEN sales_price#153 END)), sum(UnscaledValue(CASE WHEN (d_day_name#38 = Tuesday  ) THEN sales_price#153 END)), sum(UnscaledValue(CASE WHEN (d_day_name#38 = Wednesday) THEN sales_price#153 END)), sum(UnscaledValue(CASE WHEN (d_day_name#38 = Thursday ) THEN sales_price#153 END)), sum(UnscaledValue(CASE WHEN (d_day_name#38 = Friday   ) THEN sales_price#153 END)), sum(UnscaledValue(CASE WHEN (d_day_name#38 = Saturday ) THEN sales_price#153 END))], output=[d_week_seq#28, sun_sales#156, mon_sales#157, tue_sales#158, wed_sales#159, thu_sales#160, fri_sales#161, sat_sales#162])
               :     :  +- ShuffleQueryStage 5
               :     :     +- Exchange hashpartitioning(d_week_seq#28, 20), ENSURE_REQUIREMENTS, [plan_id=1467]
               :     :        +- *(7) HashAggregate(keys=[d_week_seq#28], functions=[partial_sum(UnscaledValue(CASE WHEN (d_day_name#38 = Sunday   ) THEN sales_price#153 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#38 = Monday   ) THEN sales_price#153 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#38 = Tuesday  ) THEN sales_price#153 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#38 = Wednesday) THEN sales_price#153 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#38 = Thursday ) THEN sales_price#153 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#38 = Friday   ) THEN sales_price#153 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#38 = Saturday ) THEN sales_price#153 END))], output=[d_week_seq#28, sum#320L, sum#321L, sum#322L, sum#323L, sum#324L, sum#325L, sum#326L])
               :     :           +- *(7) Project [sales_price#153, d_week_seq#28, d_day_name#38]
               :     :              +- *(7) BroadcastHashJoin [sold_date_sk#152], [d_date_sk#24], Inner, BuildRight, false
               :     :                 :- Union
               :     :                 :  :- *(5) Project [ws_sold_date_sk#163 AS sold_date_sk#152, ws_ext_sales_price#186 AS sales_price#153]
               :     :                 :  :  +- *(5) Filter isnotnull(ws_sold_date_sk#163)
               :     :                 :  :     +- *(5) ColumnarToRow
               :     :                 :  :        +- FileScan parquet default.web_sales[ws_sold_date_sk#163,ws_ext_sales_price#186] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#163)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_ext_sales_price:decimal(7,2)>
               :     :                 :  +- *(6) Project [cs_sold_date_sk#197 AS sold_date_sk#154, cs_ext_sales_price#220 AS sales_price#155]
               :     :                 :     +- *(6) Filter isnotnull(cs_sold_date_sk#197)
               :     :                 :        +- *(6) ColumnarToRow
               :     :                 :           +- FileScan parquet default.catalog_sales[cs_sold_date_sk#197,cs_ext_sales_price#220] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#197)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_ext_sales_price:decimal(7,2)>
               :     :                 +- BroadcastQueryStage 0
               :     :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=1221]
               :     :                       +- *(1) Filter (isnotnull(d_date_sk#24) AND isnotnull(d_week_seq#28))
               :     :                          +- *(1) ColumnarToRow
               :     :                             +- FileScan parquet default.date_dim[d_date_sk#24,d_week_seq#28,d_day_name#38] Batched: true, DataFilters: [isnotnull(d_date_sk#24), isnotnull(d_week_seq#28)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date_sk), IsNotNull(d_week_seq)], ReadSchema: struct<d_date_sk:int,d_week_seq:int,d_day_name:string>
               :     +- BroadcastQueryStage 1
               :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1243]
               :           +- *(2) Project [d_week_seq#235]
               :              +- *(2) Filter ((isnotnull(d_year#237) AND (d_year#237 = 2001)) AND isnotnull(d_week_seq#235))
               :                 +- *(2) ColumnarToRow
               :                    +- FileScan parquet default.date_dim[d_week_seq#235,d_year#237] Batched: true, DataFilters: [isnotnull(d_year#237), (d_year#237 = 2001), isnotnull(d_week_seq#235)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_week_seq)], ReadSchema: struct<d_week_seq:int,d_year:int>
               +- BroadcastQueryStage 9
                  +- BroadcastExchange HashedRelationBroadcastMode(List(cast((input[0, int, true] - 53) as bigint)),false), [plan_id=1836]
                     +- AQEShuffleRead local
                        +- ShuffleQueryStage 8
                           +- Exchange hashpartitioning((d_week_seq2#144 - 53), 20), ENSURE_REQUIREMENTS, [plan_id=1744]
                              +- *(11) Project [d_week_seq#28 AS d_week_seq2#144, sun_sales#156 AS sun_sales2#145, mon_sales#157 AS mon_sales2#146, tue_sales#158 AS tue_sales2#147, wed_sales#159 AS wed_sales2#148, thu_sales#160 AS thu_sales2#149, fri_sales#161 AS fri_sales2#150, sat_sales#162 AS sat_sales2#151]
                                 +- *(11) BroadcastHashJoin [d_week_seq#28], [d_week_seq#263], Inner, BuildRight, false
                                    :- *(11) HashAggregate(keys=[d_week_seq#28], functions=[sum(UnscaledValue(CASE WHEN (d_day_name#38 = Sunday   ) THEN sales_price#153 END)), sum(UnscaledValue(CASE WHEN (d_day_name#38 = Monday   ) THEN sales_price#153 END)), sum(UnscaledValue(CASE WHEN (d_day_name#38 = Tuesday  ) THEN sales_price#153 END)), sum(UnscaledValue(CASE WHEN (d_day_name#38 = Wednesday) THEN sales_price#153 END)), sum(UnscaledValue(CASE WHEN (d_day_name#38 = Thursday ) THEN sales_price#153 END)), sum(UnscaledValue(CASE WHEN (d_day_name#38 = Friday   ) THEN sales_price#153 END)), sum(UnscaledValue(CASE WHEN (d_day_name#38 = Saturday ) THEN sales_price#153 END))], output=[d_week_seq#28, sun_sales#156, mon_sales#157, tue_sales#158, wed_sales#159, thu_sales#160, fri_sales#161, sat_sales#162])
                                    :  +- ShuffleQueryStage 7
                                    :     +- ReusedExchange [d_week_seq#28, sum#334L, sum#335L, sum#336L, sum#337L, sum#338L, sum#339L, sum#340L], Exchange hashpartitioning(d_week_seq#28, 20), ENSURE_REQUIREMENTS, [plan_id=1467]
                                    +- BroadcastQueryStage 4
                                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=1287]
                                          +- *(4) Project [d_week_seq#263]
                                             +- *(4) Filter ((isnotnull(d_year#265) AND (d_year#265 = 2002)) AND isnotnull(d_week_seq#263))
                                                +- *(4) ColumnarToRow
                                                   +- FileScan parquet default.date_dim[d_week_seq#263,d_year#265] Batched: true, DataFilters: [isnotnull(d_year#265), (d_year#265 = 2002), isnotnull(d_week_seq#263)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_week_seq)], ReadSchema: struct<d_week_seq:int,d_year:int>

==== q3 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[d_year#30 ASC NULLS FIRST,sum_agg#413 DESC NULLS LAST,brand_id#411 ASC NULLS FIRST], output=[d_year#30,brand_id#411,brand#412,sum_agg#413])
   +- *(4) HashAggregate(keys=[d_year#30, i_brand#445, i_brand_id#444], functions=[sum(UnscaledValue(ss_ext_sales_price#429))], output=[d_year#30, brand_id#411, brand#412, sum_agg#413])
      +- ShuffleQueryStage 2
         +- Exchange hashpartitioning(d_year#30, i_brand#445, i_brand_id#444, 20), ENSURE_REQUIREMENTS, [plan_id=2154]
            +- *(3) HashAggregate(keys=[d_year#30, i_brand#445, i_brand_id#444], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#429))], output=[d_year#30, i_brand#445, i_brand_id#444, sum#467L])
               +- *(3) Project [d_year#30, ss_ext_sales_price#429, i_brand_id#444, i_brand#445]
                  +- *(3) BroadcastHashJoin [ss_item_sk#416], [i_item_sk#437], Inner, BuildRight, false
                     :- *(3) Project [d_year#30, ss_item_sk#416, ss_ext_sales_price#429]
                     :  +- *(3) BroadcastHashJoin [d_date_sk#24], [ss_sold_date_sk#414], Inner, BuildLeft, false
                     :     :- BroadcastQueryStage 0
                     :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=2012]
                     :     :     +- *(1) Project [d_date_sk#24, d_year#30]
                     :     :        +- *(1) Filter ((isnotnull(d_moy#32) AND (d_moy#32 = 11)) AND isnotnull(d_date_sk#24))
                     :     :           +- *(1) ColumnarToRow
                     :     :              +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30,d_moy#32] Batched: true, DataFilters: [isnotnull(d_moy#32), (d_moy#32 = 11), isnotnull(d_date_sk#24)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_moy), EqualTo(d_moy,11), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                     :     +- *(3) Filter (isnotnull(ss_sold_date_sk#414) AND isnotnull(ss_item_sk#416))
                     :        +- *(3) ColumnarToRow
                     :           +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_item_sk#416,ss_ext_sales_price#429] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#414), isnotnull(ss_item_sk#416)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_ext_sales_price:decimal(7,2)>
                     +- BroadcastQueryStage 1
                        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=2033]
                           +- *(2) Project [i_item_sk#437, i_brand_id#444, i_brand#445]
                              +- *(2) Filter ((isnotnull(i_manufact_id#450) AND (i_manufact_id#450 = 128)) AND isnotnull(i_item_sk#437))
                                 +- *(2) ColumnarToRow
                                    +- FileScan parquet default.item[i_item_sk#437,i_brand_id#444,i_brand#445,i_manufact_id#450] Batched: true, DataFilters: [isnotnull(i_manufact_id#450), (i_manufact_id#450 = 128), isnotnull(i_item_sk#437)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_manufact_id), EqualTo(i_manufact_id,128), IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_brand:string,i_manufact_id:int>

==== q4 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[customer_id#600 ASC NULLS FIRST,customer_first_name#601 ASC NULLS FIRST,customer_last_name#602 ASC NULLS FIRST,customer_preferred_cust_flag#603 ASC NULLS FIRST,customer_birth_country#604 ASC NULLS FIRST,customer_login#605 ASC NULLS FIRST,customer_email_address#606 ASC NULLS FIRST], output=[customer_id#600,customer_first_name#601,customer_last_name#602,customer_preferred_cust_flag#603,customer_birth_country#604,customer_login#605,customer_email_address#606])
   +- *(25) Project [customer_id#600, customer_first_name#601, customer_last_name#602, customer_preferred_cust_flag#603, customer_birth_country#604, customer_login#605, customer_email_address#606]
      +- *(25) BroadcastHashJoin [customer_id#471], [customer_id#640], Inner, BuildRight, (CASE WHEN (year_total#489 > 0.000000) THEN CheckOverflow((promote_precision(year_total#628) / promote_precision(year_total#489)), DecimalType(38,14)) END > CASE WHEN (year_total#499 > 0.000000) THEN CheckOverflow((promote_precision(year_total#648) / promote_precision(year_total#499)), DecimalType(38,14)) END), false
         :- *(25) Project [customer_id#471, customer_id#600, customer_first_name#601, customer_last_name#602, customer_preferred_cust_flag#603, customer_birth_country#604, customer_login#605, customer_email_address#606, year_total#489, year_total#628, year_total#499]
         :  +- *(25) BroadcastHashJoin [customer_id#471], [customer_id#491], Inner, BuildRight, false
         :     :- *(25) Project [customer_id#471, customer_id#600, customer_first_name#601, customer_last_name#602, customer_preferred_cust_flag#603, customer_birth_country#604, customer_login#605, customer_email_address#606, year_total#489, year_total#628]
         :     :  +- *(25) BroadcastHashJoin [customer_id#471], [customer_id#620], Inner, BuildRight, (CASE WHEN (year_total#489 > 0.000000) THEN CheckOverflow((promote_precision(year_total#628) / promote_precision(year_total#489)), DecimalType(38,14)) END > CASE WHEN (year_total#479 > 0.000000) THEN CheckOverflow((promote_precision(year_total#608) / promote_precision(year_total#479)), DecimalType(38,14)) END), false
         :     :     :- *(25) Project [customer_id#471, year_total#479, customer_id#600, customer_first_name#601, customer_last_name#602, customer_preferred_cust_flag#603, customer_birth_country#604, customer_login#605, customer_email_address#606, year_total#608, year_total#489]
         :     :     :  +- *(25) BroadcastHashJoin [customer_id#471], [customer_id#481], Inner, BuildRight, false
         :     :     :     :- *(25) BroadcastHashJoin [customer_id#471], [customer_id#600], Inner, BuildRight, false
         :     :     :     :  :- AQEShuffleRead local
         :     :     :     :  :  +- ShuffleQueryStage 30
         :     :     :     :  :     +- Exchange hashpartitioning(customer_id#471, 20), ENSURE_REQUIREMENTS, [plan_id=5057]
         :     :     :     :  :        +- *(22) Filter (isnotnull(year_total#479) AND (year_total#479 > 0.000000))
         :     :     :     :  :           +- *(22) HashAggregate(keys=[c_customer_id#82, c_first_name#89, c_last_name#90, c_preferred_cust_flag#91, c_birth_country#95, c_login#96, c_email_address#97, d_year#30], functions=[sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_ext_list_price#431 as decimal(8,2))) - promote_precision(cast(ss_ext_wholesale_cost#430 as decimal(8,2)))), DecimalType(8,2)) as decimal(9,2))) - promote_precision(cast(ss_ext_discount_amt#428 as decimal(9,2)))), DecimalType(9,2)) as decimal(10,2))) + promote_precision(cast(ss_ext_sales_price#429 as decimal(10,2)))), DecimalType(10,2))) / 2.00), DecimalType(14,6)))], output=[customer_id#471, year_total#479])
         :     :     :     :  :              +- ShuffleQueryStage 24
         :     :     :     :  :                 +- Exchange hashpartitioning(c_customer_id#82, c_first_name#89, c_last_name#90, c_preferred_cust_flag#91, c_birth_country#95, c_login#96, c_email_address#97, d_year#30, 20), ENSURE_REQUIREMENTS, [plan_id=4420]
         :     :     :     :  :                    +- *(16) HashAggregate(keys=[c_customer_id#82, c_first_name#89, c_last_name#90, c_preferred_cust_flag#91, c_birth_country#95, c_login#96, c_email_address#97, d_year#30], functions=[partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_ext_list_price#431 as decimal(8,2))) - promote_precision(cast(ss_ext_wholesale_cost#430 as decimal(8,2)))), DecimalType(8,2)) as decimal(9,2))) - promote_precision(cast(ss_ext_discount_amt#428 as decimal(9,2)))), DecimalType(9,2)) as decimal(10,2))) + promote_precision(cast(ss_ext_sales_price#429 as decimal(10,2)))), DecimalType(10,2))) / 2.00), DecimalType(14,6)))], output=[c_customer_id#82, c_first_name#89, c_last_name#90, c_preferred_cust_flag#91, c_birth_country#95, c_login#96, c_email_address#97, d_year#30, sum#3149, isEmpty#3150])
         :     :     :     :  :                       +- *(16) Project [c_customer_id#82, c_first_name#89, c_last_name#90, c_preferred_cust_flag#91, c_birth_country#95, c_login#96, c_email_address#97, ss_ext_discount_amt#428, ss_ext_sales_price#429, ss_ext_wholesale_cost#430, ss_ext_list_price#431, d_year#30]
         :     :     :     :  :                          +- *(16) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#24], Inner, BuildRight, false
         :     :     :     :  :                             :- *(16) Project [c_customer_id#82, c_first_name#89, c_last_name#90, c_preferred_cust_flag#91, c_birth_country#95, c_login#96, c_email_address#97, ss_sold_date_sk#414, ss_ext_discount_amt#428, ss_ext_sales_price#429, ss_ext_wholesale_cost#430, ss_ext_list_price#431]
         :     :     :     :  :                             :  +- *(16) BroadcastHashJoin [c_customer_sk#81], [ss_customer_sk#417], Inner, BuildLeft, false
         :     :     :     :  :                             :     :- BroadcastQueryStage 0
         :     :     :     :  :                             :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=2703]
         :     :     :     :  :                             :     :     +- *(1) Filter (isnotnull(c_customer_sk#81) AND isnotnull(c_customer_id#82))
         :     :     :     :  :                             :     :        +- *(1) ColumnarToRow
         :     :     :     :  :                             :     :           +- FileScan parquet default.customer[c_customer_sk#81,c_customer_id#82,c_first_name#89,c_last_name#90,c_preferred_cust_flag#91,c_birth_country#95,c_login#96,c_email_address#97] Batched: true, DataFilters: [isnotnull(c_customer_sk#81), isnotnull(c_customer_id#82)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_...
         :     :     :     :  :                             :     +- *(16) Filter (isnotnull(ss_customer_sk#417) AND isnotnull(ss_sold_date_sk#414))
         :     :     :     :  :                             :        +- *(16) ColumnarToRow
         :     :     :     :  :                             :           +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_customer_sk#417,ss_ext_discount_amt#428,ss_ext_sales_price#429,ss_ext_wholesale_cost#430,ss_ext_list_price#431] Batched: true, DataFilters: [isnotnull(ss_customer_sk#417), isnotnull(ss_sold_date_sk#414)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_ext_discount_amt:decimal(7,2),ss_ext_sales_price...
         :     :     :     :  :                             +- BroadcastQueryStage 1
         :     :     :     :  :                                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=2720]
         :     :     :     :  :                                   +- *(2) Filter ((isnotnull(d_year#30) AND (d_year#30 = 2001)) AND isnotnull(d_date_sk#24))
         :     :     :     :  :                                      +- *(2) ColumnarToRow
         :     :     :     :  :                                         +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30] Batched: true, DataFilters: [isnotnull(d_year#30), (d_year#30 = 2001), isnotnull(d_date_sk#24)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :     :     :     :  +- BroadcastQueryStage 31
         :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=5154]
         :     :     :     :        +- AQEShuffleRead local
         :     :     :     :           +- ShuffleQueryStage 27
         :     :     :     :              +- Exchange hashpartitioning(customer_id#600, 20), ENSURE_REQUIREMENTS, [plan_id=4741]
         :     :     :     :                 +- *(19) HashAggregate(keys=[c_customer_id#1853, c_first_name#1860, c_last_name#1861, c_preferred_cust_flag#1862, c_birth_country#1866, c_login#1867, c_email_address#1868, d_year#1899], functions=[sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_ext_list_price#1887 as decimal(8,2))) - promote_precision(cast(ss_ext_wholesale_cost#1886 as decimal(8,2)))), DecimalType(8,2)) as decimal(9,2))) - promote_precision(cast(ss_ext_discount_amt#1884 as decimal(9,2)))), DecimalType(9,2)) as decimal(10,2))) + promote_precision(cast(ss_ext_sales_price#1885 as decimal(10,2)))), DecimalType(10,2))) / 2.00), DecimalType(14,6)))], output=[customer_id#600, customer_first_name#601, customer_last_name#602, customer_preferred_cust_flag#603, customer_birth_country#604, customer_login#605, customer_email_address#606, year_total#608])
         :     :     :     :                    +- ShuffleQueryStage 21
         :     :     :     :                       +- Exchange hashpartitioning(c_customer_id#1853, c_first_name#1860, c_last_name#1861, c_preferred_cust_flag#1862, c_birth_country#1866, c_login#1867, c_email_address#1868, d_year#1899, 20), ENSURE_REQUIREMENTS, [plan_id=4088]
         :     :     :     :                          +- *(13) HashAggregate(keys=[c_customer_id#1853, c_first_name#1860, c_last_name#1861, c_preferred_cust_flag#1862, c_birth_country#1866, c_login#1867, c_email_address#1868, d_year#1899], functions=[partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_ext_list_price#1887 as decimal(8,2))) - promote_precision(cast(ss_ext_wholesale_cost#1886 as decimal(8,2)))), DecimalType(8,2)) as decimal(9,2))) - promote_precision(cast(ss_ext_discount_amt#1884 as decimal(9,2)))), DecimalType(9,2)) as decimal(10,2))) + promote_precision(cast(ss_ext_sales_price#1885 as decimal(10,2)))), DecimalType(10,2))) / 2.00), DecimalType(14,6)))], output=[c_customer_id#1853, c_first_name#1860, c_last_name#1861, c_preferred_cust_flag#1862, c_birth_country#1866, c_login#1867, c_email_address#1868, d_year#1899, sum#3153, isEmpty#3154])
         :     :     :     :                             +- *(13) Project [c_customer_id#1853, c_first_name#1860, c_last_name#1861, c_preferred_cust_flag#1862, c_birth_country#1866, c_login#1867, c_email_address#1868, ss_ext_discount_amt#1884, ss_ext_sales_price#1885, ss_ext_wholesale_cost#1886, ss_ext_list_price#1887, d_year#1899]
         :     :     :     :                                +- *(13) BroadcastHashJoin [ss_sold_date_sk#1870], [d_date_sk#1893], Inner, BuildRight, false
         :     :     :     :                                   :- *(13) Project [c_customer_id#1853, c_first_name#1860, c_last_name#1861, c_preferred_cust_flag#1862, c_birth_country#1866, c_login#1867, c_email_address#1868, ss_sold_date_sk#1870, ss_ext_discount_amt#1884, ss_ext_sales_price#1885, ss_ext_wholesale_cost#1886, ss_ext_list_price#1887]
         :     :     :     :                                   :  +- *(13) BroadcastHashJoin [c_customer_sk#1852], [ss_customer_sk#1873], Inner, BuildLeft, false
         :     :     :     :                                   :     :- BroadcastQueryStage 3
         :     :     :     :                                   :     :  +- ReusedExchange [c_customer_sk#1852, c_customer_id#1853, c_first_name#1860, c_last_name#1861, c_preferred_cust_flag#1862, c_birth_country#1866, c_login#1867, c_email_address#1868], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=2703]
         :     :     :     :                                   :     +- *(13) Filter (isnotnull(ss_customer_sk#1873) AND isnotnull(ss_sold_date_sk#1870))
         :     :     :     :                                   :        +- *(13) ColumnarToRow
         :     :     :     :                                   :           +- FileScan parquet default.store_sales[ss_sold_date_sk#1870,ss_customer_sk#1873,ss_ext_discount_amt#1884,ss_ext_sales_price#1885,ss_ext_wholesale_cost#1886,ss_ext_list_price#1887] Batched: true, DataFilters: [isnotnull(ss_customer_sk#1873), isnotnull(ss_sold_date_sk#1870)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_ext_discount_amt:decimal(7,2),ss_ext_sales_price...
         :     :     :     :                                   +- BroadcastQueryStage 4
         :     :     :     :                                      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=2789]
         :     :     :     :                                         +- *(4) Filter ((isnotnull(d_year#1899) AND (d_year#1899 = 2002)) AND isnotnull(d_date_sk#1893))
         :     :     :     :                                            +- *(4) ColumnarToRow
         :     :     :     :                                               +- FileScan parquet default.date_dim[d_date_sk#1893,d_year#1899] Batched: true, DataFilters: [isnotnull(d_year#1899), (d_year#1899 = 2002), isnotnull(d_date_sk#1893)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :     :     :     +- BroadcastQueryStage 32
         :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=5371]
         :     :     :           +- *(23) Filter (isnotnull(year_total#489) AND (year_total#489 > 0.000000))
         :     :     :              +- *(23) HashAggregate(keys=[c_customer_id#2161, c_first_name#2168, c_last_name#2169, c_preferred_cust_flag#2170, c_birth_country#2174, c_login#2175, c_email_address#2176, d_year#2218], functions=[sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cs_ext_list_price#2203 as decimal(8,2))) - promote_precision(cast(cs_ext_wholesale_cost#2202 as decimal(8,2)))), DecimalType(8,2)) as decimal(9,2))) - promote_precision(cast(cs_ext_discount_amt#2200 as decimal(9,2)))), DecimalType(9,2)) as decimal(10,2))) + promote_precision(cast(cs_ext_sales_price#2201 as decimal(10,2)))), DecimalType(10,2))) / 2.00), DecimalType(14,6)))], output=[customer_id#481, year_total#489])
         :     :     :                 +- ShuffleQueryStage 25
         :     :     :                    +- Exchange hashpartitioning(c_customer_id#2161, c_first_name#2168, c_last_name#2169, c_preferred_cust_flag#2170, c_birth_country#2174, c_login#2175, c_email_address#2176, d_year#2218, 20), ENSURE_REQUIREMENTS, [plan_id=4469]
         :     :     :                       +- *(17) HashAggregate(keys=[c_customer_id#2161, c_first_name#2168, c_last_name#2169, c_preferred_cust_flag#2170, c_birth_country#2174, c_login#2175, c_email_address#2176, d_year#2218], functions=[partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cs_ext_list_price#2203 as decimal(8,2))) - promote_precision(cast(cs_ext_wholesale_cost#2202 as decimal(8,2)))), DecimalType(8,2)) as decimal(9,2))) - promote_precision(cast(cs_ext_discount_amt#2200 as decimal(9,2)))), DecimalType(9,2)) as decimal(10,2))) + promote_precision(cast(cs_ext_sales_price#2201 as decimal(10,2)))), DecimalType(10,2))) / 2.00), DecimalType(14,6)))], output=[c_customer_id#2161, c_first_name#2168, c_last_name#2169, c_preferred_cust_flag#2170, c_birth_country#2174, c_login#2175, c_email_address#2176, d_year#2218, sum#3157, isEmpty#3158])
         :     :     :                          +- *(17) Project [c_customer_id#2161, c_first_name#2168, c_last_name#2169, c_preferred_cust_flag#2170, c_birth_country#2174, c_login#2175, c_email_address#2176, cs_ext_discount_amt#2200, cs_ext_sales_price#2201, cs_ext_wholesale_cost#2202, cs_ext_list_price#2203, d_year#2218]
         :     :     :                             +- *(17) BroadcastHashJoin [cs_sold_date_sk#2178], [d_date_sk#2212], Inner, BuildRight, false
         :     :     :                                :- *(17) Project [c_customer_id#2161, c_first_name#2168, c_last_name#2169, c_preferred_cust_flag#2170, c_birth_country#2174, c_login#2175, c_email_address#2176, cs_sold_date_sk#2178, cs_ext_discount_amt#2200, cs_ext_sales_price#2201, cs_ext_wholesale_cost#2202, cs_ext_list_price#2203]
         :     :     :                                :  +- *(17) BroadcastHashJoin [c_customer_sk#2160], [cs_bill_customer_sk#2181], Inner, BuildLeft, false
         :     :     :                                :     :- BroadcastQueryStage 6
         :     :     :                                :     :  +- ReusedExchange [c_customer_sk#2160, c_customer_id#2161, c_first_name#2168, c_last_name#2169, c_preferred_cust_flag#2170, c_birth_country#2174, c_login#2175, c_email_address#2176], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=2703]
         :     :     :                                :     +- *(17) Filter (isnotnull(cs_bill_customer_sk#2181) AND isnotnull(cs_sold_date_sk#2178))
         :     :     :                                :        +- *(17) ColumnarToRow
         :     :     :                                :           +- FileScan parquet default.catalog_sales[cs_sold_date_sk#2178,cs_bill_customer_sk#2181,cs_ext_discount_amt#2200,cs_ext_sales_price#2201,cs_ext_wholesale_cost#2202,cs_ext_list_price#2203] Batched: true, DataFilters: [isnotnull(cs_bill_customer_sk#2181), isnotnull(cs_sold_date_sk#2178)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_bill_customer_sk), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_bill_customer_sk:int,cs_ext_discount_amt:decimal(7,2),cs_ext_sales_...
         :     :     :                                +- BroadcastQueryStage 8
         :     :     :                                   +- ReusedExchange [d_date_sk#2212, d_year#2218], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=2720]
         :     :     +- BroadcastQueryStage 28
         :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=4860]
         :     :           +- *(20) HashAggregate(keys=[c_customer_id#2400, c_first_name#2407, c_last_name#2408, c_preferred_cust_flag#2409, c_birth_country#2413, c_login#2414, c_email_address#2415, d_year#2457], functions=[sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cs_ext_list_price#2442 as decimal(8,2))) - promote_precision(cast(cs_ext_wholesale_cost#2441 as decimal(8,2)))), DecimalType(8,2)) as decimal(9,2))) - promote_precision(cast(cs_ext_discount_amt#2439 as decimal(9,2)))), DecimalType(9,2)) as decimal(10,2))) + promote_precision(cast(cs_ext_sales_price#2440 as decimal(10,2)))), DecimalType(10,2))) / 2.00), DecimalType(14,6)))], output=[customer_id#620, year_total#628])
         :     :              +- ShuffleQueryStage 22
         :     :                 +- Exchange hashpartitioning(c_customer_id#2400, c_first_name#2407, c_last_name#2408, c_preferred_cust_flag#2409, c_birth_country#2413, c_login#2414, c_email_address#2415, d_year#2457, 20), ENSURE_REQUIREMENTS, [plan_id=4134]
         :     :                    +- *(14) HashAggregate(keys=[c_customer_id#2400, c_first_name#2407, c_last_name#2408, c_preferred_cust_flag#2409, c_birth_country#2413, c_login#2414, c_email_address#2415, d_year#2457], functions=[partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(cs_ext_list_price#2442 as decimal(8,2))) - promote_precision(cast(cs_ext_wholesale_cost#2441 as decimal(8,2)))), DecimalType(8,2)) as decimal(9,2))) - promote_precision(cast(cs_ext_discount_amt#2439 as decimal(9,2)))), DecimalType(9,2)) as decimal(10,2))) + promote_precision(cast(cs_ext_sales_price#2440 as decimal(10,2)))), DecimalType(10,2))) / 2.00), DecimalType(14,6)))], output=[c_customer_id#2400, c_first_name#2407, c_last_name#2408, c_preferred_cust_flag#2409, c_birth_country#2413, c_login#2414, c_email_address#2415, d_year#2457, sum#3161, isEmpty#3162])
         :     :                       +- *(14) Project [c_customer_id#2400, c_first_name#2407, c_last_name#2408, c_preferred_cust_flag#2409, c_birth_country#2413, c_login#2414, c_email_address#2415, cs_ext_discount_amt#2439, cs_ext_sales_price#2440, cs_ext_wholesale_cost#2441, cs_ext_list_price#2442, d_year#2457]
         :     :                          +- *(14) BroadcastHashJoin [cs_sold_date_sk#2417], [d_date_sk#2451], Inner, BuildRight, false
         :     :                             :- *(14) Project [c_customer_id#2400, c_first_name#2407, c_last_name#2408, c_preferred_cust_flag#2409, c_birth_country#2413, c_login#2414, c_email_address#2415, cs_sold_date_sk#2417, cs_ext_discount_amt#2439, cs_ext_sales_price#2440, cs_ext_wholesale_cost#2441, cs_ext_list_price#2442]
         :     :                             :  +- *(14) BroadcastHashJoin [c_customer_sk#2399], [cs_bill_customer_sk#2420], Inner, BuildLeft, false
         :     :                             :     :- BroadcastQueryStage 10
         :     :                             :     :  +- ReusedExchange [c_customer_sk#2399, c_customer_id#2400, c_first_name#2407, c_last_name#2408, c_preferred_cust_flag#2409, c_birth_country#2413, c_login#2414, c_email_address#2415], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=2703]
         :     :                             :     +- *(14) Filter (isnotnull(cs_bill_customer_sk#2420) AND isnotnull(cs_sold_date_sk#2417))
         :     :                             :        +- *(14) ColumnarToRow
         :     :                             :           +- FileScan parquet default.catalog_sales[cs_sold_date_sk#2417,cs_bill_customer_sk#2420,cs_ext_discount_amt#2439,cs_ext_sales_price#2440,cs_ext_wholesale_cost#2441,cs_ext_list_price#2442] Batched: true, DataFilters: [isnotnull(cs_bill_customer_sk#2420), isnotnull(cs_sold_date_sk#2417)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_bill_customer_sk), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_bill_customer_sk:int,cs_ext_discount_amt:decimal(7,2),cs_ext_sales_...
         :     :                             +- BroadcastQueryStage 12
         :     :                                +- ReusedExchange [d_date_sk#2451, d_year#2457], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=2789]
         :     +- BroadcastQueryStage 33
         :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=5450]
         :           +- *(24) Filter (isnotnull(year_total#499) AND (year_total#499 > 0.000000))
         :              +- *(24) HashAggregate(keys=[c_customer_id#2719, c_first_name#2726, c_last_name#2727, c_preferred_cust_flag#2728, c_birth_country#2732, c_login#2733, c_email_address#2734, d_year#2776], functions=[sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ws_ext_list_price#2761 as decimal(8,2))) - promote_precision(cast(ws_ext_wholesale_cost#2760 as decimal(8,2)))), DecimalType(8,2)) as decimal(9,2))) - promote_precision(cast(ws_ext_discount_amt#2758 as decimal(9,2)))), DecimalType(9,2)) as decimal(10,2))) + promote_precision(cast(ws_ext_sales_price#2759 as decimal(10,2)))), DecimalType(10,2))) / 2.00), DecimalType(14,6)))], output=[customer_id#491, year_total#499])
         :                 +- ShuffleQueryStage 26
         :                    +- Exchange hashpartitioning(c_customer_id#2719, c_first_name#2726, c_last_name#2727, c_preferred_cust_flag#2728, c_birth_country#2732, c_login#2733, c_email_address#2734, d_year#2776, 20), ENSURE_REQUIREMENTS, [plan_id=4521]
         :                       +- *(18) HashAggregate(keys=[c_customer_id#2719, c_first_name#2726, c_last_name#2727, c_preferred_cust_flag#2728, c_birth_country#2732, c_login#2733, c_email_address#2734, d_year#2776], functions=[partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ws_ext_list_price#2761 as decimal(8,2))) - promote_precision(cast(ws_ext_wholesale_cost#2760 as decimal(8,2)))), DecimalType(8,2)) as decimal(9,2))) - promote_precision(cast(ws_ext_discount_amt#2758 as decimal(9,2)))), DecimalType(9,2)) as decimal(10,2))) + promote_precision(cast(ws_ext_sales_price#2759 as decimal(10,2)))), DecimalType(10,2))) / 2.00), DecimalType(14,6)))], output=[c_customer_id#2719, c_first_name#2726, c_last_name#2727, c_preferred_cust_flag#2728, c_birth_country#2732, c_login#2733, c_email_address#2734, d_year#2776, sum#3165, isEmpty#3166])
         :                          +- *(18) Project [c_customer_id#2719, c_first_name#2726, c_last_name#2727, c_preferred_cust_flag#2728, c_birth_country#2732, c_login#2733, c_email_address#2734, ws_ext_discount_amt#2758, ws_ext_sales_price#2759, ws_ext_wholesale_cost#2760, ws_ext_list_price#2761, d_year#2776]
         :                             +- *(18) BroadcastHashJoin [ws_sold_date_sk#2736], [d_date_sk#2770], Inner, BuildRight, false
         :                                :- *(18) Project [c_customer_id#2719, c_first_name#2726, c_last_name#2727, c_preferred_cust_flag#2728, c_birth_country#2732, c_login#2733, c_email_address#2734, ws_sold_date_sk#2736, ws_ext_discount_amt#2758, ws_ext_sales_price#2759, ws_ext_wholesale_cost#2760, ws_ext_list_price#2761]
         :                                :  +- *(18) BroadcastHashJoin [c_customer_sk#2718], [ws_bill_customer_sk#2740], Inner, BuildLeft, false
         :                                :     :- BroadcastQueryStage 14
         :                                :     :  +- ReusedExchange [c_customer_sk#2718, c_customer_id#2719, c_first_name#2726, c_last_name#2727, c_preferred_cust_flag#2728, c_birth_country#2732, c_login#2733, c_email_address#2734], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=2703]
         :                                :     +- *(18) Filter (isnotnull(ws_bill_customer_sk#2740) AND isnotnull(ws_sold_date_sk#2736))
         :                                :        +- *(18) ColumnarToRow
         :                                :           +- FileScan parquet default.web_sales[ws_sold_date_sk#2736,ws_bill_customer_sk#2740,ws_ext_discount_amt#2758,ws_ext_sales_price#2759,ws_ext_wholesale_cost#2760,ws_ext_list_price#2761] Batched: true, DataFilters: [isnotnull(ws_bill_customer_sk#2740), isnotnull(ws_sold_date_sk#2736)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_bill_customer_sk), IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_bill_customer_sk:int,ws_ext_discount_amt:decimal(7,2),ws_ext_sales_...
         :                                +- BroadcastQueryStage 16
         :                                   +- ReusedExchange [d_date_sk#2770, d_year#2776], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=2720]
         +- BroadcastQueryStage 29
            +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=4968]
               +- *(21) HashAggregate(keys=[c_customer_id#2958, c_first_name#2965, c_last_name#2966, c_preferred_cust_flag#2967, c_birth_country#2971, c_login#2972, c_email_address#2973, d_year#3015], functions=[sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ws_ext_list_price#3000 as decimal(8,2))) - promote_precision(cast(ws_ext_wholesale_cost#2999 as decimal(8,2)))), DecimalType(8,2)) as decimal(9,2))) - promote_precision(cast(ws_ext_discount_amt#2997 as decimal(9,2)))), DecimalType(9,2)) as decimal(10,2))) + promote_precision(cast(ws_ext_sales_price#2998 as decimal(10,2)))), DecimalType(10,2))) / 2.00), DecimalType(14,6)))], output=[customer_id#640, year_total#648])
                  +- ShuffleQueryStage 23
                     +- Exchange hashpartitioning(c_customer_id#2958, c_first_name#2965, c_last_name#2966, c_preferred_cust_flag#2967, c_birth_country#2971, c_login#2972, c_email_address#2973, d_year#3015, 20), ENSURE_REQUIREMENTS, [plan_id=4181]
                        +- *(15) HashAggregate(keys=[c_customer_id#2958, c_first_name#2965, c_last_name#2966, c_preferred_cust_flag#2967, c_birth_country#2971, c_login#2972, c_email_address#2973, d_year#3015], functions=[partial_sum(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ws_ext_list_price#3000 as decimal(8,2))) - promote_precision(cast(ws_ext_wholesale_cost#2999 as decimal(8,2)))), DecimalType(8,2)) as decimal(9,2))) - promote_precision(cast(ws_ext_discount_amt#2997 as decimal(9,2)))), DecimalType(9,2)) as decimal(10,2))) + promote_precision(cast(ws_ext_sales_price#2998 as decimal(10,2)))), DecimalType(10,2))) / 2.00), DecimalType(14,6)))], output=[c_customer_id#2958, c_first_name#2965, c_last_name#2966, c_preferred_cust_flag#2967, c_birth_country#2971, c_login#2972, c_email_address#2973, d_year#3015, sum#3169, isEmpty#3170])
                           +- *(15) Project [c_customer_id#2958, c_first_name#2965, c_last_name#2966, c_preferred_cust_flag#2967, c_birth_country#2971, c_login#2972, c_email_address#2973, ws_ext_discount_amt#2997, ws_ext_sales_price#2998, ws_ext_wholesale_cost#2999, ws_ext_list_price#3000, d_year#3015]
                              +- *(15) BroadcastHashJoin [ws_sold_date_sk#2975], [d_date_sk#3009], Inner, BuildRight, false
                                 :- *(15) Project [c_customer_id#2958, c_first_name#2965, c_last_name#2966, c_preferred_cust_flag#2967, c_birth_country#2971, c_login#2972, c_email_address#2973, ws_sold_date_sk#2975, ws_ext_discount_amt#2997, ws_ext_sales_price#2998, ws_ext_wholesale_cost#2999, ws_ext_list_price#3000]
                                 :  +- *(15) BroadcastHashJoin [c_customer_sk#2957], [ws_bill_customer_sk#2979], Inner, BuildLeft, false
                                 :     :- BroadcastQueryStage 18
                                 :     :  +- ReusedExchange [c_customer_sk#2957, c_customer_id#2958, c_first_name#2965, c_last_name#2966, c_preferred_cust_flag#2967, c_birth_country#2971, c_login#2972, c_email_address#2973], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=2703]
                                 :     +- *(15) Filter (isnotnull(ws_bill_customer_sk#2979) AND isnotnull(ws_sold_date_sk#2975))
                                 :        +- *(15) ColumnarToRow
                                 :           +- FileScan parquet default.web_sales[ws_sold_date_sk#2975,ws_bill_customer_sk#2979,ws_ext_discount_amt#2997,ws_ext_sales_price#2998,ws_ext_wholesale_cost#2999,ws_ext_list_price#3000] Batched: true, DataFilters: [isnotnull(ws_bill_customer_sk#2979), isnotnull(ws_sold_date_sk#2975)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_bill_customer_sk), IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_bill_customer_sk:int,ws_ext_discount_amt:decimal(7,2),ws_ext_sales_...
                                 +- BroadcastQueryStage 20
                                    +- ReusedExchange [d_date_sk#3009, d_year#3015], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=2789]

==== q5 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[channel#3492 ASC NULLS FIRST,id#3493 ASC NULLS FIRST], output=[channel#3492,id#3493,sales#3240,returns#3241,profit#3242])
   +- *(21) HashAggregate(keys=[channel#3492, id#3493, spark_grouping_id#3491L], functions=[sum(sales#3255), sum(returns#3257), sum(profit#3233)], output=[channel#3492, id#3493, sales#3240, returns#3241, profit#3242])
      +- ShuffleQueryStage 12
         +- Exchange hashpartitioning(channel#3492, id#3493, spark_grouping_id#3491L, 20), ENSURE_REQUIREMENTS, [plan_id=7178]
            +- *(20) HashAggregate(keys=[channel#3492, id#3493, spark_grouping_id#3491L], functions=[partial_sum(sales#3255), partial_sum(returns#3257), partial_sum(profit#3233)], output=[channel#3492, id#3493, spark_grouping_id#3491L, sum#3509, isEmpty#3510, sum#3511, isEmpty#3512, sum#3513, isEmpty#3514])
               +- *(20) Expand [[sales#3255, returns#3257, profit#3233, channel#3489, id#3490, 0], [sales#3255, returns#3257, profit#3233, channel#3489, null, 1], [sales#3255, returns#3257, profit#3233, null, null, 3]], [sales#3255, returns#3257, profit#3233, channel#3492, id#3493, spark_grouping_id#3491L]
                  +- Union
                     :- *(17) HashAggregate(keys=[s_store_id#53], functions=[sum(UnscaledValue(sales_price#3245)), sum(UnscaledValue(return_amt#3247)), sum(UnscaledValue(profit#3246)), sum(UnscaledValue(net_loss#3248))], output=[sales#3255, returns#3257, profit#3233, channel#3489, id#3490])
                     :  +- ShuffleQueryStage 9
                     :     +- Exchange hashpartitioning(s_store_id#53, 20), ENSURE_REQUIREMENTS, [plan_id=6733]
                     :        +- *(10) HashAggregate(keys=[s_store_id#53], functions=[partial_sum(UnscaledValue(sales_price#3245)), partial_sum(UnscaledValue(return_amt#3247)), partial_sum(UnscaledValue(profit#3246)), partial_sum(UnscaledValue(net_loss#3248))], output=[s_store_id#53, sum#3519L, sum#3520L, sum#3521L, sum#3522L])
                     :           +- *(10) Project [sales_price#3245, profit#3246, return_amt#3247, net_loss#3248, s_store_id#53]
                     :              +- *(10) BroadcastHashJoin [store_sk#3243], [s_store_sk#52], Inner, BuildRight, false
                     :                 :- *(10) Project [store_sk#3243, sales_price#3245, profit#3246, return_amt#3247, net_loss#3248]
                     :                 :  +- *(10) BroadcastHashJoin [date_sk#3244], [d_date_sk#24], Inner, BuildRight, false
                     :                 :     :- Union
                     :                 :     :  :- *(8) Project [ss_store_sk#421 AS store_sk#3243, ss_sold_date_sk#414 AS date_sk#3244, ss_ext_sales_price#429 AS sales_price#3245, ss_net_profit#436 AS profit#3246, 0.00 AS return_amt#3247, 0.00 AS net_loss#3248]
                     :                 :     :  :  +- *(8) Filter (isnotnull(ss_sold_date_sk#414) AND isnotnull(ss_store_sk#421))
                     :                 :     :  :     +- *(8) ColumnarToRow
                     :                 :     :  :        +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_store_sk#421,ss_ext_sales_price#429,ss_net_profit#436] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#414), isnotnull(ss_store_sk#421)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_store_sk:int,ss_ext_sales_price:decimal(7,2),ss_net_profit:decimal(...
                     :                 :     :  +- *(9) Project [sr_store_sk#11 AS store_sk#3249, sr_returned_date_sk#4 AS date_sk#3250, 0.00 AS sales_price#3251, 0.00 AS profit#3252, sr_return_amt#15 AS return_amt#3253, sr_net_loss#23 AS net_loss#3254]
                     :                 :     :     +- *(9) Filter (isnotnull(sr_returned_date_sk#4) AND isnotnull(sr_store_sk#11))
                     :                 :     :        +- *(9) ColumnarToRow
                     :                 :     :           +- FileScan parquet default.store_returns[sr_returned_date_sk#4,sr_store_sk#11,sr_return_amt#15,sr_net_loss#23] Batched: true, DataFilters: [isnotnull(sr_returned_date_sk#4), isnotnull(sr_store_sk#11)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_returns], PartitionFilters: [], PushedFilters: [IsNotNull(sr_returned_date_sk), IsNotNull(sr_store_sk)], ReadSchema: struct<sr_returned_date_sk:int,sr_store_sk:int,sr_return_amt:decimal(7,2),sr_net_loss:decimal(7,2)>
                     :                 :     +- BroadcastQueryStage 0
                     :                 :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=6057]
                     :                 :           +- *(1) Project [d_date_sk#24]
                     :                 :              +- *(1) Filter (((isnotnull(d_date#26) AND (d_date#26 >= 2000-08-23)) AND (d_date#26 <= 2000-09-06)) AND isnotnull(d_date_sk#24))
                     :                 :                 +- *(1) ColumnarToRow
                     :                 :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_date#26] Batched: true, DataFilters: [isnotnull(d_date#26), (d_date#26 >= 2000-08-23), (d_date#26 <= 2000-09-06), isnotnull(d_date_sk#..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2000-08-23), LessThanOrEqual(d_date,2000-09-06), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>
                     :                 +- BroadcastQueryStage 1
                     :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=6076]
                     :                       +- *(2) Filter isnotnull(s_store_sk#52)
                     :                          +- *(2) ColumnarToRow
                     :                             +- FileScan parquet default.store[s_store_sk#52,s_store_id#53] Batched: true, DataFilters: [isnotnull(s_store_sk#52)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_id:string>
                     :- *(18) HashAggregate(keys=[cp_catalog_page_id#3319], functions=[sum(UnscaledValue(sales_price#3261)), sum(UnscaledValue(return_amt#3263)), sum(UnscaledValue(profit#3262)), sum(UnscaledValue(net_loss#3264))], output=[sales#3271, returns#3273, profit#3236, channel#3499, id#3500])
                     :  +- ShuffleQueryStage 10
                     :     +- Exchange hashpartitioning(cp_catalog_page_id#3319, 20), ENSURE_REQUIREMENTS, [plan_id=6800]
                     :        +- *(13) HashAggregate(keys=[cp_catalog_page_id#3319], functions=[partial_sum(UnscaledValue(sales_price#3261)), partial_sum(UnscaledValue(return_amt#3263)), partial_sum(UnscaledValue(profit#3262)), partial_sum(UnscaledValue(net_loss#3264))], output=[cp_catalog_page_id#3319, sum#3527L, sum#3528L, sum#3529L, sum#3530L])
                     :           +- *(13) Project [sales_price#3261, profit#3262, return_amt#3263, net_loss#3264, cp_catalog_page_id#3319]
                     :              +- *(13) BroadcastHashJoin [page_sk#3259], [cp_catalog_page_sk#3318], Inner, BuildRight, false
                     :                 :- *(13) Project [page_sk#3259, sales_price#3261, profit#3262, return_amt#3263, net_loss#3264]
                     :                 :  +- *(13) BroadcastHashJoin [date_sk#3260], [d_date_sk#3377], Inner, BuildRight, false
                     :                 :     :- Union
                     :                 :     :  :- *(11) Project [cs_catalog_page_sk#209 AS page_sk#3259, cs_sold_date_sk#197 AS date_sk#3260, cs_ext_sales_price#220 AS sales_price#3261, cs_net_profit#230 AS profit#3262, 0.00 AS return_amt#3263, 0.00 AS net_loss#3264]
                     :                 :     :  :  +- *(11) Filter (isnotnull(cs_sold_date_sk#197) AND isnotnull(cs_catalog_page_sk#209))
                     :                 :     :  :     +- *(11) ColumnarToRow
                     :                 :     :  :        +- FileScan parquet default.catalog_sales[cs_sold_date_sk#197,cs_catalog_page_sk#209,cs_ext_sales_price#220,cs_net_profit#230] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#197), isnotnull(cs_catalog_page_sk#209)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk), IsNotNull(cs_catalog_page_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_catalog_page_sk:int,cs_ext_sales_price:decimal(7,2),cs_net_profit:d...
                     :                 :     :  +- *(12) Project [cr_catalog_page_sk#3303 AS page_sk#3265, cr_returned_date_sk#3291 AS date_sk#3266, 0.00 AS sales_price#3267, 0.00 AS profit#3268, cr_return_amount#3309 AS return_amt#3269, cr_net_loss#3317 AS net_loss#3270]
                     :                 :     :     +- *(12) Filter (isnotnull(cr_returned_date_sk#3291) AND isnotnull(cr_catalog_page_sk#3303))
                     :                 :     :        +- *(12) ColumnarToRow
                     :                 :     :           +- FileScan parquet default.catalog_returns[cr_returned_date_sk#3291,cr_catalog_page_sk#3303,cr_return_amount#3309,cr_net_loss#3317] Batched: true, DataFilters: [isnotnull(cr_returned_date_sk#3291), isnotnull(cr_catalog_page_sk#3303)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_returns], PartitionFilters: [], PushedFilters: [IsNotNull(cr_returned_date_sk), IsNotNull(cr_catalog_page_sk)], ReadSchema: struct<cr_returned_date_sk:int,cr_catalog_page_sk:int,cr_return_amount:decimal(7,2),cr_net_loss:d...
                     :                 :     +- BroadcastQueryStage 3
                     :                 :        +- ReusedExchange [d_date_sk#3377], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=6057]
                     :                 +- BroadcastQueryStage 4
                     :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=6119]
                     :                       +- *(4) Filter isnotnull(cp_catalog_page_sk#3318)
                     :                          +- *(4) ColumnarToRow
                     :                             +- FileScan parquet default.catalog_page[cp_catalog_page_sk#3318,cp_catalog_page_id#3319] Batched: true, DataFilters: [isnotnull(cp_catalog_page_sk#3318)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_page], PartitionFilters: [], PushedFilters: [IsNotNull(cp_catalog_page_sk)], ReadSchema: struct<cp_catalog_page_sk:int,cp_catalog_page_id:string>
                     +- *(19) HashAggregate(keys=[web_site_id#3352], functions=[sum(UnscaledValue(sales_price#3277)), sum(UnscaledValue(return_amt#3279)), sum(UnscaledValue(profit#3278)), sum(UnscaledValue(net_loss#3280))], output=[sales#3287, returns#3289, profit#3239, channel#3501, id#3502])
                        +- ShuffleQueryStage 11
                           +- Exchange hashpartitioning(web_site_id#3352, 20), ENSURE_REQUIREMENTS, [plan_id=7049]
                              +- *(16) HashAggregate(keys=[web_site_id#3352], functions=[partial_sum(UnscaledValue(sales_price#3277)), partial_sum(UnscaledValue(return_amt#3279)), partial_sum(UnscaledValue(profit#3278)), partial_sum(UnscaledValue(net_loss#3280))], output=[web_site_id#3352, sum#3535L, sum#3536L, sum#3537L, sum#3538L])
                                 +- *(16) Project [sales_price#3277, profit#3278, return_amt#3279, net_loss#3280, web_site_id#3352]
                                    +- *(16) BroadcastHashJoin [wsr_web_site_sk#3275], [web_site_sk#3351], Inner, BuildRight, false
                                       :- *(16) Project [wsr_web_site_sk#3275, sales_price#3277, profit#3278, return_amt#3279, net_loss#3280]
                                       :  +- *(16) BroadcastHashJoin [date_sk#3276], [d_date_sk#3439], Inner, BuildRight, false
                                       :     :- Union
                                       :     :  :- *(14) Project [ws_web_site_sk#176 AS wsr_web_site_sk#3275, ws_sold_date_sk#163 AS date_sk#3276, ws_ext_sales_price#186 AS sales_price#3277, ws_net_profit#196 AS profit#3278, 0.00 AS return_amt#3279, 0.00 AS net_loss#3280]
                                       :     :  :  +- *(14) Filter (isnotnull(ws_sold_date_sk#163) AND isnotnull(ws_web_site_sk#176))
                                       :     :  :     +- *(14) ColumnarToRow
                                       :     :  :        +- FileScan parquet default.web_sales[ws_sold_date_sk#163,ws_web_site_sk#176,ws_ext_sales_price#186,ws_net_profit#196] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#163), isnotnull(ws_web_site_sk#176)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_web_site_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_web_site_sk:int,ws_ext_sales_price:decimal(7,2),ws_net_profit:decim...
                                       :     :  +- *(15) Project [ws_web_site_sk#3418 AS wsr_web_site_sk#3281, wr_returned_date_sk#3327 AS date_sk#3282, 0.00 AS sales_price#3283, 0.00 AS profit#3284, wr_return_amt#3342 AS return_amt#3285, wr_net_loss#3350 AS net_loss#3286]
                                       :     :     +- *(15) BroadcastHashJoin [wr_item_sk#3329, wr_order_number#3340], [ws_item_sk#3408, ws_order_number#3422], Inner, BuildLeft, false
                                       :     :        :- BroadcastQueryStage 5
                                       :     :        :  +- BroadcastExchange HashedRelationBroadcastMode(List((shiftleft(cast(input[1, int, true] as bigint), 32) | (cast(input[2, int, true] as bigint) & 4294967295))),false), [plan_id=6139]
                                       :     :        :     +- *(5) Filter isnotnull(wr_returned_date_sk#3327)
                                       :     :        :        +- *(5) ColumnarToRow
                                       :     :        :           +- FileScan parquet default.web_returns[wr_returned_date_sk#3327,wr_item_sk#3329,wr_order_number#3340,wr_return_amt#3342,wr_net_loss#3350] Batched: true, DataFilters: [isnotnull(wr_returned_date_sk#3327)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_returns], PartitionFilters: [], PushedFilters: [IsNotNull(wr_returned_date_sk)], ReadSchema: struct<wr_returned_date_sk:int,wr_item_sk:int,wr_order_number:int,wr_return_amt:decimal(7,2),wr_n...
                                       :     :        +- *(15) Filter ((isnotnull(ws_item_sk#3408) AND isnotnull(ws_order_number#3422)) AND isnotnull(ws_web_site_sk#3418))
                                       :     :           +- *(15) ColumnarToRow
                                       :     :              +- FileScan parquet default.web_sales[ws_item_sk#3408,ws_web_site_sk#3418,ws_order_number#3422] Batched: true, DataFilters: [isnotnull(ws_item_sk#3408), isnotnull(ws_order_number#3422), isnotnull(ws_web_site_sk#3418)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_item_sk), IsNotNull(ws_order_number), IsNotNull(ws_web_site_sk)], ReadSchema: struct<ws_item_sk:int,ws_web_site_sk:int,ws_order_number:int>
                                       :     +- BroadcastQueryStage 7
                                       :        +- ReusedExchange [d_date_sk#3439], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=6057]
                                       +- BroadcastQueryStage 8
                                          +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=6180]
                                             +- *(7) Filter isnotnull(web_site_sk#3351)
                                                +- *(7) ColumnarToRow
                                                   +- FileScan parquet default.web_site[web_site_sk#3351,web_site_id#3352] Batched: true, DataFilters: [isnotnull(web_site_sk#3351)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_site], PartitionFilters: [], PushedFilters: [IsNotNull(web_site_sk)], ReadSchema: struct<web_site_sk:int,web_site_id:string>

==== q7 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[i_item_id#438 ASC NULLS FIRST], output=[i_item_id#438,agg1#3629,agg2#3630,agg3#3631,agg4#3632])
   +- *(6) HashAggregate(keys=[i_item_id#438], functions=[avg(ss_quantity#424), avg(UnscaledValue(ss_list_price#426)), avg(UnscaledValue(ss_coupon_amt#433)), avg(UnscaledValue(ss_sales_price#427))], output=[i_item_id#438, agg1#3629, agg2#3630, agg3#3631, agg4#3632])
      +- ShuffleQueryStage 4
         +- Exchange hashpartitioning(i_item_id#438, 20), ENSURE_REQUIREMENTS, [plan_id=7729]
            +- *(5) HashAggregate(keys=[i_item_id#438], functions=[partial_avg(ss_quantity#424), partial_avg(UnscaledValue(ss_list_price#426)), partial_avg(UnscaledValue(ss_coupon_amt#433)), partial_avg(UnscaledValue(ss_sales_price#427))], output=[i_item_id#438, sum#3680, count#3681L, sum#3682, count#3683L, sum#3684, count#3685L, sum#3686, count#3687L])
               +- *(5) Project [ss_quantity#424, ss_list_price#426, ss_sales_price#427, ss_coupon_amt#433, i_item_id#438]
                  +- *(5) BroadcastHashJoin [ss_promo_sk#422], [p_promo_sk#3642], Inner, BuildRight, false
                     :- *(5) Project [ss_promo_sk#422, ss_quantity#424, ss_list_price#426, ss_sales_price#427, ss_coupon_amt#433, i_item_id#438]
                     :  +- *(5) BroadcastHashJoin [ss_item_sk#416], [i_item_sk#437], Inner, BuildRight, false
                     :     :- *(5) Project [ss_item_sk#416, ss_promo_sk#422, ss_quantity#424, ss_list_price#426, ss_sales_price#427, ss_coupon_amt#433]
                     :     :  +- *(5) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#24], Inner, BuildRight, false
                     :     :     :- *(5) Project [ss_sold_date_sk#414, ss_item_sk#416, ss_promo_sk#422, ss_quantity#424, ss_list_price#426, ss_sales_price#427, ss_coupon_amt#433]
                     :     :     :  +- *(5) BroadcastHashJoin [ss_cdemo_sk#418], [cd_demo_sk#3633], Inner, BuildRight, false
                     :     :     :     :- *(5) Filter (((isnotnull(ss_cdemo_sk#418) AND isnotnull(ss_sold_date_sk#414)) AND isnotnull(ss_item_sk#416)) AND isnotnull(ss_promo_sk#422))
                     :     :     :     :  +- *(5) ColumnarToRow
                     :     :     :     :     +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_item_sk#416,ss_cdemo_sk#418,ss_promo_sk#422,ss_quantity#424,ss_list_price#426,ss_sales_price#427,ss_coupon_amt#433] Batched: true, DataFilters: [isnotnull(ss_cdemo_sk#418), isnotnull(ss_sold_date_sk#414), isnotnull(ss_item_sk#416), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_cdemo_sk), IsNotNull(ss_sold_date_sk), IsNotNull(ss_item_sk), IsNotNull(ss_promo_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_cdemo_sk:int,ss_promo_sk:int,ss_quantity:int,ss_list...
                     :     :     :     +- BroadcastQueryStage 0
                     :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=7377]
                     :     :     :           +- *(1) Project [cd_demo_sk#3633]
                     :     :     :              +- *(1) Filter ((((((isnotnull(cd_gender#3634) AND isnotnull(cd_marital_status#3635)) AND isnotnull(cd_education_status#3636)) AND (cd_gender#3634 = M)) AND (cd_marital_status#3635 = S)) AND (cd_education_status#3636 = College             )) AND isnotnull(cd_demo_sk#3633))
                     :     :     :                 +- *(1) ColumnarToRow
                     :     :     :                    +- FileScan parquet default.customer_demographics[cd_demo_sk#3633,cd_gender#3634,cd_marital_status#3635,cd_education_status#3636] Batched: true, DataFilters: [isnotnull(cd_gender#3634), isnotnull(cd_marital_status#3635), isnotnull(cd_education_status#3636..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer_demographics], PartitionFilters: [], PushedFilters: [IsNotNull(cd_gender), IsNotNull(cd_marital_status), IsNotNull(cd_education_status), EqualTo(cd_g..., ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string>
                     :     :     +- BroadcastQueryStage 1
                     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=7398]
                     :     :           +- *(2) Project [d_date_sk#24]
                     :     :              +- *(2) Filter ((isnotnull(d_year#30) AND (d_year#30 = 2000)) AND isnotnull(d_date_sk#24))
                     :     :                 +- *(2) ColumnarToRow
                     :     :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30] Batched: true, DataFilters: [isnotnull(d_year#30), (d_year#30 = 2000), isnotnull(d_date_sk#24)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                     :     +- BroadcastQueryStage 2
                     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=7417]
                     :           +- *(3) Filter isnotnull(i_item_sk#437)
                     :              +- *(3) ColumnarToRow
                     :                 +- FileScan parquet default.item[i_item_sk#437,i_item_id#438] Batched: true, DataFilters: [isnotnull(i_item_sk#437)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string>
                     +- BroadcastQueryStage 3
                        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=7436]
                           +- *(4) Project [p_promo_sk#3642]
                              +- *(4) Filter (((p_channel_email#3651 = N) OR (p_channel_event#3656 = N)) AND isnotnull(p_promo_sk#3642))
                                 +- *(4) ColumnarToRow
                                    +- FileScan parquet default.promotion[p_promo_sk#3642,p_channel_email#3651,p_channel_event#3656] Batched: true, DataFilters: [((p_channel_email#3651 = N) OR (p_channel_event#3656 = N)), isnotnull(p_promo_sk#3642)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/promotion], PartitionFilters: [], PushedFilters: [Or(EqualTo(p_channel_email,N),EqualTo(p_channel_event,N)), IsNotNull(p_promo_sk)], ReadSchema: struct<p_promo_sk:int,p_channel_email:string,p_channel_event:string>


==== q8 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[s_store_name#57 ASC NULLS FIRST], output=[s_store_name#57,sum(ss_net_profit)#3746])
   +- *(10) HashAggregate(keys=[s_store_name#57], functions=[sum(UnscaledValue(ss_net_profit#436))], output=[s_store_name#57, sum(ss_net_profit)#3746])
      +- ShuffleQueryStage 8
         +- Exchange hashpartitioning(s_store_name#57, 20), ENSURE_REQUIREMENTS, [plan_id=9025]
            +- *(9) HashAggregate(keys=[s_store_name#57], functions=[partial_sum(UnscaledValue(ss_net_profit#436))], output=[s_store_name#57, sum#3750L])
               +- *(9) Project [ss_net_profit#436, s_store_name#57]
                  +- *(9) BroadcastHashJoin [substr(s_zip#77, 1, 2)], [substr(ca_zip#3712, 1, 2)], Inner, BuildRight, false
                     :- *(9) Project [ss_net_profit#436, s_store_name#57, s_zip#77]
                     :  +- *(9) BroadcastHashJoin [ss_store_sk#421], [s_store_sk#52], Inner, BuildRight, false
                     :     :- *(9) Project [ss_store_sk#421, ss_net_profit#436]
                     :     :  +- *(9) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#24], Inner, BuildRight, false
                     :     :     :- *(9) Filter (isnotnull(ss_sold_date_sk#414) AND isnotnull(ss_store_sk#421))
                     :     :     :  +- *(9) ColumnarToRow
                     :     :     :     +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_store_sk#421,ss_net_profit#436] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#414), isnotnull(ss_store_sk#421)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_store_sk:int,ss_net_profit:decimal(7,2)>
                     :     :     +- BroadcastQueryStage 0
                     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=8026]
                     :     :           +- *(1) Project [d_date_sk#24]
                     :     :              +- *(1) Filter ((((isnotnull(d_qoy#34) AND isnotnull(d_year#30)) AND (d_qoy#34 = 2)) AND (d_year#30 = 1998)) AND isnotnull(d_date_sk#24))
                     :     :                 +- *(1) ColumnarToRow
                     :     :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30,d_qoy#34] Batched: true, DataFilters: [isnotnull(d_qoy#34), isnotnull(d_year#30), (d_qoy#34 = 2), (d_year#30 = 1998), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,2), EqualTo(d_year,1998), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>
                     :     +- BroadcastQueryStage 1
                     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=8045]
                     :           +- *(2) Filter (isnotnull(s_store_sk#52) AND isnotnull(s_zip#77))
                     :              +- *(2) ColumnarToRow
                     :                 +- FileScan parquet default.store[s_store_sk#52,s_store_name#57,s_zip#77] Batched: true, DataFilters: [isnotnull(s_store_sk#52), isnotnull(s_zip#77)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk), IsNotNull(s_zip)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_zip:string>
                     +- BroadcastQueryStage 7
                        +- BroadcastExchange HashedRelationBroadcastMode(List(substr(input[0, string, true], 1, 2)),false), [plan_id=8933]
                           +- *(8) HashAggregate(keys=[ca_zip#3712], functions=[], output=[ca_zip#3712])
                              +- ShuffleQueryStage 6
                                 +- Exchange hashpartitioning(ca_zip#3712, 20), ENSURE_REQUIREMENTS, [plan_id=8845]
                                    +- *(7) HashAggregate(keys=[ca_zip#3712], functions=[], output=[ca_zip#3712])
                                       +- *(7) Project [substr(ca_zip#3726, 1, 5) AS ca_zip#3712]
                                          +- *(7) BroadcastHashJoin [coalesce(substr(ca_zip#3726, 1, 5), ), isnull(substr(ca_zip#3726, 1, 5))], [coalesce(ca_zip#3713, ), isnull(ca_zip#3713)], LeftSemi, BuildRight, false
                                             :- AQEShuffleRead local
                                             :  +- ShuffleQueryStage 2
                                             :     +- Exchange hashpartitioning(coalesce(substr(ca_zip#3726, 1, 5), ), isnull(substr(ca_zip#3726, 1, 5)), 20), ENSURE_REQUIREMENTS, [plan_id=8062]
                                             :        +- *(3) Filter (substr(ca_zip#3726, 1, 5) INSET 10144, 10336, 10390, 10445, 10516, 10567, 11101, 11356, 11376, 11489, 11634, 11928, 12305, 13354, 13375, 13376, 13394, 13595, 13695, 13955, 14060, 14089, 14171, 14328, 14663, 14867, 14922, 15126, 15146, 15371, 15455, 15559, 15723, 15734, 15765, 15798, 15882, 16021, 16725, 16807, 17043, 17183, 17871, 17879, 17920, 18119, 18270, 18376, 18383, 18426, 18652, 18767, 18799, 18840, 18842, 18845, 18906, 19430, 19505, 19512, 19515, 19736, 19769, 19849, 20004, 20260, 20548, 21076, 21195, 21286, 21309, 21337, 21756, 22152, 22245, 22246, 22351, 22437, 22461, 22685, 22744, 22752, 22927, 23006, 23470, 23932, 23968, 24128, 24206, 24317, 24610, 24671, 24676, 24996, 25003, 25103, 25280, 25486, 25631, 25733, 25782, 25858, 25989, 26065, 26105, 26231, 26233, 26653, 26689, 26859, 27068, 27156, 27385, 27700, 28286, 28488, 28545, 28577, 28587, 28709, 28810, 28898, 28915, 29178, 29741, 29839, 30010, 30122, 30431, 30450, 30469, 30625, 30903, 31016, 31029, 31387, 31671, 31880, 32213, 32754, 33123, 33282, 33515, 33786, 34102, 34322, 34425, 35258, 35458, 35474, 35576, 35850, 35942, 36233, 36420, 36446, 36495, 36634, 37125, 37126, 37930, 38122, 38193, 38415, 38607, 38935, 39127, 39192, 39371, 39516, 39736, 39861, 39972, 40081, 40162, 40558, 40604, 41248, 41367, 41368, 41766, 41918, 42029, 42666, 42961, 43285, 43848, 43933, 44165, 44438, 45200, 45266, 45375, 45549, 45692, 45721, 45748, 46081, 46136, 46820, 47305, 47537, 47770, 48033, 48425, 48583, 49130, 49156, 49448, 50016, 50298, 50308, 50412, 51061, 51103, 51200, 51211, 51622, 51649, 51650, 51798, 51949, 52867, 53179, 53268, 53535, 53672, 54364, 54601, 54917, 55253, 55307, 55565, 56240, 56458, 56529, 56571, 56575, 56616, 56691, 56910, 57047, 57647, 57665, 57834, 57855, 58048, 58058, 58078, 58263, 58470, 58943, 59166, 59402, 60099, 60279, 60576, 61265, 61547, 61810, 61860, 62377, 62496, 62878, 62971, 63089, 63193, 63435, 63792, 63837, 63981, 64034, 64147, 64457, 64528, 64544, 65084, 65164, 66162, 66708, 66864, 67030, 67301, 67467, 67473, 67853, 67875, 67897, 68014, 68100, 68101, 68309, 68341, 68621, 68786, 68806, 68880, 68893, 68908, 69035, 69399, 69913, 69952, 70372, 70466, 70738, 71256, 71286, 71791, 71954, 72013, 72151, 72175, 72305, 72325, 72425, 72550, 72823, 73134, 73171, 73241, 73273, 73520, 73650, 74351, 75691, 76107, 76231, 76232, 76614, 76638, 76698, 77191, 77556, 77610, 77721, 78451, 78567, 78668, 78890, 79077, 79777, 79994, 81019, 81096, 81312, 81426, 82136, 82276, 82636, 83041, 83144, 83444, 83849, 83921, 83926, 83933, 84093, 84935, 85816, 86057, 86198, 86284, 86379, 87343, 87501, 87816, 88086, 88190, 88424, 88885, 89091, 89360, 90225, 90257, 90578, 91068, 91110, 91137, 91393, 92712, 94167, 94627, 94898, 94945, 94983, 96451, 96576, 96765, 96888, 96976, 97189, 97789, 98025, 98235, 98294, 98359, 98569, 99076, 99543 AND isnotnull(substr(ca_zip#3726, 1, 5)))
                                             :           +- *(3) ColumnarToRow
                                             :              +- FileScan parquet default.customer_address[ca_zip#3726] Batched: true, DataFilters: [substr(ca_zip#3726, 1, 5) INSET 10144, 10336, 10390, 10445, 10516, 10567, 11101, 11356, 11376, 1..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer_address], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<ca_zip:string>
                                             +- BroadcastQueryStage 5
                                                +- BroadcastExchange HashedRelationBroadcastMode(List(coalesce(input[0, string, true], ), isnull(input[0, string, true])),false), [plan_id=8724]
                                                   +- *(6) Project [ca_zip#3713]
                                                      +- *(6) Filter (cnt#3714L > 10)
                                                         +- *(6) HashAggregate(keys=[ca_zip#3739], functions=[count(1)], output=[ca_zip#3713, cnt#3714L])
                                                            +- ShuffleQueryStage 4
                                                               +- Exchange hashpartitioning(ca_zip#3739, 20), ENSURE_REQUIREMENTS, [plan_id=8377]
                                                                  +- *(5) HashAggregate(keys=[ca_zip#3739], functions=[partial_count(1)], output=[ca_zip#3739, count#3752L])
                                                                     +- *(5) Project [ca_zip#3739]
                                                                        +- *(5) BroadcastHashJoin [ca_address_sk#3730], [c_current_addr_sk#85], Inner, BuildLeft, false
                                                                           :- BroadcastQueryStage 3
                                                                           :  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=8079]
                                                                           :     +- *(4) Filter isnotnull(ca_address_sk#3730)
                                                                           :        +- *(4) ColumnarToRow
                                                                           :           +- FileScan parquet default.customer_address[ca_address_sk#3730,ca_zip#3739] Batched: true, DataFilters: [isnotnull(ca_address_sk#3730)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_zip:string>
                                                                           +- *(5) Project [c_current_addr_sk#85]
                                                                              +- *(5) Filter ((isnotnull(c_preferred_cust_flag#91) AND (c_preferred_cust_flag#91 = Y)) AND isnotnull(c_current_addr_sk#85))
                                                                                 +- *(5) ColumnarToRow
                                                                                    +- FileScan parquet default.customer[c_current_addr_sk#85,c_preferred_cust_flag#91] Batched: true, DataFilters: [isnotnull(c_preferred_cust_flag#91), (c_preferred_cust_flag#91 = Y), isnotnull(c_current_addr_sk..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_preferred_cust_flag), EqualTo(c_preferred_cust_flag,Y), IsNotNull(c_current_addr_sk)], ReadSchema: struct<c_current_addr_sk:int,c_preferred_cust_flag:string>

==== q9 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   *(1) Project [CASE WHEN (Subquery subquery#3761, [id=#9086].count(1) > 62316685) THEN ReusedSubquery Subquery subquery#3761, [id=#9086].avg(ss_ext_discount_amt) ELSE ReusedSubquery Subquery subquery#3761, [id=#9086].avg(ss_net_paid) END AS bucket1#3764, CASE WHEN (Subquery subquery#3765, [id=#9137].count(1) > 19045798) THEN ReusedSubquery Subquery subquery#3765, [id=#9137].avg(ss_ext_discount_amt) ELSE ReusedSubquery Subquery subquery#3765, [id=#9137].avg(ss_net_paid) END AS bucket2#3768, CASE WHEN (Subquery subquery#3769, [id=#9188].count(1) > 365541424) THEN ReusedSubquery Subquery subquery#3769, [id=#9188].avg(ss_ext_discount_amt) ELSE ReusedSubquery Subquery subquery#3769, [id=#9188].avg(ss_net_paid) END AS bucket3#3772, CASE WHEN (Subquery subquery#3773, [id=#9239].count(1) > 216357808) THEN ReusedSubquery Subquery subquery#3773, [id=#9239].avg(ss_ext_discount_amt) ELSE ReusedSubquery Subquery subquery#3773, [id=#9239].avg(ss_net_paid) END AS bucket4#3776, CASE WHEN (Subquery subquery#3777, [id=#9290].count(1) > 184483884) THEN ReusedSubquery Subquery subquery#3777, [id=#9290].avg(ss_ext_discount_amt) ELSE ReusedSubquery Subquery subquery#3777, [id=#9290].avg(ss_net_paid) END AS bucket5#3780]
   :  :- Subquery subquery#3761, [id=#9086]
   :  :  +- AdaptiveSparkPlan isFinalPlan=true
         +- == Final Plan ==
            *(2) Project [named_struct(count(1), count(1)#3785L, avg(ss_ext_discount_amt), avg(ss_ext_discount_amt)#3787, avg(ss_net_paid), avg(ss_net_paid)#3789) AS mergedValue#4185]
            +- *(2) HashAggregate(keys=[], functions=[count(1), avg(UnscaledValue(ss_ext_discount_amt#428)), avg(UnscaledValue(ss_net_paid#434))], output=[count(1)#3785L, avg(ss_ext_discount_amt)#3787, avg(ss_net_paid)#3789])
               +- ShuffleQueryStage 0
                  +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=9582]
                     +- *(1) HashAggregate(keys=[], functions=[partial_count(1), partial_avg(UnscaledValue(ss_ext_discount_amt#428)), partial_avg(UnscaledValue(ss_net_paid#434))], output=[count#4190L, sum#4191, count#4192L, sum#4193, count#4194L])
                        +- *(1) Project [ss_ext_discount_amt#428, ss_net_paid#434]
                           +- *(1) Filter ((isnotnull(ss_quantity#424) AND (ss_quantity#424 >= 1)) AND (ss_quantity#424 <= 20))
                              +- *(1) ColumnarToRow
                                 +- FileScan parquet default.store_sales[ss_quantity#424,ss_ext_discount_amt#428,ss_net_paid#434] Batched: true, DataFilters: [isnotnull(ss_quantity#424), (ss_quantity#424 >= 1), (ss_quantity#424 <= 20)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_quantity), GreaterThanOrEqual(ss_quantity,1), LessThanOrEqual(ss_quantity,20)], ReadSchema: struct<ss_quantity:int,ss_ext_discount_amt:decimal(7,2),ss_net_paid:decimal(7,2)>
         +- == Initial Plan ==
            Project [named_struct(count(1), count(1)#3785L, avg(ss_ext_discount_amt), avg(ss_ext_discount_amt)#3787, avg(ss_net_paid), avg(ss_net_paid)#3789) AS mergedValue#4185]
            +- HashAggregate(keys=[], functions=[count(1), avg(UnscaledValue(ss_ext_discount_amt#428)), avg(UnscaledValue(ss_net_paid#434))], output=[count(1)#3785L, avg(ss_ext_discount_amt)#3787, avg(ss_net_paid)#3789])
               +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=9083]
                  +- HashAggregate(keys=[], functions=[partial_count(1), partial_avg(UnscaledValue(ss_ext_discount_amt#428)), partial_avg(UnscaledValue(ss_net_paid#434))], output=[count#4190L, sum#4191, count#4192L, sum#4193, count#4194L])
                     +- Project [ss_ext_discount_amt#428, ss_net_paid#434]
                        +- Filter ((isnotnull(ss_quantity#424) AND (ss_quantity#424 >= 1)) AND (ss_quantity#424 <= 20))
                           +- FileScan parquet default.store_sales[ss_quantity#424,ss_ext_discount_amt#428,ss_net_paid#434] Batched: true, DataFilters: [isnotnull(ss_quantity#424), (ss_quantity#424 >= 1), (ss_quantity#424 <= 20)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_quantity), GreaterThanOrEqual(ss_quantity,1), LessThanOrEqual(ss_quantity,20)], ReadSchema: struct<ss_quantity:int,ss_ext_discount_amt:decimal(7,2),ss_net_paid:decimal(7,2)>
   :  :- ReusedSubquery Subquery subquery#3761, [id=#9086]
   :  :- ReusedSubquery Subquery subquery#3761, [id=#9086]
   :  :- Subquery subquery#3765, [id=#9137]
   :  :  +- AdaptiveSparkPlan isFinalPlan=true
         +- == Final Plan ==
            *(2) Project [named_struct(count(1), count(1)#3791L, avg(ss_ext_discount_amt), avg(ss_ext_discount_amt)#3793, avg(ss_net_paid), avg(ss_net_paid)#3795) AS mergedValue#4186]
            +- *(2) HashAggregate(keys=[], functions=[count(1), avg(UnscaledValue(ss_ext_discount_amt#3875)), avg(UnscaledValue(ss_net_paid#3881))], output=[count(1)#3791L, avg(ss_ext_discount_amt)#3793, avg(ss_net_paid)#3795])
               +- ShuffleQueryStage 0
                  +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=9580]
                     +- *(1) HashAggregate(keys=[], functions=[partial_count(1), partial_avg(UnscaledValue(ss_ext_discount_amt#3875)), partial_avg(UnscaledValue(ss_net_paid#3881))], output=[count#4195L, sum#4196, count#4197L, sum#4198, count#4199L])
                        +- *(1) Project [ss_ext_discount_amt#3875, ss_net_paid#3881]
                           +- *(1) Filter ((isnotnull(ss_quantity#3871) AND (ss_quantity#3871 >= 21)) AND (ss_quantity#3871 <= 40))
                              +- *(1) ColumnarToRow
                                 +- FileScan parquet default.store_sales[ss_quantity#3871,ss_ext_discount_amt#3875,ss_net_paid#3881] Batched: true, DataFilters: [isnotnull(ss_quantity#3871), (ss_quantity#3871 >= 21), (ss_quantity#3871 <= 40)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_quantity), GreaterThanOrEqual(ss_quantity,21), LessThanOrEqual(ss_quantity,40)], ReadSchema: struct<ss_quantity:int,ss_ext_discount_amt:decimal(7,2),ss_net_paid:decimal(7,2)>
         +- == Initial Plan ==
            Project [named_struct(count(1), count(1)#3791L, avg(ss_ext_discount_amt), avg(ss_ext_discount_amt)#3793, avg(ss_net_paid), avg(ss_net_paid)#3795) AS mergedValue#4186]
            +- HashAggregate(keys=[], functions=[count(1), avg(UnscaledValue(ss_ext_discount_amt#3875)), avg(UnscaledValue(ss_net_paid#3881))], output=[count(1)#3791L, avg(ss_ext_discount_amt)#3793, avg(ss_net_paid)#3795])
               +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=9134]
                  +- HashAggregate(keys=[], functions=[partial_count(1), partial_avg(UnscaledValue(ss_ext_discount_amt#3875)), partial_avg(UnscaledValue(ss_net_paid#3881))], output=[count#4195L, sum#4196, count#4197L, sum#4198, count#4199L])
                     +- Project [ss_ext_discount_amt#3875, ss_net_paid#3881]
                        +- Filter ((isnotnull(ss_quantity#3871) AND (ss_quantity#3871 >= 21)) AND (ss_quantity#3871 <= 40))
                           +- FileScan parquet default.store_sales[ss_quantity#3871,ss_ext_discount_amt#3875,ss_net_paid#3881] Batched: true, DataFilters: [isnotnull(ss_quantity#3871), (ss_quantity#3871 >= 21), (ss_quantity#3871 <= 40)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_quantity), GreaterThanOrEqual(ss_quantity,21), LessThanOrEqual(ss_quantity,40)], ReadSchema: struct<ss_quantity:int,ss_ext_discount_amt:decimal(7,2),ss_net_paid:decimal(7,2)>
   :  :- ReusedSubquery Subquery subquery#3765, [id=#9137]
   :  :- ReusedSubquery Subquery subquery#3765, [id=#9137]
   :  :- Subquery subquery#3769, [id=#9188]
   :  :  +- AdaptiveSparkPlan isFinalPlan=true
         +- == Final Plan ==
            *(2) Project [named_struct(count(1), count(1)#3797L, avg(ss_ext_discount_amt), avg(ss_ext_discount_amt)#3799, avg(ss_net_paid), avg(ss_net_paid)#3801) AS mergedValue#4187]
            +- *(2) HashAggregate(keys=[], functions=[count(1), avg(UnscaledValue(ss_ext_discount_amt#3944)), avg(UnscaledValue(ss_net_paid#3950))], output=[count(1)#3797L, avg(ss_ext_discount_amt)#3799, avg(ss_net_paid)#3801])
               +- ShuffleQueryStage 0
                  +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=9588]
                     +- *(1) HashAggregate(keys=[], functions=[partial_count(1), partial_avg(UnscaledValue(ss_ext_discount_amt#3944)), partial_avg(UnscaledValue(ss_net_paid#3950))], output=[count#4200L, sum#4201, count#4202L, sum#4203, count#4204L])
                        +- *(1) Project [ss_ext_discount_amt#3944, ss_net_paid#3950]
                           +- *(1) Filter ((isnotnull(ss_quantity#3940) AND (ss_quantity#3940 >= 41)) AND (ss_quantity#3940 <= 60))
                              +- *(1) ColumnarToRow
                                 +- FileScan parquet default.store_sales[ss_quantity#3940,ss_ext_discount_amt#3944,ss_net_paid#3950] Batched: true, DataFilters: [isnotnull(ss_quantity#3940), (ss_quantity#3940 >= 41), (ss_quantity#3940 <= 60)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_quantity), GreaterThanOrEqual(ss_quantity,41), LessThanOrEqual(ss_quantity,60)], ReadSchema: struct<ss_quantity:int,ss_ext_discount_amt:decimal(7,2),ss_net_paid:decimal(7,2)>
         +- == Initial Plan ==
            Project [named_struct(count(1), count(1)#3797L, avg(ss_ext_discount_amt), avg(ss_ext_discount_amt)#3799, avg(ss_net_paid), avg(ss_net_paid)#3801) AS mergedValue#4187]
            +- HashAggregate(keys=[], functions=[count(1), avg(UnscaledValue(ss_ext_discount_amt#3944)), avg(UnscaledValue(ss_net_paid#3950))], output=[count(1)#3797L, avg(ss_ext_discount_amt)#3799, avg(ss_net_paid)#3801])
               +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=9185]
                  +- HashAggregate(keys=[], functions=[partial_count(1), partial_avg(UnscaledValue(ss_ext_discount_amt#3944)), partial_avg(UnscaledValue(ss_net_paid#3950))], output=[count#4200L, sum#4201, count#4202L, sum#4203, count#4204L])
                     +- Project [ss_ext_discount_amt#3944, ss_net_paid#3950]
                        +- Filter ((isnotnull(ss_quantity#3940) AND (ss_quantity#3940 >= 41)) AND (ss_quantity#3940 <= 60))
                           +- FileScan parquet default.store_sales[ss_quantity#3940,ss_ext_discount_amt#3944,ss_net_paid#3950] Batched: true, DataFilters: [isnotnull(ss_quantity#3940), (ss_quantity#3940 >= 41), (ss_quantity#3940 <= 60)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_quantity), GreaterThanOrEqual(ss_quantity,41), LessThanOrEqual(ss_quantity,60)], ReadSchema: struct<ss_quantity:int,ss_ext_discount_amt:decimal(7,2),ss_net_paid:decimal(7,2)>
   :  :- ReusedSubquery Subquery subquery#3769, [id=#9188]
   :  :- ReusedSubquery Subquery subquery#3769, [id=#9188]
   :  :- Subquery subquery#3773, [id=#9239]
   :  :  +- AdaptiveSparkPlan isFinalPlan=true
         +- == Final Plan ==
            *(2) Project [named_struct(count(1), count(1)#3803L, avg(ss_ext_discount_amt), avg(ss_ext_discount_amt)#3805, avg(ss_net_paid), avg(ss_net_paid)#3807) AS mergedValue#4188]
            +- *(2) HashAggregate(keys=[], functions=[count(1), avg(UnscaledValue(ss_ext_discount_amt#4013)), avg(UnscaledValue(ss_net_paid#4019))], output=[count(1)#3803L, avg(ss_ext_discount_amt)#3805, avg(ss_net_paid)#3807])
               +- ShuffleQueryStage 0
                  +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=9602]
                     +- *(1) HashAggregate(keys=[], functions=[partial_count(1), partial_avg(UnscaledValue(ss_ext_discount_amt#4013)), partial_avg(UnscaledValue(ss_net_paid#4019))], output=[count#4205L, sum#4206, count#4207L, sum#4208, count#4209L])
                        +- *(1) Project [ss_ext_discount_amt#4013, ss_net_paid#4019]
                           +- *(1) Filter ((isnotnull(ss_quantity#4009) AND (ss_quantity#4009 >= 61)) AND (ss_quantity#4009 <= 80))
                              +- *(1) ColumnarToRow
                                 +- FileScan parquet default.store_sales[ss_quantity#4009,ss_ext_discount_amt#4013,ss_net_paid#4019] Batched: true, DataFilters: [isnotnull(ss_quantity#4009), (ss_quantity#4009 >= 61), (ss_quantity#4009 <= 80)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_quantity), GreaterThanOrEqual(ss_quantity,61), LessThanOrEqual(ss_quantity,80)], ReadSchema: struct<ss_quantity:int,ss_ext_discount_amt:decimal(7,2),ss_net_paid:decimal(7,2)>
         +- == Initial Plan ==
            Project [named_struct(count(1), count(1)#3803L, avg(ss_ext_discount_amt), avg(ss_ext_discount_amt)#3805, avg(ss_net_paid), avg(ss_net_paid)#3807) AS mergedValue#4188]
            +- HashAggregate(keys=[], functions=[count(1), avg(UnscaledValue(ss_ext_discount_amt#4013)), avg(UnscaledValue(ss_net_paid#4019))], output=[count(1)#3803L, avg(ss_ext_discount_amt)#3805, avg(ss_net_paid)#3807])
               +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=9236]
                  +- HashAggregate(keys=[], functions=[partial_count(1), partial_avg(UnscaledValue(ss_ext_discount_amt#4013)), partial_avg(UnscaledValue(ss_net_paid#4019))], output=[count#4205L, sum#4206, count#4207L, sum#4208, count#4209L])
                     +- Project [ss_ext_discount_amt#4013, ss_net_paid#4019]
                        +- Filter ((isnotnull(ss_quantity#4009) AND (ss_quantity#4009 >= 61)) AND (ss_quantity#4009 <= 80))
                           +- FileScan parquet default.store_sales[ss_quantity#4009,ss_ext_discount_amt#4013,ss_net_paid#4019] Batched: true, DataFilters: [isnotnull(ss_quantity#4009), (ss_quantity#4009 >= 61), (ss_quantity#4009 <= 80)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_quantity), GreaterThanOrEqual(ss_quantity,61), LessThanOrEqual(ss_quantity,80)], ReadSchema: struct<ss_quantity:int,ss_ext_discount_amt:decimal(7,2),ss_net_paid:decimal(7,2)>
   :  :- ReusedSubquery Subquery subquery#3773, [id=#9239]
   :  :- ReusedSubquery Subquery subquery#3773, [id=#9239]
   :  :- Subquery subquery#3777, [id=#9290]
   :  :  +- AdaptiveSparkPlan isFinalPlan=true
         +- == Final Plan ==
            *(2) Project [named_struct(count(1), count(1)#3809L, avg(ss_ext_discount_amt), avg(ss_ext_discount_amt)#3811, avg(ss_net_paid), avg(ss_net_paid)#3813) AS mergedValue#4189]
            +- *(2) HashAggregate(keys=[], functions=[count(1), avg(UnscaledValue(ss_ext_discount_amt#4082)), avg(UnscaledValue(ss_net_paid#4088))], output=[count(1)#3809L, avg(ss_ext_discount_amt)#3811, avg(ss_net_paid)#3813])
               +- ShuffleQueryStage 0
                  +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=9578]
                     +- *(1) HashAggregate(keys=[], functions=[partial_count(1), partial_avg(UnscaledValue(ss_ext_discount_amt#4082)), partial_avg(UnscaledValue(ss_net_paid#4088))], output=[count#4212L, sum#4213, count#4214L, sum#4215, count#4216L])
                        +- *(1) Project [ss_ext_discount_amt#4082, ss_net_paid#4088]
                           +- *(1) Filter ((isnotnull(ss_quantity#4078) AND (ss_quantity#4078 >= 81)) AND (ss_quantity#4078 <= 100))
                              +- *(1) ColumnarToRow
                                 +- FileScan parquet default.store_sales[ss_quantity#4078,ss_ext_discount_amt#4082,ss_net_paid#4088] Batched: true, DataFilters: [isnotnull(ss_quantity#4078), (ss_quantity#4078 >= 81), (ss_quantity#4078 <= 100)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_quantity), GreaterThanOrEqual(ss_quantity,81), LessThanOrEqual(ss_quantity,100)], ReadSchema: struct<ss_quantity:int,ss_ext_discount_amt:decimal(7,2),ss_net_paid:decimal(7,2)>
         +- == Initial Plan ==
            Project [named_struct(count(1), count(1)#3809L, avg(ss_ext_discount_amt), avg(ss_ext_discount_amt)#3811, avg(ss_net_paid), avg(ss_net_paid)#3813) AS mergedValue#4189]
            +- HashAggregate(keys=[], functions=[count(1), avg(UnscaledValue(ss_ext_discount_amt#4082)), avg(UnscaledValue(ss_net_paid#4088))], output=[count(1)#3809L, avg(ss_ext_discount_amt)#3811, avg(ss_net_paid)#3813])
               +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=9287]
                  +- HashAggregate(keys=[], functions=[partial_count(1), partial_avg(UnscaledValue(ss_ext_discount_amt#4082)), partial_avg(UnscaledValue(ss_net_paid#4088))], output=[count#4212L, sum#4213, count#4214L, sum#4215, count#4216L])
                     +- Project [ss_ext_discount_amt#4082, ss_net_paid#4088]
                        +- Filter ((isnotnull(ss_quantity#4078) AND (ss_quantity#4078 >= 81)) AND (ss_quantity#4078 <= 100))
                           +- FileScan parquet default.store_sales[ss_quantity#4078,ss_ext_discount_amt#4082,ss_net_paid#4088] Batched: true, DataFilters: [isnotnull(ss_quantity#4078), (ss_quantity#4078 >= 81), (ss_quantity#4078 <= 100)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_quantity), GreaterThanOrEqual(ss_quantity,81), LessThanOrEqual(ss_quantity,100)], ReadSchema: struct<ss_quantity:int,ss_ext_discount_amt:decimal(7,2),ss_net_paid:decimal(7,2)>
   :  :- ReusedSubquery Subquery subquery#3777, [id=#9290]
   :  +- ReusedSubquery Subquery subquery#3777, [id=#9290]
   +- *(1) Filter (isnotnull(r_reason_sk#3781) AND (r_reason_sk#3781 = 1))
      +- *(1) ColumnarToRow
         +- FileScan parquet default.reason[r_reason_sk#3781] Batched: true, DataFilters: [isnotnull(r_reason_sk#3781), (r_reason_sk#3781 = 1)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/reason], PartitionFilters: [], PushedFilters: [IsNotNull(r_reason_sk), EqualTo(r_reason_sk,1)], ReadSchema: struct<r_reason_sk:int>


==== q11 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[customer_preferred_cust_flag#4490 ASC NULLS FIRST], output=[customer_preferred_cust_flag#4490])
   +- *(17) Project [customer_preferred_cust_flag#4490]
      +- *(17) BroadcastHashJoin [customer_id#4417], [customer_id#4507], Inner, BuildRight, (CASE WHEN (year_total#4435 > 0.00) THEN CheckOverflow((promote_precision(year_total#4515) / promote_precision(year_total#4435)), DecimalType(38,20)) END > CASE WHEN (year_total#4425 > 0.00) THEN CheckOverflow((promote_precision(year_total#4495) / promote_precision(year_total#4425)), DecimalType(38,20)) END), false
         :- *(17) Project [customer_id#4417, year_total#4425, customer_preferred_cust_flag#4490, year_total#4495, year_total#4435]
         :  +- *(17) BroadcastHashJoin [customer_id#4417], [customer_id#4427], Inner, BuildRight, false
         :     :- *(17) Project [customer_id#4417, year_total#4425, customer_preferred_cust_flag#4490, year_total#4495]
         :     :  +- *(17) BroadcastHashJoin [customer_id#4417], [customer_id#4487], Inner, BuildRight, false
         :     :     :- AQEShuffleRead local
         :     :     :  +- ShuffleQueryStage 19
         :     :     :     +- Exchange hashpartitioning(customer_id#4417, 20), ENSURE_REQUIREMENTS, [plan_id=11492]
         :     :     :        +- *(15) Filter (isnotnull(year_total#4425) AND (year_total#4425 > 0.00))
         :     :     :           +- *(15) HashAggregate(keys=[c_customer_id#82, c_first_name#89, c_last_name#90, d_year#30, c_preferred_cust_flag#91, c_birth_country#95, c_login#96, c_email_address#97], functions=[sum(UnscaledValue(CheckOverflow((promote_precision(cast(ss_ext_list_price#431 as decimal(8,2))) - promote_precision(cast(ss_ext_discount_amt#428 as decimal(8,2)))), DecimalType(8,2))))], output=[customer_id#4417, year_total#4425])
         :     :     :              +- ShuffleQueryStage 15
         :     :     :                 +- Exchange hashpartitioning(c_customer_id#82, c_first_name#89, c_last_name#90, d_year#30, c_preferred_cust_flag#91, c_birth_country#95, c_login#96, c_email_address#97, 20), ENSURE_REQUIREMENTS, [plan_id=11194]
         :     :     :                    +- *(11) HashAggregate(keys=[c_customer_id#82, c_first_name#89, c_last_name#90, d_year#30, c_preferred_cust_flag#91, c_birth_country#95, c_login#96, c_email_address#97], functions=[partial_sum(UnscaledValue(CheckOverflow((promote_precision(cast(ss_ext_list_price#431 as decimal(8,2))) - promote_precision(cast(ss_ext_discount_amt#428 as decimal(8,2)))), DecimalType(8,2))))], output=[c_customer_id#82, c_first_name#89, c_last_name#90, d_year#30, c_preferred_cust_flag#91, c_birth_country#95, c_login#96, c_email_address#97, sum#5503L])
         :     :     :                       +- *(11) Project [c_customer_id#82, c_first_name#89, c_last_name#90, c_preferred_cust_flag#91, c_birth_country#95, c_login#96, c_email_address#97, ss_ext_discount_amt#428, ss_ext_list_price#431, d_year#30]
         :     :     :                          +- *(11) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#24], Inner, BuildRight, false
         :     :     :                             :- *(11) Project [c_customer_id#82, c_first_name#89, c_last_name#90, c_preferred_cust_flag#91, c_birth_country#95, c_login#96, c_email_address#97, ss_sold_date_sk#414, ss_ext_discount_amt#428, ss_ext_list_price#431]
         :     :     :                             :  +- *(11) BroadcastHashJoin [c_customer_sk#81], [ss_customer_sk#417], Inner, BuildLeft, false
         :     :     :                             :     :- BroadcastQueryStage 0
         :     :     :                             :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=10055]
         :     :     :                             :     :     +- *(1) Filter (isnotnull(c_customer_sk#81) AND isnotnull(c_customer_id#82))
         :     :     :                             :     :        +- *(1) ColumnarToRow
         :     :     :                             :     :           +- FileScan parquet default.customer[c_customer_sk#81,c_customer_id#82,c_first_name#89,c_last_name#90,c_preferred_cust_flag#91,c_birth_country#95,c_login#96,c_email_address#97] Batched: true, DataFilters: [isnotnull(c_customer_sk#81), isnotnull(c_customer_id#82)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_customer_id)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_first_name:string,c_last_name:string,c_preferred_...
         :     :     :                             :     +- *(11) Filter (isnotnull(ss_customer_sk#417) AND isnotnull(ss_sold_date_sk#414))
         :     :     :                             :        +- *(11) ColumnarToRow
         :     :     :                             :           +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_customer_sk#417,ss_ext_discount_amt#428,ss_ext_list_price#431] Batched: true, DataFilters: [isnotnull(ss_customer_sk#417), isnotnull(ss_sold_date_sk#414)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_ext_discount_amt:decimal(7,2),ss_ext_list_price:...
         :     :     :                             +- BroadcastQueryStage 1
         :     :     :                                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=10072]
         :     :     :                                   +- *(2) Filter ((isnotnull(d_year#30) AND (d_year#30 = 2001)) AND isnotnull(d_date_sk#24))
         :     :     :                                      +- *(2) ColumnarToRow
         :     :     :                                         +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30] Batched: true, DataFilters: [isnotnull(d_year#30), (d_year#30 = 2001), isnotnull(d_date_sk#24)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :     :     +- BroadcastQueryStage 20
         :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=11559]
         :     :           +- AQEShuffleRead local
         :     :              +- ShuffleQueryStage 17
         :     :                 +- Exchange hashpartitioning(customer_id#4487, 20), ENSURE_REQUIREMENTS, [plan_id=11341]
         :     :                    +- *(13) HashAggregate(keys=[c_customer_id#4996, c_first_name#5003, c_last_name#5004, d_year#5042, c_preferred_cust_flag#5005, c_birth_country#5009, c_login#5010, c_email_address#5011], functions=[sum(UnscaledValue(CheckOverflow((promote_precision(cast(ss_ext_list_price#5030 as decimal(8,2))) - promote_precision(cast(ss_ext_discount_amt#5027 as decimal(8,2)))), DecimalType(8,2))))], output=[customer_id#4487, customer_preferred_cust_flag#4490, year_total#4495])
         :     :                       +- ShuffleQueryStage 13
         :     :                          +- Exchange hashpartitioning(c_customer_id#4996, c_first_name#5003, c_last_name#5004, d_year#5042, c_preferred_cust_flag#5005, c_birth_country#5009, c_login#5010, c_email_address#5011, 20), ENSURE_REQUIREMENTS, [plan_id=10972]
         :     :                             +- *(9) HashAggregate(keys=[c_customer_id#4996, c_first_name#5003, c_last_name#5004, d_year#5042, c_preferred_cust_flag#5005, c_birth_country#5009, c_login#5010, c_email_address#5011], functions=[partial_sum(UnscaledValue(CheckOverflow((promote_precision(cast(ss_ext_list_price#5030 as decimal(8,2))) - promote_precision(cast(ss_ext_discount_amt#5027 as decimal(8,2)))), DecimalType(8,2))))], output=[c_customer_id#4996, c_first_name#5003, c_last_name#5004, d_year#5042, c_preferred_cust_flag#5005, c_birth_country#5009, c_login#5010, c_email_address#5011, sum#5505L])
         :     :                                +- *(9) Project [c_customer_id#4996, c_first_name#5003, c_last_name#5004, c_preferred_cust_flag#5005, c_birth_country#5009, c_login#5010, c_email_address#5011, ss_ext_discount_amt#5027, ss_ext_list_price#5030, d_year#5042]
         :     :                                   +- *(9) BroadcastHashJoin [ss_sold_date_sk#5013], [d_date_sk#5036], Inner, BuildRight, false
         :     :                                      :- *(9) Project [c_customer_id#4996, c_first_name#5003, c_last_name#5004, c_preferred_cust_flag#5005, c_birth_country#5009, c_login#5010, c_email_address#5011, ss_sold_date_sk#5013, ss_ext_discount_amt#5027, ss_ext_list_price#5030]
         :     :                                      :  +- *(9) BroadcastHashJoin [c_customer_sk#4995], [ss_customer_sk#5016], Inner, BuildLeft, false
         :     :                                      :     :- BroadcastQueryStage 3
         :     :                                      :     :  +- ReusedExchange [c_customer_sk#4995, c_customer_id#4996, c_first_name#5003, c_last_name#5004, c_preferred_cust_flag#5005, c_birth_country#5009, c_login#5010, c_email_address#5011], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=10055]
         :     :                                      :     +- *(9) Filter (isnotnull(ss_customer_sk#5016) AND isnotnull(ss_sold_date_sk#5013))
         :     :                                      :        +- *(9) ColumnarToRow
         :     :                                      :           +- FileScan parquet default.store_sales[ss_sold_date_sk#5013,ss_customer_sk#5016,ss_ext_discount_amt#5027,ss_ext_list_price#5030] Batched: true, DataFilters: [isnotnull(ss_customer_sk#5016), isnotnull(ss_sold_date_sk#5013)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_ext_discount_amt:decimal(7,2),ss_ext_list_price:...
         :     :                                      +- BroadcastQueryStage 4
         :     :                                         +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=10141]
         :     :                                            +- *(4) Filter ((isnotnull(d_year#5042) AND (d_year#5042 = 2002)) AND isnotnull(d_date_sk#5036))
         :     :                                               +- *(4) ColumnarToRow
         :     :                                                  +- FileScan parquet default.date_dim[d_date_sk#5036,d_year#5042] Batched: true, DataFilters: [isnotnull(d_year#5042), (d_year#5042 = 2002), isnotnull(d_date_sk#5036)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :     +- BroadcastQueryStage 21
         :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=11657]
         :           +- *(16) Filter (isnotnull(year_total#4435) AND (year_total#4435 > 0.00))
         :              +- *(16) HashAggregate(keys=[c_customer_id#5224, c_first_name#5231, c_last_name#5232, c_preferred_cust_flag#5233, c_birth_country#5237, c_login#5238, c_email_address#5239, d_year#5281], functions=[sum(UnscaledValue(CheckOverflow((promote_precision(cast(ws_ext_list_price#5266 as decimal(8,2))) - promote_precision(cast(ws_ext_discount_amt#5263 as decimal(8,2)))), DecimalType(8,2))))], output=[customer_id#4427, year_total#4435])
         :                 +- ShuffleQueryStage 16
         :                    +- Exchange hashpartitioning(c_customer_id#5224, c_first_name#5231, c_last_name#5232, c_preferred_cust_flag#5233, c_birth_country#5237, c_login#5238, c_email_address#5239, d_year#5281, 20), ENSURE_REQUIREMENTS, [plan_id=11244]
         :                       +- *(12) HashAggregate(keys=[c_customer_id#5224, c_first_name#5231, c_last_name#5232, c_preferred_cust_flag#5233, c_birth_country#5237, c_login#5238, c_email_address#5239, d_year#5281], functions=[partial_sum(UnscaledValue(CheckOverflow((promote_precision(cast(ws_ext_list_price#5266 as decimal(8,2))) - promote_precision(cast(ws_ext_discount_amt#5263 as decimal(8,2)))), DecimalType(8,2))))], output=[c_customer_id#5224, c_first_name#5231, c_last_name#5232, c_preferred_cust_flag#5233, c_birth_country#5237, c_login#5238, c_email_address#5239, d_year#5281, sum#5507L])
         :                          +- *(12) Project [c_customer_id#5224, c_first_name#5231, c_last_name#5232, c_preferred_cust_flag#5233, c_birth_country#5237, c_login#5238, c_email_address#5239, ws_ext_discount_amt#5263, ws_ext_list_price#5266, d_year#5281]
         :                             +- *(12) BroadcastHashJoin [ws_sold_date_sk#5241], [d_date_sk#5275], Inner, BuildRight, false
         :                                :- *(12) Project [c_customer_id#5224, c_first_name#5231, c_last_name#5232, c_preferred_cust_flag#5233, c_birth_country#5237, c_login#5238, c_email_address#5239, ws_sold_date_sk#5241, ws_ext_discount_amt#5263, ws_ext_list_price#5266]
         :                                :  +- *(12) BroadcastHashJoin [c_customer_sk#5223], [ws_bill_customer_sk#5245], Inner, BuildLeft, false
         :                                :     :- BroadcastQueryStage 6
         :                                :     :  +- ReusedExchange [c_customer_sk#5223, c_customer_id#5224, c_first_name#5231, c_last_name#5232, c_preferred_cust_flag#5233, c_birth_country#5237, c_login#5238, c_email_address#5239], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=10055]
         :                                :     +- *(12) Filter (isnotnull(ws_bill_customer_sk#5245) AND isnotnull(ws_sold_date_sk#5241))
         :                                :        +- *(12) ColumnarToRow
         :                                :           +- FileScan parquet default.web_sales[ws_sold_date_sk#5241,ws_bill_customer_sk#5245,ws_ext_discount_amt#5263,ws_ext_list_price#5266] Batched: true, DataFilters: [isnotnull(ws_bill_customer_sk#5245), isnotnull(ws_sold_date_sk#5241)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_bill_customer_sk), IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_bill_customer_sk:int,ws_ext_discount_amt:decimal(7,2),ws_ext_list_p...
         :                                +- BroadcastQueryStage 8
         :                                   +- ReusedExchange [d_date_sk#5275, d_year#5281], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=10072]
         +- BroadcastQueryStage 18
            +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=11426]
               +- *(14) HashAggregate(keys=[c_customer_id#5383, c_first_name#5390, c_last_name#5391, c_preferred_cust_flag#5392, c_birth_country#5396, c_login#5397, c_email_address#5398, d_year#5440], functions=[sum(UnscaledValue(CheckOverflow((promote_precision(cast(ws_ext_list_price#5425 as decimal(8,2))) - promote_precision(cast(ws_ext_discount_amt#5422 as decimal(8,2)))), DecimalType(8,2))))], output=[customer_id#4507, year_total#4515])
                  +- ShuffleQueryStage 14
                     +- Exchange hashpartitioning(c_customer_id#5383, c_first_name#5390, c_last_name#5391, c_preferred_cust_flag#5392, c_birth_country#5396, c_login#5397, c_email_address#5398, d_year#5440, 20), ENSURE_REQUIREMENTS, [plan_id=11019]
                        +- *(10) HashAggregate(keys=[c_customer_id#5383, c_first_name#5390, c_last_name#5391, c_preferred_cust_flag#5392, c_birth_country#5396, c_login#5397, c_email_address#5398, d_year#5440], functions=[partial_sum(UnscaledValue(CheckOverflow((promote_precision(cast(ws_ext_list_price#5425 as decimal(8,2))) - promote_precision(cast(ws_ext_discount_amt#5422 as decimal(8,2)))), DecimalType(8,2))))], output=[c_customer_id#5383, c_first_name#5390, c_last_name#5391, c_preferred_cust_flag#5392, c_birth_country#5396, c_login#5397, c_email_address#5398, d_year#5440, sum#5509L])
                           +- *(10) Project [c_customer_id#5383, c_first_name#5390, c_last_name#5391, c_preferred_cust_flag#5392, c_birth_country#5396, c_login#5397, c_email_address#5398, ws_ext_discount_amt#5422, ws_ext_list_price#5425, d_year#5440]
                              +- *(10) BroadcastHashJoin [ws_sold_date_sk#5400], [d_date_sk#5434], Inner, BuildRight, false
                                 :- *(10) Project [c_customer_id#5383, c_first_name#5390, c_last_name#5391, c_preferred_cust_flag#5392, c_birth_country#5396, c_login#5397, c_email_address#5398, ws_sold_date_sk#5400, ws_ext_discount_amt#5422, ws_ext_list_price#5425]
                                 :  +- *(10) BroadcastHashJoin [c_customer_sk#5382], [ws_bill_customer_sk#5404], Inner, BuildLeft, false
                                 :     :- BroadcastQueryStage 10
                                 :     :  +- ReusedExchange [c_customer_sk#5382, c_customer_id#5383, c_first_name#5390, c_last_name#5391, c_preferred_cust_flag#5392, c_birth_country#5396, c_login#5397, c_email_address#5398], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=10055]
                                 :     +- *(10) Filter (isnotnull(ws_bill_customer_sk#5404) AND isnotnull(ws_sold_date_sk#5400))
                                 :        +- *(10) ColumnarToRow
                                 :           +- FileScan parquet default.web_sales[ws_sold_date_sk#5400,ws_bill_customer_sk#5404,ws_ext_discount_amt#5422,ws_ext_list_price#5425] Batched: true, DataFilters: [isnotnull(ws_bill_customer_sk#5404), isnotnull(ws_sold_date_sk#5400)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_bill_customer_sk), IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_bill_customer_sk:int,ws_ext_discount_amt:decimal(7,2),ws_ext_list_p...
                                 +- BroadcastQueryStage 12
                                    +- ReusedExchange [d_date_sk#5434, d_year#5440], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=10141]

==== q12 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[i_category#449 ASC NULLS FIRST,i_class#447 ASC NULLS FIRST,i_item_id#438 ASC NULLS FIRST,i_item_desc#441 ASC NULLS FIRST,revenueratio#5531 ASC NULLS FIRST], output=[i_item_desc#441,i_category#449,i_class#447,i_current_price#442,itemrevenue#5530,revenueratio#5531])
   +- *(6) Project [i_item_desc#441, i_category#449, i_class#447, i_current_price#442, itemrevenue#5530, CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(_w0#5536) * 100.00), DecimalType(21,2)) as decimal(27,2))) / promote_precision(_we0#5538)), DecimalType(38,17)) AS revenueratio#5531, i_item_id#438]
      +- Window [sum(_w1#5537) windowspecdefinition(i_class#447, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS _we0#5538], [i_class#447]
         +- *(5) Sort [i_class#447 ASC NULLS FIRST], false, 0
            +- ShuffleQueryStage 3
               +- Exchange hashpartitioning(i_class#447, 20), ENSURE_REQUIREMENTS, [plan_id=12114]
                  +- *(4) HashAggregate(keys=[i_item_id#438, i_item_desc#441, i_category#449, i_class#447, i_current_price#442], functions=[sum(UnscaledValue(ws_ext_sales_price#186))], output=[i_item_desc#441, i_category#449, i_class#447, i_current_price#442, itemrevenue#5530, _w0#5536, _w1#5537, i_item_id#438])
                     +- ShuffleQueryStage 2
                        +- Exchange hashpartitioning(i_item_id#438, i_item_desc#441, i_category#449, i_class#447, i_current_price#442, 20), ENSURE_REQUIREMENTS, [plan_id=12066]
                           +- *(3) HashAggregate(keys=[i_item_id#438, i_item_desc#441, i_category#449, i_class#447, i_current_price#442], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#186))], output=[i_item_id#438, i_item_desc#441, i_category#449, i_class#447, i_current_price#442, sum#5546L])
                              +- *(3) Project [ws_ext_sales_price#186, i_item_id#438, i_item_desc#441, i_current_price#442, i_class#447, i_category#449]
                                 +- *(3) BroadcastHashJoin [ws_sold_date_sk#163], [d_date_sk#24], Inner, BuildRight, false
                                    :- *(3) Project [ws_sold_date_sk#163, ws_ext_sales_price#186, i_item_id#438, i_item_desc#441, i_current_price#442, i_class#447, i_category#449]
                                    :  +- *(3) BroadcastHashJoin [ws_item_sk#166], [i_item_sk#437], Inner, BuildRight, false
                                    :     :- *(3) Filter (isnotnull(ws_item_sk#166) AND isnotnull(ws_sold_date_sk#163))
                                    :     :  +- *(3) ColumnarToRow
                                    :     :     +- FileScan parquet default.web_sales[ws_sold_date_sk#163,ws_item_sk#166,ws_ext_sales_price#186] Batched: true, DataFilters: [isnotnull(ws_item_sk#166), isnotnull(ws_sold_date_sk#163)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_item_sk), IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_ext_sales_price:decimal(7,2)>
                                    :     +- BroadcastQueryStage 0
                                    :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=11892]
                                    :           +- *(1) Filter (i_category#449 IN (Sports                                            ,Books                                             ,Home                                              ) AND isnotnull(i_item_sk#437))
                                    :              +- *(1) ColumnarToRow
                                    :                 +- FileScan parquet default.item[i_item_sk#437,i_item_id#438,i_item_desc#441,i_current_price#442,i_class#447,i_category#449] Batched: true, DataFilters: [i_category#449 IN (Sports                                            ,Books                     ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [In(i_category, [Books                                             ,Home                         ..., ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string,i_current_price:decimal(7,2),i_class:str...
                                    +- BroadcastQueryStage 1
                                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=11911]
                                          +- *(2) Project [d_date_sk#24]
                                             +- *(2) Filter (((isnotnull(d_date#26) AND (d_date#26 >= 1999-02-22)) AND (d_date#26 <= 1999-03-24)) AND isnotnull(d_date_sk#24))
                                                +- *(2) ColumnarToRow
                                                   +- FileScan parquet default.date_dim[d_date_sk#24,d_date#26] Batched: true, DataFilters: [isnotnull(d_date#26), (d_date#26 >= 1999-02-22), (d_date#26 <= 1999-03-24), isnotnull(d_date_sk#..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,1999-02-22), LessThanOrEqual(d_date,1999-03-24), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>

==== q13 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   *(7) HashAggregate(keys=[], functions=[avg(ss_quantity#424), avg(UnscaledValue(ss_ext_sales_price#429)), avg(UnscaledValue(ss_ext_wholesale_cost#430)), sum(UnscaledValue(ss_ext_wholesale_cost#430))], output=[avg(ss_quantity)#5562, avg(ss_ext_sales_price)#5563, avg(ss_ext_wholesale_cost)#5564, sum(ss_ext_wholesale_cost)#5565])
   +- ShuffleQueryStage 5
      +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=12795]
         +- *(6) HashAggregate(keys=[], functions=[partial_avg(ss_quantity#424), partial_avg(UnscaledValue(ss_ext_sales_price#429)), partial_avg(UnscaledValue(ss_ext_wholesale_cost#430)), partial_sum(UnscaledValue(ss_ext_wholesale_cost#430))], output=[sum#5577, count#5578L, sum#5579, count#5580L, sum#5581, count#5582L, sum#5583L])
            +- *(6) Project [ss_quantity#424, ss_ext_sales_price#429, ss_ext_wholesale_cost#430]
               +- *(6) BroadcastHashJoin [ss_hdemo_sk#419], [hd_demo_sk#5552], Inner, BuildRight, (((((((cd_marital_status#3635 = M) AND (cd_education_status#3636 = Advanced Degree     )) AND (ss_sales_price#427 >= 100.00)) AND (ss_sales_price#427 <= 150.00)) AND (hd_dep_count#5555 = 3)) OR (((((cd_marital_status#3635 = S) AND (cd_education_status#3636 = College             )) AND (ss_sales_price#427 >= 50.00)) AND (ss_sales_price#427 <= 100.00)) AND (hd_dep_count#5555 = 1))) OR (((((cd_marital_status#3635 = W) AND (cd_education_status#3636 = 2 yr Degree         )) AND (ss_sales_price#427 >= 150.00)) AND (ss_sales_price#427 <= 200.00)) AND (hd_dep_count#5555 = 1))), false
                  :- *(6) Project [ss_hdemo_sk#419, ss_quantity#424, ss_sales_price#427, ss_ext_sales_price#429, ss_ext_wholesale_cost#430, cd_marital_status#3635, cd_education_status#3636]
                  :  +- *(6) BroadcastHashJoin [ss_cdemo_sk#418], [cd_demo_sk#3633], Inner, BuildRight, ((((((cd_marital_status#3635 = M) AND (cd_education_status#3636 = Advanced Degree     )) AND (ss_sales_price#427 >= 100.00)) AND (ss_sales_price#427 <= 150.00)) OR ((((cd_marital_status#3635 = S) AND (cd_education_status#3636 = College             )) AND (ss_sales_price#427 >= 50.00)) AND (ss_sales_price#427 <= 100.00))) OR ((((cd_marital_status#3635 = W) AND (cd_education_status#3636 = 2 yr Degree         )) AND (ss_sales_price#427 >= 150.00)) AND (ss_sales_price#427 <= 200.00))), false
                  :     :- *(6) Project [ss_cdemo_sk#418, ss_hdemo_sk#419, ss_quantity#424, ss_sales_price#427, ss_ext_sales_price#429, ss_ext_wholesale_cost#430]
                  :     :  +- *(6) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#24], Inner, BuildRight, false
                  :     :     :- *(6) Project [ss_sold_date_sk#414, ss_cdemo_sk#418, ss_hdemo_sk#419, ss_quantity#424, ss_sales_price#427, ss_ext_sales_price#429, ss_ext_wholesale_cost#430]
                  :     :     :  +- *(6) BroadcastHashJoin [ss_addr_sk#420], [ca_address_sk#3717], Inner, BuildRight, ((((ca_state#3725 IN (TX,OH) AND (ss_net_profit#436 >= 100.00)) AND (ss_net_profit#436 <= 200.00)) OR ((ca_state#3725 IN (OR,NM,KY) AND (ss_net_profit#436 >= 150.00)) AND (ss_net_profit#436 <= 300.00))) OR ((ca_state#3725 IN (VA,TX,MS) AND (ss_net_profit#436 >= 50.00)) AND (ss_net_profit#436 <= 250.00))), false
                  :     :     :     :- *(6) Project [ss_sold_date_sk#414, ss_cdemo_sk#418, ss_hdemo_sk#419, ss_addr_sk#420, ss_quantity#424, ss_sales_price#427, ss_ext_sales_price#429, ss_ext_wholesale_cost#430, ss_net_profit#436]
                  :     :     :     :  +- *(6) BroadcastHashJoin [ss_store_sk#421], [s_store_sk#52], Inner, BuildRight, false
                  :     :     :     :     :- *(6) Filter ((((((isnotnull(ss_store_sk#421) AND isnotnull(ss_addr_sk#420)) AND isnotnull(ss_sold_date_sk#414)) AND isnotnull(ss_cdemo_sk#418)) AND isnotnull(ss_hdemo_sk#419)) AND ((((ss_net_profit#436 >= 100.00) AND (ss_net_profit#436 <= 200.00)) OR ((ss_net_profit#436 >= 150.00) AND (ss_net_profit#436 <= 300.00))) OR ((ss_net_profit#436 >= 50.00) AND (ss_net_profit#436 <= 250.00)))) AND ((((ss_sales_price#427 >= 100.00) AND (ss_sales_price#427 <= 150.00)) OR ((ss_sales_price#427 >= 50.00) AND (ss_sales_price#427 <= 100.00))) OR ((ss_sales_price#427 >= 150.00) AND (ss_sales_price#427 <= 200.00))))
                  :     :     :     :     :  +- *(6) ColumnarToRow
                  :     :     :     :     :     +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_cdemo_sk#418,ss_hdemo_sk#419,ss_addr_sk#420,ss_store_sk#421,ss_quantity#424,ss_sales_price#427,ss_ext_sales_price#429,ss_ext_wholesale_cost#430,ss_net_profit#436] Batched: true, DataFilters: [isnotnull(ss_store_sk#421), isnotnull(ss_addr_sk#420), isnotnull(ss_sold_date_sk#414), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_store_sk), IsNotNull(ss_addr_sk), IsNotNull(ss_sold_date_sk), IsNotNull(ss_cdemo_sk..., ReadSchema: struct<ss_sold_date_sk:int,ss_cdemo_sk:int,ss_hdemo_sk:int,ss_addr_sk:int,ss_store_sk:int,ss_quan...
                  :     :     :     :     +- BroadcastQueryStage 0
                  :     :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=12334]
                  :     :     :     :           +- *(1) Filter isnotnull(s_store_sk#52)
                  :     :     :     :              +- *(1) ColumnarToRow
                  :     :     :     :                 +- FileScan parquet default.store[s_store_sk#52] Batched: true, DataFilters: [isnotnull(s_store_sk#52)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int>
                  :     :     :     +- BroadcastQueryStage 1
                  :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=12353]
                  :     :     :           +- *(2) Project [ca_address_sk#3717, ca_state#3725]
                  :     :     :              +- *(2) Filter (((isnotnull(ca_country#3727) AND (ca_country#3727 = United States)) AND isnotnull(ca_address_sk#3717)) AND ((ca_state#3725 IN (TX,OH) OR ca_state#3725 IN (OR,NM,KY)) OR ca_state#3725 IN (VA,TX,MS)))
                  :     :     :                 +- *(2) ColumnarToRow
                  :     :     :                    +- FileScan parquet default.customer_address[ca_address_sk#3717,ca_state#3725,ca_country#3727] Batched: true, DataFilters: [isnotnull(ca_country#3727), (ca_country#3727 = United States), isnotnull(ca_address_sk#3717), ((..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_country), EqualTo(ca_country,United States), IsNotNull(ca_address_sk), Or(Or(In(ca_..., ReadSchema: struct<ca_address_sk:int,ca_state:string,ca_country:string>
                  :     :     +- BroadcastQueryStage 2
                  :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=12374]
                  :     :           +- *(3) Project [d_date_sk#24]
                  :     :              +- *(3) Filter ((isnotnull(d_year#30) AND (d_year#30 = 2001)) AND isnotnull(d_date_sk#24))
                  :     :                 +- *(3) ColumnarToRow
                  :     :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30] Batched: true, DataFilters: [isnotnull(d_year#30), (d_year#30 = 2001), isnotnull(d_date_sk#24)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                  :     +- BroadcastQueryStage 3
                  :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=12393]
                  :           +- *(4) Filter (isnotnull(cd_demo_sk#3633) AND ((((cd_marital_status#3635 = M) AND (cd_education_status#3636 = Advanced Degree     )) OR ((cd_marital_status#3635 = S) AND (cd_education_status#3636 = College             ))) OR ((cd_marital_status#3635 = W) AND (cd_education_status#3636 = 2 yr Degree         ))))
                  :              +- *(4) ColumnarToRow
                  :                 +- FileScan parquet default.customer_demographics[cd_demo_sk#3633,cd_marital_status#3635,cd_education_status#3636] Batched: true, DataFilters: [isnotnull(cd_demo_sk#3633), ((((cd_marital_status#3635 = M) AND (cd_education_status#3636 = Adva..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer_demographics], PartitionFilters: [], PushedFilters: [IsNotNull(cd_demo_sk), Or(Or(And(EqualTo(cd_marital_status,M),EqualTo(cd_education_status,Advanc..., ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string,cd_education_status:string>
                  +- BroadcastQueryStage 4
                     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=12410]
                        +- *(5) Filter (isnotnull(hd_demo_sk#5552) AND ((hd_dep_count#5555 = 3) OR (hd_dep_count#5555 = 1)))
                           +- *(5) ColumnarToRow
                              +- FileScan parquet default.household_demographics[hd_demo_sk#5552,hd_dep_count#5555] Batched: true, DataFilters: [isnotnull(hd_demo_sk#5552), ((hd_dep_count#5555 = 3) OR (hd_dep_count#5555 = 1))], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/household_demographics], PartitionFilters: [], PushedFilters: [IsNotNull(hd_demo_sk), Or(EqualTo(hd_dep_count,3),EqualTo(hd_dep_count,1))], ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int>


==== q14a ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[channel#6220 ASC NULLS FIRST,i_brand_id#6221 ASC NULLS FIRST,i_class_id#6222 ASC NULLS FIRST,i_category_id#6223 ASC NULLS FIRST], output=[channel#6220,i_brand_id#6221,i_class_id#6222,i_category_id#6223,sum(sales)#6210,sum(number_sales)#6211L])
   +- *(122) HashAggregate(keys=[channel#6220, i_brand_id#6221, i_class_id#6222, i_category_id#6223, spark_grouping_id#6219L], functions=[sum(sales#5606), sum(number_sales#5607L)], output=[channel#6220, i_brand_id#6221, i_class_id#6222, i_category_id#6223, sum(sales)#6210, sum(number_sales)#6211L])
      +- ShuffleQueryStage 178
         +- Exchange hashpartitioning(channel#6220, i_brand_id#6221, i_class_id#6222, i_category_id#6223, spark_grouping_id#6219L, 20), ENSURE_REQUIREMENTS, [plan_id=36764]
            +- *(121) HashAggregate(keys=[channel#6220, i_brand_id#6221, i_class_id#6222, i_category_id#6223, spark_grouping_id#6219L], functions=[partial_sum(sales#5606), partial_sum(number_sales#5607L)], output=[channel#6220, i_brand_id#6221, i_class_id#6222, i_category_id#6223, spark_grouping_id#6219L, sum#6244, isEmpty#6245, sum#6246L])
               +- *(121) Expand [[sales#5606, number_sales#5607L, channel#6215, i_brand_id#6216, i_class_id#6217, i_category_id#6218, 0], [sales#5606, number_sales#5607L, channel#6215, i_brand_id#6216, i_class_id#6217, null, 1], [sales#5606, number_sales#5607L, channel#6215, i_brand_id#6216, null, null, 3], [sales#5606, number_sales#5607L, channel#6215, null, null, null, 7], [sales#5606, number_sales#5607L, null, null, null, null, 15]], [sales#5606, number_sales#5607L, channel#6220, i_brand_id#6221, i_class_id#6222, i_category_id#6223, spark_grouping_id#6219L]
                  +- Union
                     :- *(118) Project [sales#5606, number_sales#5607L, store AS channel#6215, i_brand_id#5961 AS i_brand_id#6216, i_class_id#5963 AS i_class_id#6217, i_category_id#5965 AS i_category_id#6218]
                     :  +- *(118) Filter (isnotnull(sales#5606) AND (cast(sales#5606 as decimal(32,6)) > cast(Subquery subquery#5609, [id=#14026] as decimal(32,6))))
                     :     :  +- Subquery subquery#5609, [id=#14026]
                     :     :     +- AdaptiveSparkPlan isFinalPlan=true
                                 +- == Final Plan ==
                                    *(8) HashAggregate(keys=[], functions=[avg(CheckOverflow((promote_precision(cast(quantity#5624 as decimal(12,2))) * promote_precision(cast(list_price#5625 as decimal(12,2)))), DecimalType(18,2)))], output=[average_sales#5630])
                                    +- ShuffleQueryStage 6
                                       +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=36932]
                                          +- *(7) HashAggregate(keys=[], functions=[partial_avg(CheckOverflow((promote_precision(cast(quantity#5624 as decimal(12,2))) * promote_precision(cast(list_price#5625 as decimal(12,2)))), DecimalType(18,2)))], output=[sum#6267, count#6268L])
                                             +- Union
                                                :- *(4) Project [ss_quantity#5766 AS quantity#5624, ss_list_price#5768 AS list_price#5625]
                                                :  +- *(4) BroadcastHashJoin [ss_sold_date_sk#5756], [d_date_sk#5779], Inner, BuildRight, false
                                                :     :- *(4) Filter isnotnull(ss_sold_date_sk#5756)
                                                :     :  +- *(4) ColumnarToRow
                                                :     :     +- FileScan parquet default.store_sales[ss_sold_date_sk#5756,ss_quantity#5766,ss_list_price#5768] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#5756)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_quantity:int,ss_list_price:decimal(7,2)>
                                                :     +- BroadcastQueryStage 1
                                                :        +- ReusedExchange [d_date_sk#5779], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=15658]
                                                :- *(5) Project [cs_quantity#5825 AS quantity#5626, cs_list_price#5827 AS list_price#5627]
                                                :  +- *(5) BroadcastHashJoin [cs_sold_date_sk#5807], [d_date_sk#5841], Inner, BuildRight, false
                                                :     :- *(5) Filter isnotnull(cs_sold_date_sk#5807)
                                                :     :  +- *(5) ColumnarToRow
                                                :     :     +- FileScan parquet default.catalog_sales[cs_sold_date_sk#5807,cs_quantity#5825,cs_list_price#5827] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#5807)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_quantity:int,cs_list_price:decimal(7,2)>
                                                :     +- BroadcastQueryStage 3
                                                :        +- ReusedExchange [d_date_sk#5841], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=15658]
                                                +- *(6) Project [ws_quantity#5887 AS quantity#5628, ws_list_price#5889 AS list_price#5629]
                                                   +- *(6) BroadcastHashJoin [ws_sold_date_sk#5869], [d_date_sk#5903], Inner, BuildRight, false
                                                      :- *(6) Filter isnotnull(ws_sold_date_sk#5869)
                                                      :  +- *(6) ColumnarToRow
                                                      :     +- FileScan parquet default.web_sales[ws_sold_date_sk#5869,ws_quantity#5887,ws_list_price#5889] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#5869)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_quantity:int,ws_list_price:decimal(7,2)>
                                                      +- BroadcastQueryStage 5
                                                         +- ReusedExchange [d_date_sk#5903], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=15658]
                                 +- == Initial Plan ==
                                    HashAggregate(keys=[], functions=[avg(CheckOverflow((promote_precision(cast(quantity#5624 as decimal(12,2))) * promote_precision(cast(list_price#5625 as decimal(12,2)))), DecimalType(18,2)))], output=[average_sales#5630])
                                    +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=14024]
                                       +- HashAggregate(keys=[], functions=[partial_avg(CheckOverflow((promote_precision(cast(quantity#5624 as decimal(12,2))) * promote_precision(cast(list_price#5625 as decimal(12,2)))), DecimalType(18,2)))], output=[sum#6267, count#6268L])
                                          +- Union
                                             :- Project [ss_quantity#5766 AS quantity#5624, ss_list_price#5768 AS list_price#5625]
                                             :  +- BroadcastHashJoin [ss_sold_date_sk#5756], [d_date_sk#5779], Inner, BuildRight, false
                                             :     :- Filter isnotnull(ss_sold_date_sk#5756)
                                             :     :  +- FileScan parquet default.store_sales[ss_sold_date_sk#5756,ss_quantity#5766,ss_list_price#5768] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#5756)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_quantity:int,ss_list_price:decimal(7,2)>
                                             :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=14012]
                                             :        +- Project [d_date_sk#5779]
                                             :           +- Filter (((isnotnull(d_year#5785) AND (d_year#5785 >= 1999)) AND (d_year#5785 <= 2001)) AND isnotnull(d_date_sk#5779))
                                             :              +- FileScan parquet default.date_dim[d_date_sk#5779,d_year#5785] Batched: true, DataFilters: [isnotnull(d_year#5785), (d_year#5785 >= 1999), (d_year#5785 <= 2001), isnotnull(d_date_sk#5779)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1999), LessThanOrEqual(d_year,2001), IsNotNull(d_da..., ReadSchema: struct<d_date_sk:int,d_year:int>
                                             :- Project [cs_quantity#5825 AS quantity#5626, cs_list_price#5827 AS list_price#5627]
                                             :  +- BroadcastHashJoin [cs_sold_date_sk#5807], [d_date_sk#5841], Inner, BuildRight, false
                                             :     :- Filter isnotnull(cs_sold_date_sk#5807)
                                             :     :  +- FileScan parquet default.catalog_sales[cs_sold_date_sk#5807,cs_quantity#5825,cs_list_price#5827] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#5807)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_quantity:int,cs_list_price:decimal(7,2)>
                                             :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=14015]
                                             :        +- Project [d_date_sk#5841]
                                             :           +- Filter (((isnotnull(d_year#5847) AND (d_year#5847 >= 1999)) AND (d_year#5847 <= 2001)) AND isnotnull(d_date_sk#5841))
                                             :              +- FileScan parquet default.date_dim[d_date_sk#5841,d_year#5847] Batched: true, DataFilters: [isnotnull(d_year#5847), (d_year#5847 >= 1999), (d_year#5847 <= 2001), isnotnull(d_date_sk#5841)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1999), LessThanOrEqual(d_year,2001), IsNotNull(d_da..., ReadSchema: struct<d_date_sk:int,d_year:int>
                                             +- Project [ws_quantity#5887 AS quantity#5628, ws_list_price#5889 AS list_price#5629]
                                                +- BroadcastHashJoin [ws_sold_date_sk#5869], [d_date_sk#5903], Inner, BuildRight, false
                                                   :- Filter isnotnull(ws_sold_date_sk#5869)
                                                   :  +- FileScan parquet default.web_sales[ws_sold_date_sk#5869,ws_quantity#5887,ws_list_price#5889] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#5869)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_quantity:int,ws_list_price:decimal(7,2)>
                                                   +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=14018]
                                                      +- Project [d_date_sk#5903]
                                                         +- Filter (((isnotnull(d_year#5909) AND (d_year#5909 >= 1999)) AND (d_year#5909 <= 2001)) AND isnotnull(d_date_sk#5903))
                                                            +- FileScan parquet default.date_dim[d_date_sk#5903,d_year#5909] Batched: true, DataFilters: [isnotnull(d_year#5909), (d_year#5909 >= 1999), (d_year#5909 <= 2001), isnotnull(d_date_sk#5903)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1999), LessThanOrEqual(d_year,2001), IsNotNull(d_da..., ReadSchema: struct<d_date_sk:int,d_year:int>
                     :     +- *(118) HashAggregate(keys=[i_brand_id#5961, i_class_id#5963, i_category_id#5965], functions=[sum(CheckOverflow((promote_precision(cast(ss_quantity#5941 as decimal(12,2))) * promote_precision(cast(ss_list_price#5943 as decimal(12,2)))), DecimalType(18,2))), count(1)], output=[i_brand_id#5961, i_class_id#5963, i_category_id#5965, sales#5606, number_sales#5607L])
                     :        +- ShuffleQueryStage 175
                     :           +- Exchange hashpartitioning(i_brand_id#5961, i_class_id#5963, i_category_id#5965, 20), ENSURE_REQUIREMENTS, [plan_id=36440]
                     :              +- *(115) HashAggregate(keys=[i_brand_id#5961, i_class_id#5963, i_category_id#5965], functions=[partial_sum(CheckOverflow((promote_precision(cast(ss_quantity#5941 as decimal(12,2))) * promote_precision(cast(ss_list_price#5943 as decimal(12,2)))), DecimalType(18,2))), partial_count(1)], output=[i_brand_id#5961, i_class_id#5963, i_category_id#5965, sum#6250, isEmpty#6251, count#6252L])
                     :                 +- *(115) Project [ss_quantity#5941, ss_list_price#5943, i_brand_id#5961, i_class_id#5963, i_category_id#5965]
                     :                    +- *(115) BroadcastHashJoin [ss_sold_date_sk#5931], [d_date_sk#5976], Inner, BuildRight, false
                     :                       :- *(115) Project [ss_sold_date_sk#5931, ss_quantity#5941, ss_list_price#5943, i_brand_id#5961, i_class_id#5963, i_category_id#5965]
                     :                       :  +- *(115) BroadcastHashJoin [ss_item_sk#5933], [i_item_sk#5954], Inner, BuildRight, false
                     :                       :     :- *(115) BroadcastHashJoin [ss_item_sk#5933], [ss_item_sk#5623], LeftSemi, BuildRight, false
                     :                       :     :  :- AQEShuffleRead local
                     :                       :     :  :  +- ShuffleQueryStage 0
                     :                       :     :  :     +- Exchange hashpartitioning(ss_item_sk#5933, 20), ENSURE_REQUIREMENTS, [plan_id=15590]
                     :                       :     :  :        +- *(1) Filter (isnotnull(ss_item_sk#5933) AND isnotnull(ss_sold_date_sk#5931))
                     :                       :     :  :           +- *(1) ColumnarToRow
                     :                       :     :  :              +- FileScan parquet default.store_sales[ss_sold_date_sk#5931,ss_item_sk#5933,ss_quantity#5941,ss_list_price#5943] Batched: true, DataFilters: [isnotnull(ss_item_sk#5933), isnotnull(ss_sold_date_sk#5931)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_quantity:int,ss_list_price:decimal(7,2)>
                     :                       :     :  +- BroadcastQueryStage 159
                     :                       :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=35614]
                     :                       :     :        +- AQEShuffleRead local
                     :                       :     :           +- ShuffleQueryStage 148
                     :                       :     :              +- Exchange hashpartitioning(ss_item_sk#5623, 20), ENSURE_REQUIREMENTS, [plan_id=34786]
                     :                       :     :                 +- *(96) Project [i_item_sk#437 AS ss_item_sk#5623]
                     :                       :     :                    +- *(96) BroadcastHashJoin [i_brand_id#444, i_class_id#446, i_category_id#448], [brand_id#5620, class_id#5621, category_id#5622], Inner, BuildLeft, false
                     :                       :     :                       :- BroadcastQueryStage 1
                     :                       :     :                       :  +- BroadcastExchange HashedRelationBroadcastMode(List(input[1, int, false], input[2, int, false], input[3, int, false]),false), [plan_id=15607]
                     :                       :     :                       :     +- *(2) Filter ((isnotnull(i_brand_id#444) AND isnotnull(i_class_id#446)) AND isnotnull(i_category_id#448))
                     :                       :     :                       :        +- *(2) ColumnarToRow
                     :                       :     :                       :           +- FileScan parquet default.item[i_item_sk#437,i_brand_id#444,i_class_id#446,i_category_id#448] Batched: true, DataFilters: [isnotnull(i_brand_id#444), isnotnull(i_class_id#446), isnotnull(i_category_id#448)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>
                     :                       :     :                       +- *(96) SortMergeJoin [coalesce(brand_id#5620, 0), isnull(brand_id#5620), coalesce(class_id#5621, 0), isnull(class_id#5621), coalesce(category_id#5622, 0), isnull(category_id#5622)], [coalesce(i_brand_id#5713, 0), isnull(i_brand_id#5713), coalesce(i_class_id#5715, 0), isnull(i_class_id#5715), coalesce(i_category_id#5717, 0), isnull(i_category_id#5717)], LeftSemi
                     :                       :     :                          :- *(94) Sort [coalesce(brand_id#5620, 0) ASC NULLS FIRST, isnull(brand_id#5620) ASC NULLS FIRST, coalesce(class_id#5621, 0) ASC NULLS FIRST, isnull(class_id#5621) ASC NULLS FIRST, coalesce(category_id#5622, 0) ASC NULLS FIRST, isnull(category_id#5622) ASC NULLS FIRST], false, 0
                     :                       :     :                          :  +- ShuffleQueryStage 137
                     :                       :     :                          :     +- Exchange hashpartitioning(coalesce(brand_id#5620, 0), isnull(brand_id#5620), coalesce(class_id#5621, 0), isnull(class_id#5621), coalesce(category_id#5622, 0), isnull(category_id#5622), 20), ENSURE_REQUIREMENTS, [plan_id=33808]
                     :                       :     :                          :        +- *(88) HashAggregate(keys=[brand_id#5620, class_id#5621, category_id#5622], functions=[], output=[brand_id#5620, class_id#5621, category_id#5622])
                     :                       :     :                          :           +- ShuffleQueryStage 126
                     :                       :     :                          :              +- Exchange hashpartitioning(brand_id#5620, class_id#5621, category_id#5622, 20), ENSURE_REQUIREMENTS, [plan_id=32955]
                     :                       :     :                          :                 +- *(82) HashAggregate(keys=[brand_id#5620, class_id#5621, category_id#5622], functions=[], output=[brand_id#5620, class_id#5621, category_id#5622])
                     :                       :     :                          :                    +- *(82) Project [i_brand_id#5641 AS brand_id#5620, i_class_id#5643 AS class_id#5621, i_category_id#5645 AS category_id#5622]
                     :                       :     :                          :                       +- *(82) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#24], Inner, BuildRight, false
                     :                       :     :                          :                          :- *(82) Project [ss_sold_date_sk#414, i_brand_id#5641, i_class_id#5643, i_category_id#5645]
                     :                       :     :                          :                          :  +- *(82) BroadcastHashJoin [ss_item_sk#416], [i_item_sk#5634], Inner, BuildRight, false
                     :                       :     :                          :                          :     :- *(82) Filter (isnotnull(ss_item_sk#416) AND isnotnull(ss_sold_date_sk#414))
                     :                       :     :                          :                          :     :  +- *(82) ColumnarToRow
                     :                       :     :                          :                          :     :     +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_item_sk#416] Batched: true, DataFilters: [isnotnull(ss_item_sk#416), isnotnull(ss_sold_date_sk#414)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int>
                     :                       :     :                          :                          :     +- BroadcastQueryStage 115
                     :                       :     :                          :                          :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=29824]
                     :                       :     :                          :                          :           +- *(66) SortMergeJoin [coalesce(i_brand_id#5641, 0), isnull(i_brand_id#5641), coalesce(i_class_id#5643, 0), isnull(i_class_id#5643), coalesce(i_category_id#5645, 0), isnull(i_category_id#5645)], [coalesce(i_brand_id#5663, 0), isnull(i_brand_id#5663), coalesce(i_class_id#5665, 0), isnull(i_class_id#5665), coalesce(i_category_id#5667, 0), isnull(i_category_id#5667)], LeftSemi
                     :                       :     :                          :                          :              :- *(64) Sort [coalesce(i_brand_id#5641, 0) ASC NULLS FIRST, isnull(i_brand_id#5641) ASC NULLS FIRST, coalesce(i_class_id#5643, 0) ASC NULLS FIRST, isnull(i_class_id#5643) ASC NULLS FIRST, coalesce(i_category_id#5645, 0) ASC NULLS FIRST, isnull(i_category_id#5645) ASC NULLS FIRST], false, 0
                     :                       :     :                          :                          :              :  +- ShuffleQueryStage 2
                     :                       :     :                          :                          :              :     +- Exchange hashpartitioning(coalesce(i_brand_id#5641, 0), isnull(i_brand_id#5641), coalesce(i_class_id#5643, 0), isnull(i_class_id#5643), coalesce(i_category_id#5645, 0), isnull(i_category_id#5645), 20), ENSURE_REQUIREMENTS, [plan_id=15622]
                     :                       :     :                          :                          :              :        +- *(3) Filter (((isnotnull(i_item_sk#5634) AND isnotnull(i_brand_id#5641)) AND isnotnull(i_class_id#5643)) AND isnotnull(i_category_id#5645))
                     :                       :     :                          :                          :              :           +- *(3) ColumnarToRow
                     :                       :     :                          :                          :              :              +- FileScan parquet default.item[i_item_sk#5634,i_brand_id#5641,i_class_id#5643,i_category_id#5645] Batched: true, DataFilters: [isnotnull(i_item_sk#5634), isnotnull(i_brand_id#5641), isnotnull(i_class_id#5643), isnotnull(i_c..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>
                     :                       :     :                          :                          :              +- *(65) Sort [coalesce(i_brand_id#5663, 0) ASC NULLS FIRST, isnull(i_brand_id#5663) ASC NULLS FIRST, coalesce(i_class_id#5665, 0) ASC NULLS FIRST, isnull(i_class_id#5665) ASC NULLS FIRST, coalesce(i_category_id#5667, 0) ASC NULLS FIRST, isnull(i_category_id#5667) ASC NULLS FIRST], false, 0
                     :                       :     :                          :                          :                 +- ShuffleQueryStage 93
                     :                       :     :                          :                          :                    +- Exchange hashpartitioning(coalesce(i_brand_id#5663, 0), isnull(i_brand_id#5663), coalesce(i_class_id#5665, 0), isnull(i_class_id#5665), coalesce(i_category_id#5667, 0), isnull(i_category_id#5667), 20), ENSURE_REQUIREMENTS, [plan_id=24099]
                     :                       :     :                          :                          :                       +- *(52) Project [i_brand_id#5663, i_class_id#5665, i_category_id#5667]
                     :                       :     :                          :                          :                          +- *(52) BroadcastHashJoin [cs_sold_date_sk#197], [d_date_sk#5678], Inner, BuildRight, false
                     :                       :     :                          :                          :                             :- *(52) Project [cs_sold_date_sk#197, i_brand_id#5663, i_class_id#5665, i_category_id#5667]
                     :                       :     :                          :                          :                             :  +- *(52) BroadcastHashJoin [cs_item_sk#212], [i_item_sk#5656], Inner, BuildRight, false
                     :                       :     :                          :                          :                             :     :- *(52) Filter (isnotnull(cs_item_sk#212) AND isnotnull(cs_sold_date_sk#197))
                     :                       :     :                          :                          :                             :     :  +- *(52) ColumnarToRow
                     :                       :     :                          :                          :                             :     :     +- FileScan parquet default.catalog_sales[cs_sold_date_sk#197,cs_item_sk#212] Batched: true, DataFilters: [isnotnull(cs_item_sk#212), isnotnull(cs_sold_date_sk#197)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_item_sk), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_item_sk:int>
                     :                       :     :                          :                          :                             :     +- BroadcastQueryStage 3
                     :                       :     :                          :                          :                             :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=15639]
                     :                       :     :                          :                          :                             :           +- *(4) Filter isnotnull(i_item_sk#5656)
                     :                       :     :                          :                          :                             :              +- *(4) ColumnarToRow
                     :                       :     :                          :                          :                             :                 +- FileScan parquet default.item[i_item_sk#5656,i_brand_id#5663,i_class_id#5665,i_category_id#5667] Batched: true, DataFilters: [isnotnull(i_item_sk#5656)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>
                     :                       :     :                          :                          :                             +- BroadcastQueryStage 4
                     :                       :     :                          :                          :                                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=15658]
                     :                       :     :                          :                          :                                   +- *(5) Project [d_date_sk#5678]
                     :                       :     :                          :                          :                                      +- *(5) Filter (((isnotnull(d_year#5684) AND (d_year#5684 >= 1999)) AND (d_year#5684 <= 2001)) AND isnotnull(d_date_sk#5678))
                     :                       :     :                          :                          :                                         +- *(5) ColumnarToRow
                     :                       :     :                          :                          :                                            +- FileScan parquet default.date_dim[d_date_sk#5678,d_year#5684] Batched: true, DataFilters: [isnotnull(d_year#5684), (d_year#5684 >= 1999), (d_year#5684 <= 2001), isnotnull(d_date_sk#5678)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1999), LessThanOrEqual(d_year,2001), IsNotNull(d_da..., ReadSchema: struct<d_date_sk:int,d_year:int>
                     :                       :     :                          :                          +- BroadcastQueryStage 6
                     :                       :     :                          :                             +- ReusedExchange [d_date_sk#24], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=15658]
                     :                       :     :                          +- *(95) Sort [coalesce(i_brand_id#5713, 0) ASC NULLS FIRST, isnull(i_brand_id#5713) ASC NULLS FIRST, coalesce(i_class_id#5715, 0) ASC NULLS FIRST, isnull(i_class_id#5715) ASC NULLS FIRST, coalesce(i_category_id#5717, 0) ASC NULLS FIRST, isnull(i_category_id#5717) ASC NULLS FIRST], false, 0
                     :                       :     :                             +- ShuffleQueryStage 94
                     :                       :     :                                +- Exchange hashpartitioning(coalesce(i_brand_id#5713, 0), isnull(i_brand_id#5713), coalesce(i_class_id#5715, 0), isnull(i_class_id#5715), coalesce(i_category_id#5717, 0), isnull(i_category_id#5717), 20), ENSURE_REQUIREMENTS, [plan_id=24147]
                     :                       :     :                                   +- *(53) Project [i_brand_id#5713, i_class_id#5715, i_category_id#5717]
                     :                       :     :                                      +- *(53) BroadcastHashJoin [ws_sold_date_sk#163], [d_date_sk#5728], Inner, BuildRight, false
                     :                       :     :                                         :- *(53) Project [ws_sold_date_sk#163, i_brand_id#5713, i_class_id#5715, i_category_id#5717]
                     :                       :     :                                         :  +- *(53) BroadcastHashJoin [ws_item_sk#166], [i_item_sk#5706], Inner, BuildRight, false
                     :                       :     :                                         :     :- *(53) Filter (isnotnull(ws_item_sk#166) AND isnotnull(ws_sold_date_sk#163))
                     :                       :     :                                         :     :  +- *(53) ColumnarToRow
                     :                       :     :                                         :     :     +- FileScan parquet default.web_sales[ws_sold_date_sk#163,ws_item_sk#166] Batched: true, DataFilters: [isnotnull(ws_item_sk#166), isnotnull(ws_sold_date_sk#163)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_item_sk), IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int>
                     :                       :     :                                         :     +- BroadcastQueryStage 8
                     :                       :     :                                         :        +- ReusedExchange [i_item_sk#5706, i_brand_id#5713, i_class_id#5715, i_category_id#5717], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=15639]
                     :                       :     :                                         +- BroadcastQueryStage 10
                     :                       :     :                                            +- ReusedExchange [d_date_sk#5728], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=15658]
                     :                       :     +- BroadcastQueryStage 170
                     :                       :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=36138]
                     :                       :           +- *(112) BroadcastHashJoin [i_item_sk#5954], [ss_item_sk#5623], LeftSemi, BuildRight, false
                     :                       :              :- AQEShuffleRead local
                     :                       :              :  +- ShuffleQueryStage 11
                     :                       :              :     +- Exchange hashpartitioning(i_item_sk#5954, 20), ENSURE_REQUIREMENTS, [plan_id=15761]
                     :                       :              :        +- *(9) Filter isnotnull(i_item_sk#5954)
                     :                       :              :           +- *(9) ColumnarToRow
                     :                       :              :              +- FileScan parquet default.item[i_item_sk#5954,i_brand_id#5961,i_class_id#5963,i_category_id#5965] Batched: true, DataFilters: [isnotnull(i_item_sk#5954)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>
                     :                       :              +- BroadcastQueryStage 161
                     :                       :                 +- ReusedExchange [ss_item_sk#5623], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=35614]
                     :                       +- BroadcastQueryStage 26
                     :                          +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=15945]
                     :                             +- *(17) Project [d_date_sk#5976]
                     :                                +- *(17) Filter ((((isnotnull(d_year#5982) AND isnotnull(d_moy#5984)) AND (d_year#5982 = 2001)) AND (d_moy#5984 = 11)) AND isnotnull(d_date_sk#5976))
                     :                                   +- *(17) ColumnarToRow
                     :                                      +- FileScan parquet default.date_dim[d_date_sk#5976,d_year#5982,d_moy#5984] Batched: true, DataFilters: [isnotnull(d_year#5982), isnotnull(d_moy#5984), (d_year#5982 = 2001), (d_moy#5984 = 11), isnotnul..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2001), EqualTo(d_moy,11), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                     :- *(119) Project [sales#5611, number_sales#5612L, catalog AS channel#6233, i_brand_id#6045, i_class_id#6047, i_category_id#6049]
                     :  +- *(119) Filter (isnotnull(sales#5611) AND (cast(sales#5611 as decimal(32,6)) > cast(ReusedSubquery Subquery subquery#5609, [id=#14026] as decimal(32,6))))
                     :     :  +- ReusedSubquery Subquery subquery#5609, [id=#14026]
                     :     +- *(119) HashAggregate(keys=[i_brand_id#6045, i_class_id#6047, i_category_id#6049], functions=[sum(CheckOverflow((promote_precision(cast(cs_quantity#6022 as decimal(12,2))) * promote_precision(cast(cs_list_price#6024 as decimal(12,2)))), DecimalType(18,2))), count(1)], output=[i_brand_id#6045, i_class_id#6047, i_category_id#6049, sales#5611, number_sales#5612L])
                     :        +- ShuffleQueryStage 176
                     :           +- Exchange hashpartitioning(i_brand_id#6045, i_class_id#6047, i_category_id#6049, 20), ENSURE_REQUIREMENTS, [plan_id=36484]
                     :              +- *(116) HashAggregate(keys=[i_brand_id#6045, i_class_id#6047, i_category_id#6049], functions=[partial_sum(CheckOverflow((promote_precision(cast(cs_quantity#6022 as decimal(12,2))) * promote_precision(cast(cs_list_price#6024 as decimal(12,2)))), DecimalType(18,2))), partial_count(1)], output=[i_brand_id#6045, i_class_id#6047, i_category_id#6049, sum#6256, isEmpty#6257, count#6258L])
                     :                 +- *(116) Project [cs_quantity#6022, cs_list_price#6024, i_brand_id#6045, i_class_id#6047, i_category_id#6049]
                     :                    +- *(116) BroadcastHashJoin [cs_sold_date_sk#6004], [d_date_sk#6060], Inner, BuildRight, false
                     :                       :- *(116) Project [cs_sold_date_sk#6004, cs_quantity#6022, cs_list_price#6024, i_brand_id#6045, i_class_id#6047, i_category_id#6049]
                     :                       :  +- *(116) BroadcastHashJoin [cs_item_sk#6019], [i_item_sk#6038], Inner, BuildRight, false
                     :                       :     :- *(116) BroadcastHashJoin [cs_item_sk#6019], [ss_item_sk#5623], LeftSemi, BuildRight, false
                     :                       :     :  :- AQEShuffleRead local
                     :                       :     :  :  +- ShuffleQueryStage 27
                     :                       :     :  :     +- Exchange hashpartitioning(cs_item_sk#6019, 20), ENSURE_REQUIREMENTS, [plan_id=15969]
                     :                       :     :  :        +- *(18) Filter (isnotnull(cs_item_sk#6019) AND isnotnull(cs_sold_date_sk#6004))
                     :                       :     :  :           +- *(18) ColumnarToRow
                     :                       :     :  :              +- FileScan parquet default.catalog_sales[cs_sold_date_sk#6004,cs_item_sk#6019,cs_quantity#6022,cs_list_price#6024] Batched: true, DataFilters: [isnotnull(cs_item_sk#6019), isnotnull(cs_sold_date_sk#6004)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_item_sk), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:decimal(7,2)>
                     :                       :     :  +- BroadcastQueryStage 163
                     :                       :     :     +- ReusedExchange [ss_item_sk#5623], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=35614]
                     :                       :     +- BroadcastQueryStage 172
                     :                       :        +- ReusedExchange [i_item_sk#6038, i_brand_id#6045, i_class_id#6047, i_category_id#6049], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=36138]
                     :                       +- BroadcastQueryStage 59
                     :                          +- ReusedExchange [d_date_sk#6060], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=15945]
                     +- *(120) Project [sales#5616, number_sales#5617L, web AS channel#6237, i_brand_id#6129, i_class_id#6131, i_category_id#6133]
                        +- *(120) Filter (isnotnull(sales#5616) AND (cast(sales#5616 as decimal(32,6)) > cast(ReusedSubquery Subquery subquery#5609, [id=#14026] as decimal(32,6))))
                           :  +- ReusedSubquery Subquery subquery#5609, [id=#14026]
                           +- *(120) HashAggregate(keys=[i_brand_id#6129, i_class_id#6131, i_category_id#6133], functions=[sum(CheckOverflow((promote_precision(cast(ws_quantity#6106 as decimal(12,2))) * promote_precision(cast(ws_list_price#6108 as decimal(12,2)))), DecimalType(18,2))), count(1)], output=[i_brand_id#6129, i_class_id#6131, i_category_id#6133, sales#5616, number_sales#5617L])
                              +- ShuffleQueryStage 177
                                 +- Exchange hashpartitioning(i_brand_id#6129, i_class_id#6131, i_category_id#6133, 20), ENSURE_REQUIREMENTS, [plan_id=36528]
                                    +- *(117) HashAggregate(keys=[i_brand_id#6129, i_class_id#6131, i_category_id#6133], functions=[partial_sum(CheckOverflow((promote_precision(cast(ws_quantity#6106 as decimal(12,2))) * promote_precision(cast(ws_list_price#6108 as decimal(12,2)))), DecimalType(18,2))), partial_count(1)], output=[i_brand_id#6129, i_class_id#6131, i_category_id#6133, sum#6262, isEmpty#6263, count#6264L])
                                       +- *(117) Project [ws_quantity#6106, ws_list_price#6108, i_brand_id#6129, i_class_id#6131, i_category_id#6133]
                                          +- *(117) BroadcastHashJoin [ws_sold_date_sk#6088], [d_date_sk#6144], Inner, BuildRight, false
                                             :- *(117) Project [ws_sold_date_sk#6088, ws_quantity#6106, ws_list_price#6108, i_brand_id#6129, i_class_id#6131, i_category_id#6133]
                                             :  +- *(117) BroadcastHashJoin [ws_item_sk#6091], [i_item_sk#6122], Inner, BuildRight, false
                                             :     :- *(117) BroadcastHashJoin [ws_item_sk#6091], [ss_item_sk#5623], LeftSemi, BuildRight, false
                                             :     :  :- AQEShuffleRead local
                                             :     :  :  +- ShuffleQueryStage 60
                                             :     :  :     +- Exchange hashpartitioning(ws_item_sk#6091, 20), ENSURE_REQUIREMENTS, [plan_id=16360]
                                             :     :  :        +- *(35) Filter (isnotnull(ws_item_sk#6091) AND isnotnull(ws_sold_date_sk#6088))
                                             :     :  :           +- *(35) ColumnarToRow
                                             :     :  :              +- FileScan parquet default.web_sales[ws_sold_date_sk#6088,ws_item_sk#6091,ws_quantity#6106,ws_list_price#6108] Batched: true, DataFilters: [isnotnull(ws_item_sk#6091), isnotnull(ws_sold_date_sk#6088)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_item_sk), IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_quantity:int,ws_list_price:decimal(7,2)>
                                             :     :  +- BroadcastQueryStage 167
                                             :     :     +- ReusedExchange [ss_item_sk#5623], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=35614]
                                             :     +- BroadcastQueryStage 174
                                             :        +- ReusedExchange [i_item_sk#6122, i_brand_id#6129, i_class_id#6131, i_category_id#6133], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=36138]
                                             +- BroadcastQueryStage 92
                                                +- ReusedExchange [d_date_sk#6144], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=15945]


==== q14b ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[i_brand_id#6804 ASC NULLS FIRST,i_class_id#6806 ASC NULLS FIRST,i_category_id#6808 ASC NULLS FIRST], output=[channel#6452,i_brand_id#6804,i_class_id#6806,i_category_id#6808,sales#6453,number_sales#6454L,channel#6458,i_brand_id#6877,i_class_id#6879,i_category_id#6881,sales#6459,number_sales#6460L])
   +- *(80) BroadcastHashJoin [i_brand_id#6804, i_class_id#6806, i_category_id#6808], [i_brand_id#6877, i_class_id#6879, i_category_id#6881], Inner, BuildLeft, false
      :- BroadcastQueryStage 114
      :  +- BroadcastExchange HashedRelationBroadcastMode(List(input[1, int, true], input[2, int, true], input[3, int, true]),false), [plan_id=49693]
      :     +- *(79) Filter (isnotnull(sales#6453) AND (cast(sales#6453 as decimal(32,6)) > cast(Subquery subquery#6457, [id=#37805] as decimal(32,6))))
      :        :  +- Subquery subquery#6457, [id=#37805]
      :        :     +- AdaptiveSparkPlan isFinalPlan=true
                     +- == Final Plan ==
                        *(8) HashAggregate(keys=[], functions=[avg(CheckOverflow((promote_precision(cast(quantity#6468 as decimal(12,2))) * promote_precision(cast(list_price#6469 as decimal(12,2)))), DecimalType(18,2)))], output=[average_sales#6474])
                        +- ShuffleQueryStage 6
                           +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=49835]
                              +- *(7) HashAggregate(keys=[], functions=[partial_avg(CheckOverflow((promote_precision(cast(quantity#6468 as decimal(12,2))) * promote_precision(cast(list_price#6469 as decimal(12,2)))), DecimalType(18,2)))], output=[sum#7034, count#7035L])
                                 +- Union
                                    :- *(4) Project [ss_quantity#6609 AS quantity#6468, ss_list_price#6611 AS list_price#6469]
                                    :  +- *(4) BroadcastHashJoin [ss_sold_date_sk#6599], [d_date_sk#6622], Inner, BuildRight, false
                                    :     :- *(4) Filter isnotnull(ss_sold_date_sk#6599)
                                    :     :  +- *(4) ColumnarToRow
                                    :     :     +- FileScan parquet default.store_sales[ss_sold_date_sk#6599,ss_quantity#6609,ss_list_price#6611] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#6599)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_quantity:int,ss_list_price:decimal(7,2)>
                                    :     +- BroadcastQueryStage 1
                                    :        +- ReusedExchange [d_date_sk#6622], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=38565]
                                    :- *(5) Project [cs_quantity#6668 AS quantity#6470, cs_list_price#6670 AS list_price#6471]
                                    :  +- *(5) BroadcastHashJoin [cs_sold_date_sk#6650], [d_date_sk#6684], Inner, BuildRight, false
                                    :     :- *(5) Filter isnotnull(cs_sold_date_sk#6650)
                                    :     :  +- *(5) ColumnarToRow
                                    :     :     +- FileScan parquet default.catalog_sales[cs_sold_date_sk#6650,cs_quantity#6668,cs_list_price#6670] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#6650)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_quantity:int,cs_list_price:decimal(7,2)>
                                    :     +- BroadcastQueryStage 3
                                    :        +- ReusedExchange [d_date_sk#6684], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=38565]
                                    +- *(6) Project [ws_quantity#6730 AS quantity#6472, ws_list_price#6732 AS list_price#6473]
                                       +- *(6) BroadcastHashJoin [ws_sold_date_sk#6712], [d_date_sk#6746], Inner, BuildRight, false
                                          :- *(6) Filter isnotnull(ws_sold_date_sk#6712)
                                          :  +- *(6) ColumnarToRow
                                          :     +- FileScan parquet default.web_sales[ws_sold_date_sk#6712,ws_quantity#6730,ws_list_price#6732] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#6712)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_quantity:int,ws_list_price:decimal(7,2)>
                                          +- BroadcastQueryStage 5
                                             +- ReusedExchange [d_date_sk#6746], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=38565]
                     +- == Initial Plan ==
                        HashAggregate(keys=[], functions=[avg(CheckOverflow((promote_precision(cast(quantity#6468 as decimal(12,2))) * promote_precision(cast(list_price#6469 as decimal(12,2)))), DecimalType(18,2)))], output=[average_sales#6474])
                        +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=37803]
                           +- HashAggregate(keys=[], functions=[partial_avg(CheckOverflow((promote_precision(cast(quantity#6468 as decimal(12,2))) * promote_precision(cast(list_price#6469 as decimal(12,2)))), DecimalType(18,2)))], output=[sum#7034, count#7035L])
                              +- Union
                                 :- Project [ss_quantity#6609 AS quantity#6468, ss_list_price#6611 AS list_price#6469]
                                 :  +- BroadcastHashJoin [ss_sold_date_sk#6599], [d_date_sk#6622], Inner, BuildRight, false
                                 :     :- Filter isnotnull(ss_sold_date_sk#6599)
                                 :     :  +- FileScan parquet default.store_sales[ss_sold_date_sk#6599,ss_quantity#6609,ss_list_price#6611] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#6599)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_quantity:int,ss_list_price:decimal(7,2)>
                                 :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=37791]
                                 :        +- Project [d_date_sk#6622]
                                 :           +- Filter (((isnotnull(d_year#6628) AND (d_year#6628 >= 1999)) AND (d_year#6628 <= 2001)) AND isnotnull(d_date_sk#6622))
                                 :              +- FileScan parquet default.date_dim[d_date_sk#6622,d_year#6628] Batched: true, DataFilters: [isnotnull(d_year#6628), (d_year#6628 >= 1999), (d_year#6628 <= 2001), isnotnull(d_date_sk#6622)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1999), LessThanOrEqual(d_year,2001), IsNotNull(d_da..., ReadSchema: struct<d_date_sk:int,d_year:int>
                                 :- Project [cs_quantity#6668 AS quantity#6470, cs_list_price#6670 AS list_price#6471]
                                 :  +- BroadcastHashJoin [cs_sold_date_sk#6650], [d_date_sk#6684], Inner, BuildRight, false
                                 :     :- Filter isnotnull(cs_sold_date_sk#6650)
                                 :     :  +- FileScan parquet default.catalog_sales[cs_sold_date_sk#6650,cs_quantity#6668,cs_list_price#6670] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#6650)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_quantity:int,cs_list_price:decimal(7,2)>
                                 :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=37794]
                                 :        +- Project [d_date_sk#6684]
                                 :           +- Filter (((isnotnull(d_year#6690) AND (d_year#6690 >= 1999)) AND (d_year#6690 <= 2001)) AND isnotnull(d_date_sk#6684))
                                 :              +- FileScan parquet default.date_dim[d_date_sk#6684,d_year#6690] Batched: true, DataFilters: [isnotnull(d_year#6690), (d_year#6690 >= 1999), (d_year#6690 <= 2001), isnotnull(d_date_sk#6684)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1999), LessThanOrEqual(d_year,2001), IsNotNull(d_da..., ReadSchema: struct<d_date_sk:int,d_year:int>
                                 +- Project [ws_quantity#6730 AS quantity#6472, ws_list_price#6732 AS list_price#6473]
                                    +- BroadcastHashJoin [ws_sold_date_sk#6712], [d_date_sk#6746], Inner, BuildRight, false
                                       :- Filter isnotnull(ws_sold_date_sk#6712)
                                       :  +- FileScan parquet default.web_sales[ws_sold_date_sk#6712,ws_quantity#6730,ws_list_price#6732] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#6712)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_quantity:int,ws_list_price:decimal(7,2)>
                                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=37797]
                                          +- Project [d_date_sk#6746]
                                             +- Filter (((isnotnull(d_year#6752) AND (d_year#6752 >= 1999)) AND (d_year#6752 <= 2001)) AND isnotnull(d_date_sk#6746))
                                                +- FileScan parquet default.date_dim[d_date_sk#6746,d_year#6752] Batched: true, DataFilters: [isnotnull(d_year#6752), (d_year#6752 >= 1999), (d_year#6752 <= 2001), isnotnull(d_date_sk#6746)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1999), LessThanOrEqual(d_year,2001), IsNotNull(d_da..., ReadSchema: struct<d_date_sk:int,d_year:int>
      :        +- *(79) HashAggregate(keys=[i_brand_id#6804, i_class_id#6806, i_category_id#6808], functions=[sum(CheckOverflow((promote_precision(cast(ss_quantity#6784 as decimal(12,2))) * promote_precision(cast(ss_list_price#6786 as decimal(12,2)))), DecimalType(18,2))), count(1)], output=[channel#6452, i_brand_id#6804, i_class_id#6806, i_category_id#6808, sales#6453, number_sales#6454L])
      :           +- ShuffleQueryStage 112
      :              +- Exchange hashpartitioning(i_brand_id#6804, i_class_id#6806, i_category_id#6808, 20), ENSURE_REQUIREMENTS, [plan_id=49532]
      :                 +- *(77) HashAggregate(keys=[i_brand_id#6804, i_class_id#6806, i_category_id#6808], functions=[partial_sum(CheckOverflow((promote_precision(cast(ss_quantity#6784 as decimal(12,2))) * promote_precision(cast(ss_list_price#6786 as decimal(12,2)))), DecimalType(18,2))), partial_count(1)], output=[i_brand_id#6804, i_class_id#6806, i_category_id#6808, sum#7023, isEmpty#7024, count#7025L])
      :                    +- *(77) Project [ss_quantity#6784, ss_list_price#6786, i_brand_id#6804, i_class_id#6806, i_category_id#6808]
      :                       +- *(77) BroadcastHashJoin [ss_sold_date_sk#6774], [d_date_sk#6819], Inner, BuildRight, false
      :                          :- *(77) Project [ss_sold_date_sk#6774, ss_quantity#6784, ss_list_price#6786, i_brand_id#6804, i_class_id#6806, i_category_id#6808]
      :                          :  +- *(77) BroadcastHashJoin [ss_item_sk#6776], [i_item_sk#6797], Inner, BuildRight, false
      :                          :     :- *(77) BroadcastHashJoin [ss_item_sk#6776], [ss_item_sk#6467], LeftSemi, BuildRight, false
      :                          :     :  :- AQEShuffleRead local
      :                          :     :  :  +- ShuffleQueryStage 0
      :                          :     :  :     +- Exchange hashpartitioning(ss_item_sk#6776, 20), ENSURE_REQUIREMENTS, [plan_id=38497]
      :                          :     :  :        +- *(1) Filter (isnotnull(ss_item_sk#6776) AND isnotnull(ss_sold_date_sk#6774))
      :                          :     :  :           +- *(1) ColumnarToRow
      :                          :     :  :              +- FileScan parquet default.store_sales[ss_sold_date_sk#6774,ss_item_sk#6776,ss_quantity#6784,ss_list_price#6786] Batched: true, DataFilters: [isnotnull(ss_item_sk#6776), isnotnull(ss_sold_date_sk#6774)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_quantity:int,ss_list_price:decimal(7,2)>
      :                          :     :  +- BroadcastQueryStage 102
      :                          :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=49155]
      :                          :     :        +- AQEShuffleRead local
      :                          :     :           +- ShuffleQueryStage 95
      :                          :     :              +- Exchange hashpartitioning(ss_item_sk#6467, 20), ENSURE_REQUIREMENTS, [plan_id=48690]
      :                          :     :                 +- *(65) Project [i_item_sk#437 AS ss_item_sk#6467]
      :                          :     :                    +- *(65) BroadcastHashJoin [i_brand_id#444, i_class_id#446, i_category_id#448], [brand_id#6464, class_id#6465, category_id#6466], Inner, BuildLeft, false
      :                          :     :                       :- BroadcastQueryStage 1
      :                          :     :                       :  +- BroadcastExchange HashedRelationBroadcastMode(List(input[1, int, false], input[2, int, false], input[3, int, false]),false), [plan_id=38514]
      :                          :     :                       :     +- *(2) Filter ((isnotnull(i_brand_id#444) AND isnotnull(i_class_id#446)) AND isnotnull(i_category_id#448))
      :                          :     :                       :        +- *(2) ColumnarToRow
      :                          :     :                       :           +- FileScan parquet default.item[i_item_sk#437,i_brand_id#444,i_class_id#446,i_category_id#448] Batched: true, DataFilters: [isnotnull(i_brand_id#444), isnotnull(i_class_id#446), isnotnull(i_category_id#448)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>
      :                          :     :                       +- *(65) SortMergeJoin [coalesce(brand_id#6464, 0), isnull(brand_id#6464), coalesce(class_id#6465, 0), isnull(class_id#6465), coalesce(category_id#6466, 0), isnull(category_id#6466)], [coalesce(i_brand_id#6556, 0), isnull(i_brand_id#6556), coalesce(i_class_id#6558, 0), isnull(i_class_id#6558), coalesce(i_category_id#6560, 0), isnull(i_category_id#6560)], LeftSemi
      :                          :     :                          :- *(63) Sort [coalesce(brand_id#6464, 0) ASC NULLS FIRST, isnull(brand_id#6464) ASC NULLS FIRST, coalesce(class_id#6465, 0) ASC NULLS FIRST, isnull(class_id#6465) ASC NULLS FIRST, coalesce(category_id#6466, 0) ASC NULLS FIRST, isnull(category_id#6466) ASC NULLS FIRST], false, 0
      :                          :     :                          :  +- ShuffleQueryStage 88
      :                          :     :                          :     +- Exchange hashpartitioning(coalesce(brand_id#6464, 0), isnull(brand_id#6464), coalesce(class_id#6465, 0), isnull(class_id#6465), coalesce(category_id#6466, 0), isnull(category_id#6466), 20), ENSURE_REQUIREMENTS, [plan_id=48029]
      :                          :     :                          :        +- *(59) HashAggregate(keys=[brand_id#6464, class_id#6465, category_id#6466], functions=[], output=[brand_id#6464, class_id#6465, category_id#6466])
      :                          :     :                          :           +- ShuffleQueryStage 81
      :                          :     :                          :              +- Exchange hashpartitioning(brand_id#6464, class_id#6465, category_id#6466, 20), ENSURE_REQUIREMENTS, [plan_id=47062]
      :                          :     :                          :                 +- *(55) HashAggregate(keys=[brand_id#6464, class_id#6465, category_id#6466], functions=[], output=[brand_id#6464, class_id#6465, category_id#6466])
      :                          :     :                          :                    +- *(55) Project [i_brand_id#6484 AS brand_id#6464, i_class_id#6486 AS class_id#6465, i_category_id#6488 AS category_id#6466]
      :                          :     :                          :                       +- *(55) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#24], Inner, BuildRight, false
      :                          :     :                          :                          :- *(55) Project [ss_sold_date_sk#414, i_brand_id#6484, i_class_id#6486, i_category_id#6488]
      :                          :     :                          :                          :  +- *(55) BroadcastHashJoin [ss_item_sk#416], [i_item_sk#6477], Inner, BuildRight, false
      :                          :     :                          :                          :     :- *(55) Filter (isnotnull(ss_item_sk#416) AND isnotnull(ss_sold_date_sk#414))
      :                          :     :                          :                          :     :  +- *(55) ColumnarToRow
      :                          :     :                          :                          :     :     +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_item_sk#416] Batched: true, DataFilters: [isnotnull(ss_item_sk#416), isnotnull(ss_sold_date_sk#414)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int>
      :                          :     :                          :                          :     +- BroadcastQueryStage 74
      :                          :     :                          :                          :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=45599]
      :                          :     :                          :                          :           +- *(45) SortMergeJoin [coalesce(i_brand_id#6484, 0), isnull(i_brand_id#6484), coalesce(i_class_id#6486, 0), isnull(i_class_id#6486), coalesce(i_category_id#6488, 0), isnull(i_category_id#6488)], [coalesce(i_brand_id#6506, 0), isnull(i_brand_id#6506), coalesce(i_class_id#6508, 0), isnull(i_class_id#6508), coalesce(i_category_id#6510, 0), isnull(i_category_id#6510)], LeftSemi
      :                          :     :                          :                          :              :- *(43) Sort [coalesce(i_brand_id#6484, 0) ASC NULLS FIRST, isnull(i_brand_id#6484) ASC NULLS FIRST, coalesce(i_class_id#6486, 0) ASC NULLS FIRST, isnull(i_class_id#6486) ASC NULLS FIRST, coalesce(i_category_id#6488, 0) ASC NULLS FIRST, isnull(i_category_id#6488) ASC NULLS FIRST], false, 0
      :                          :     :                          :                          :              :  +- ShuffleQueryStage 2
      :                          :     :                          :                          :              :     +- Exchange hashpartitioning(coalesce(i_brand_id#6484, 0), isnull(i_brand_id#6484), coalesce(i_class_id#6486, 0), isnull(i_class_id#6486), coalesce(i_category_id#6488, 0), isnull(i_category_id#6488), 20), ENSURE_REQUIREMENTS, [plan_id=38529]
      :                          :     :                          :                          :              :        +- *(3) Filter (((isnotnull(i_item_sk#6477) AND isnotnull(i_brand_id#6484)) AND isnotnull(i_class_id#6486)) AND isnotnull(i_category_id#6488))
      :                          :     :                          :                          :              :           +- *(3) ColumnarToRow
      :                          :     :                          :                          :              :              +- FileScan parquet default.item[i_item_sk#6477,i_brand_id#6484,i_class_id#6486,i_category_id#6488] Batched: true, DataFilters: [isnotnull(i_item_sk#6477), isnotnull(i_brand_id#6484), isnotnull(i_class_id#6486), isnotnull(i_c..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>
      :                          :     :                          :                          :              +- *(44) Sort [coalesce(i_brand_id#6506, 0) ASC NULLS FIRST, isnull(i_brand_id#6506) ASC NULLS FIRST, coalesce(i_class_id#6508, 0) ASC NULLS FIRST, isnull(i_class_id#6508) ASC NULLS FIRST, coalesce(i_category_id#6510, 0) ASC NULLS FIRST, isnull(i_category_id#6510) ASC NULLS FIRST], false, 0
      :                          :     :                          :                          :                 +- ShuffleQueryStage 60
      :                          :     :                          :                          :                    +- Exchange hashpartitioning(coalesce(i_brand_id#6506, 0), isnull(i_brand_id#6506), coalesce(i_class_id#6508, 0), isnull(i_class_id#6508), coalesce(i_category_id#6510, 0), isnull(i_category_id#6510), 20), ENSURE_REQUIREMENTS, [plan_id=42370]
      :                          :     :                          :                          :                       +- *(35) Project [i_brand_id#6506, i_class_id#6508, i_category_id#6510]
      :                          :     :                          :                          :                          +- *(35) BroadcastHashJoin [cs_sold_date_sk#197], [d_date_sk#6521], Inner, BuildRight, false
      :                          :     :                          :                          :                             :- *(35) Project [cs_sold_date_sk#197, i_brand_id#6506, i_class_id#6508, i_category_id#6510]
      :                          :     :                          :                          :                             :  +- *(35) BroadcastHashJoin [cs_item_sk#212], [i_item_sk#6499], Inner, BuildRight, false
      :                          :     :                          :                          :                             :     :- *(35) Filter (isnotnull(cs_item_sk#212) AND isnotnull(cs_sold_date_sk#197))
      :                          :     :                          :                          :                             :     :  +- *(35) ColumnarToRow
      :                          :     :                          :                          :                             :     :     +- FileScan parquet default.catalog_sales[cs_sold_date_sk#197,cs_item_sk#212] Batched: true, DataFilters: [isnotnull(cs_item_sk#212), isnotnull(cs_sold_date_sk#197)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_item_sk), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_item_sk:int>
      :                          :     :                          :                          :                             :     +- BroadcastQueryStage 3
      :                          :     :                          :                          :                             :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=38546]
      :                          :     :                          :                          :                             :           +- *(4) Filter isnotnull(i_item_sk#6499)
      :                          :     :                          :                          :                             :              +- *(4) ColumnarToRow
      :                          :     :                          :                          :                             :                 +- FileScan parquet default.item[i_item_sk#6499,i_brand_id#6506,i_class_id#6508,i_category_id#6510] Batched: true, DataFilters: [isnotnull(i_item_sk#6499)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>
      :                          :     :                          :                          :                             +- BroadcastQueryStage 4
      :                          :     :                          :                          :                                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=38565]
      :                          :     :                          :                          :                                   +- *(5) Project [d_date_sk#6521]
      :                          :     :                          :                          :                                      +- *(5) Filter (((isnotnull(d_year#6527) AND (d_year#6527 >= 1999)) AND (d_year#6527 <= 2001)) AND isnotnull(d_date_sk#6521))
      :                          :     :                          :                          :                                         +- *(5) ColumnarToRow
      :                          :     :                          :                          :                                            +- FileScan parquet default.date_dim[d_date_sk#6521,d_year#6527] Batched: true, DataFilters: [isnotnull(d_year#6527), (d_year#6527 >= 1999), (d_year#6527 <= 2001), isnotnull(d_date_sk#6521)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), GreaterThanOrEqual(d_year,1999), LessThanOrEqual(d_year,2001), IsNotNull(d_da..., ReadSchema: struct<d_date_sk:int,d_year:int>
      :                          :     :                          :                          +- BroadcastQueryStage 6
      :                          :     :                          :                             +- ReusedExchange [d_date_sk#24], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=38565]
      :                          :     :                          +- *(64) Sort [coalesce(i_brand_id#6556, 0) ASC NULLS FIRST, isnull(i_brand_id#6556) ASC NULLS FIRST, coalesce(i_class_id#6558, 0) ASC NULLS FIRST, isnull(i_class_id#6558) ASC NULLS FIRST, coalesce(i_category_id#6560, 0) ASC NULLS FIRST, isnull(i_category_id#6560) ASC NULLS FIRST], false, 0
      :                          :     :                             +- ShuffleQueryStage 61
      :                          :     :                                +- Exchange hashpartitioning(coalesce(i_brand_id#6556, 0), isnull(i_brand_id#6556), coalesce(i_class_id#6558, 0), isnull(i_class_id#6558), coalesce(i_category_id#6560, 0), isnull(i_category_id#6560), 20), ENSURE_REQUIREMENTS, [plan_id=42418]
      :                          :     :                                   +- *(36) Project [i_brand_id#6556, i_class_id#6558, i_category_id#6560]
      :                          :     :                                      +- *(36) BroadcastHashJoin [ws_sold_date_sk#163], [d_date_sk#6571], Inner, BuildRight, false
      :                          :     :                                         :- *(36) Project [ws_sold_date_sk#163, i_brand_id#6556, i_class_id#6558, i_category_id#6560]
      :                          :     :                                         :  +- *(36) BroadcastHashJoin [ws_item_sk#166], [i_item_sk#6549], Inner, BuildRight, false
      :                          :     :                                         :     :- *(36) Filter (isnotnull(ws_item_sk#166) AND isnotnull(ws_sold_date_sk#163))
      :                          :     :                                         :     :  +- *(36) ColumnarToRow
      :                          :     :                                         :     :     +- FileScan parquet default.web_sales[ws_sold_date_sk#163,ws_item_sk#166] Batched: true, DataFilters: [isnotnull(ws_item_sk#166), isnotnull(ws_sold_date_sk#163)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_item_sk), IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int>
      :                          :     :                                         :     +- BroadcastQueryStage 8
      :                          :     :                                         :        +- ReusedExchange [i_item_sk#6549, i_brand_id#6556, i_class_id#6558, i_category_id#6560], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=38546]
      :                          :     :                                         +- BroadcastQueryStage 10
      :                          :     :                                            +- ReusedExchange [d_date_sk#6571], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=38565]
      :                          :     +- BroadcastQueryStage 109
      :                          :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=49355]
      :                          :           +- *(75) BroadcastHashJoin [i_item_sk#6797], [ss_item_sk#6467], LeftSemi, BuildRight, false
      :                          :              :- AQEShuffleRead local
      :                          :              :  +- ShuffleQueryStage 11
      :                          :              :     +- Exchange hashpartitioning(i_item_sk#6797, 20), ENSURE_REQUIREMENTS, [plan_id=38668]
      :                          :              :        +- *(9) Filter (((isnotnull(i_item_sk#6797) AND isnotnull(i_brand_id#6804)) AND isnotnull(i_class_id#6806)) AND isnotnull(i_category_id#6808))
      :                          :              :           +- *(9) ColumnarToRow
      :                          :              :              +- FileScan parquet default.item[i_item_sk#6797,i_brand_id#6804,i_class_id#6806,i_category_id#6808] Batched: true, DataFilters: [isnotnull(i_item_sk#6797), isnotnull(i_brand_id#6804), isnotnull(i_class_id#6806), isnotnull(i_c..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_brand_id), IsNotNull(i_class_id), IsNotNull(i_category_id)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_class_id:int,i_category_id:int>
      :                          :              +- BroadcastQueryStage 104
      :                          :                 +- ReusedExchange [ss_item_sk#6467], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=49155]
      :                          +- BroadcastQueryStage 26
      :                             +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=38852]
      :                                +- *(17) Project [d_date_sk#6819]
      :                                   +- *(17) Filter ((isnotnull(d_week_seq#6823) AND (d_week_seq#6823 = Subquery subquery#6456, [id=#37811])) AND isnotnull(d_date_sk#6819))
      :                                      :  +- Subquery subquery#6456, [id=#37811]
      :                                      :     +- AdaptiveSparkPlan isFinalPlan=true
                                                   +- == Final Plan ==
                                                      *(1) Project [d_week_seq#6935]
                                                      +- *(1) Filter (((((isnotnull(d_year#6937) AND isnotnull(d_moy#6939)) AND isnotnull(d_dom#6940)) AND (d_year#6937 = 2000)) AND (d_moy#6939 = 12)) AND (d_dom#6940 = 11))
                                                         +- *(1) ColumnarToRow
                                                            +- FileScan parquet default.date_dim[d_week_seq#6935,d_year#6937,d_moy#6939,d_dom#6940] Batched: true, DataFilters: [isnotnull(d_year#6937), isnotnull(d_moy#6939), isnotnull(d_dom#6940), (d_year#6937 = 2000), (d_m..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), IsNotNull(d_dom), EqualTo(d_year,2000), EqualTo(d_moy,12), ..., ReadSchema: struct<d_week_seq:int,d_year:int,d_moy:int,d_dom:int>
                                                   +- == Initial Plan ==
                                                      Project [d_week_seq#6935]
                                                      +- Filter (((((isnotnull(d_year#6937) AND isnotnull(d_moy#6939)) AND isnotnull(d_dom#6940)) AND (d_year#6937 = 2000)) AND (d_moy#6939 = 12)) AND (d_dom#6940 = 11))
                                                         +- FileScan parquet default.date_dim[d_week_seq#6935,d_year#6937,d_moy#6939,d_dom#6940] Batched: true, DataFilters: [isnotnull(d_year#6937), isnotnull(d_moy#6939), isnotnull(d_dom#6940), (d_year#6937 = 2000), (d_m..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), IsNotNull(d_dom), EqualTo(d_year,2000), EqualTo(d_moy,12), ..., ReadSchema: struct<d_week_seq:int,d_year:int,d_moy:int,d_dom:int>
      :                                      +- *(17) ColumnarToRow
      :                                         +- FileScan parquet default.date_dim[d_date_sk#6819,d_week_seq#6823] Batched: true, DataFilters: [isnotnull(d_week_seq#6823), isnotnull(d_date_sk#6819)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_week_seq), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_week_seq:int>
      +- *(80) Filter (isnotnull(sales#6459) AND (cast(sales#6459 as decimal(32,6)) > cast(ReusedSubquery Subquery subquery#6457, [id=#37805] as decimal(32,6))))
         :  +- ReusedSubquery Subquery subquery#6457, [id=#37805]
         +- *(80) HashAggregate(keys=[i_brand_id#6877, i_class_id#6879, i_category_id#6881], functions=[sum(CheckOverflow((promote_precision(cast(ss_quantity#6857 as decimal(12,2))) * promote_precision(cast(ss_list_price#6859 as decimal(12,2)))), DecimalType(18,2))), count(1)], output=[channel#6458, i_brand_id#6877, i_class_id#6879, i_category_id#6881, sales#6459, number_sales#6460L])
            +- ShuffleQueryStage 113
               +- Exchange hashpartitioning(i_brand_id#6877, i_class_id#6879, i_category_id#6881, 20), ENSURE_REQUIREMENTS, [plan_id=49588]
                  +- *(78) HashAggregate(keys=[i_brand_id#6877, i_class_id#6879, i_category_id#6881], functions=[partial_sum(CheckOverflow((promote_precision(cast(ss_quantity#6857 as decimal(12,2))) * promote_precision(cast(ss_list_price#6859 as decimal(12,2)))), DecimalType(18,2))), partial_count(1)], output=[i_brand_id#6877, i_class_id#6879, i_category_id#6881, sum#7029, isEmpty#7030, count#7031L])
                     +- *(78) Project [ss_quantity#6857, ss_list_price#6859, i_brand_id#6877, i_class_id#6879, i_category_id#6881]
                        +- *(78) BroadcastHashJoin [ss_sold_date_sk#6847], [d_date_sk#6892], Inner, BuildRight, false
                           :- *(78) Project [ss_sold_date_sk#6847, ss_quantity#6857, ss_list_price#6859, i_brand_id#6877, i_class_id#6879, i_category_id#6881]
                           :  +- *(78) BroadcastHashJoin [ss_item_sk#6849], [i_item_sk#6870], Inner, BuildRight, false
                           :     :- *(78) BroadcastHashJoin [ss_item_sk#6849], [ss_item_sk#6467], LeftSemi, BuildRight, false
                           :     :  :- AQEShuffleRead local
                           :     :  :  +- ShuffleQueryStage 28
                           :     :  :     +- ReusedExchange [ss_sold_date_sk#6847, ss_item_sk#6849, ss_quantity#6857, ss_list_price#6859], Exchange hashpartitioning(ss_item_sk#6776, 20), ENSURE_REQUIREMENTS, [plan_id=38497]
                           :     :  +- BroadcastQueryStage 106
                           :     :     +- ReusedExchange [ss_item_sk#6467], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=49155]
                           :     +- BroadcastQueryStage 111
                           :        +- ReusedExchange [i_item_sk#6870, i_brand_id#6877, i_class_id#6879, i_category_id#6881], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=49355]
                           +- BroadcastQueryStage 59
                              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=39488]
                                 +- *(34) Project [d_date_sk#6892]
                                    +- *(34) Filter ((isnotnull(d_week_seq#6896) AND (d_week_seq#6896 = Subquery subquery#6462, [id=#37897])) AND isnotnull(d_date_sk#6892))
                                       :  +- Subquery subquery#6462, [id=#37897]
                                       :     +- AdaptiveSparkPlan isFinalPlan=true
                                             +- == Final Plan ==
                                                *(1) Project [d_week_seq#6963]
                                                +- *(1) Filter (((((isnotnull(d_year#6965) AND isnotnull(d_moy#6967)) AND isnotnull(d_dom#6968)) AND (d_year#6965 = 1999)) AND (d_moy#6967 = 12)) AND (d_dom#6968 = 11))
                                                   +- *(1) ColumnarToRow
                                                      +- FileScan parquet default.date_dim[d_week_seq#6963,d_year#6965,d_moy#6967,d_dom#6968] Batched: true, DataFilters: [isnotnull(d_year#6965), isnotnull(d_moy#6967), isnotnull(d_dom#6968), (d_year#6965 = 1999), (d_m..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), IsNotNull(d_dom), EqualTo(d_year,1999), EqualTo(d_moy,12), ..., ReadSchema: struct<d_week_seq:int,d_year:int,d_moy:int,d_dom:int>
                                             +- == Initial Plan ==
                                                Project [d_week_seq#6963]
                                                +- Filter (((((isnotnull(d_year#6965) AND isnotnull(d_moy#6967)) AND isnotnull(d_dom#6968)) AND (d_year#6965 = 1999)) AND (d_moy#6967 = 12)) AND (d_dom#6968 = 11))
                                                   +- FileScan parquet default.date_dim[d_week_seq#6963,d_year#6965,d_moy#6967,d_dom#6968] Batched: true, DataFilters: [isnotnull(d_year#6965), isnotnull(d_moy#6967), isnotnull(d_dom#6968), (d_year#6965 = 1999), (d_m..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), IsNotNull(d_dom), EqualTo(d_year,1999), EqualTo(d_moy,12), ..., ReadSchema: struct<d_week_seq:int,d_year:int,d_moy:int,d_dom:int>
                                       +- *(34) ColumnarToRow
                                          +- FileScan parquet default.date_dim[d_date_sk#6892,d_week_seq#6896] Batched: true, DataFilters: [isnotnull(d_week_seq#6896), isnotnull(d_date_sk#6892)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_week_seq), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_week_seq:int>


==== q15 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[ca_zip#3726 ASC NULLS FIRST], output=[ca_zip#3726,sum(cs_sales_price)#7107])
   +- *(5) HashAggregate(keys=[ca_zip#3726], functions=[sum(UnscaledValue(cs_sales_price#218))], output=[ca_zip#3726, sum(cs_sales_price)#7107])
      +- ShuffleQueryStage 3
         +- Exchange hashpartitioning(ca_zip#3726, 20), ENSURE_REQUIREMENTS, [plan_id=50345]
            +- *(4) HashAggregate(keys=[ca_zip#3726], functions=[partial_sum(UnscaledValue(cs_sales_price#218))], output=[ca_zip#3726, sum#7111L])
               +- *(4) Project [cs_sales_price#218, ca_zip#3726]
                  +- *(4) BroadcastHashJoin [cs_sold_date_sk#197], [d_date_sk#24], Inner, BuildRight, false
                     :- *(4) Project [cs_sold_date_sk#197, cs_sales_price#218, ca_zip#3726]
                     :  +- *(4) BroadcastHashJoin [c_current_addr_sk#85], [ca_address_sk#3717], Inner, BuildRight, ((substr(ca_zip#3726, 1, 5) IN (85669,86197,88274,83405,86475,85392,85460,80348,81792) OR ca_state#3725 IN (CA,WA,GA)) OR (cs_sales_price#218 > 500.00)), false
                     :     :- *(4) Project [cs_sold_date_sk#197, cs_sales_price#218, c_current_addr_sk#85]
                     :     :  +- *(4) BroadcastHashJoin [cs_bill_customer_sk#200], [c_customer_sk#81], Inner, BuildRight, false
                     :     :     :- *(4) Filter (isnotnull(cs_bill_customer_sk#200) AND isnotnull(cs_sold_date_sk#197))
                     :     :     :  +- *(4) ColumnarToRow
                     :     :     :     +- FileScan parquet default.catalog_sales[cs_sold_date_sk#197,cs_bill_customer_sk#200,cs_sales_price#218] Batched: true, DataFilters: [isnotnull(cs_bill_customer_sk#200), isnotnull(cs_sold_date_sk#197)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_bill_customer_sk), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_bill_customer_sk:int,cs_sales_price:decimal(7,2)>
                     :     :     +- BroadcastQueryStage 0
                     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=50112]
                     :     :           +- *(1) Filter (isnotnull(c_customer_sk#81) AND isnotnull(c_current_addr_sk#85))
                     :     :              +- *(1) ColumnarToRow
                     :     :                 +- FileScan parquet default.customer[c_customer_sk#81,c_current_addr_sk#85] Batched: true, DataFilters: [isnotnull(c_customer_sk#81), isnotnull(c_current_addr_sk#85)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int>
                     :     +- BroadcastQueryStage 1
                     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=50129]
                     :           +- *(2) Filter isnotnull(ca_address_sk#3717)
                     :              +- *(2) ColumnarToRow
                     :                 +- FileScan parquet default.customer_address[ca_address_sk#3717,ca_state#3725,ca_zip#3726] Batched: true, DataFilters: [isnotnull(ca_address_sk#3717)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_state:string,ca_zip:string>
                     +- BroadcastQueryStage 2
                        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=50148]
                           +- *(3) Project [d_date_sk#24]
                              +- *(3) Filter ((((isnotnull(d_qoy#34) AND isnotnull(d_year#30)) AND (d_qoy#34 = 2)) AND (d_year#30 = 2001)) AND isnotnull(d_date_sk#24))
                                 +- *(3) ColumnarToRow
                                    +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30,d_qoy#34] Batched: true, DataFilters: [isnotnull(d_qoy#34), isnotnull(d_year#30), (d_qoy#34 = 2), (d_year#30 = 2001), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,2), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>


==== q16 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   *(8) HashAggregate(keys=[], functions=[sum(UnscaledValue(cs_ext_ship_cost#225)), sum(UnscaledValue(cs_net_profit#230)), count(distinct cs_order_number#214)], output=[order count #7115L, total shipping cost #7116, total net profit #7117])
   +- ShuffleQueryStage 6
      +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=51229]
         +- *(7) HashAggregate(keys=[], functions=[merge_sum(UnscaledValue(cs_ext_ship_cost#225)), merge_sum(UnscaledValue(cs_net_profit#230)), partial_count(distinct cs_order_number#214)], output=[sum#7194L, sum#7196L, count#7199L])
            +- *(7) HashAggregate(keys=[cs_order_number#214], functions=[merge_sum(UnscaledValue(cs_ext_ship_cost#225)), merge_sum(UnscaledValue(cs_net_profit#230))], output=[cs_order_number#214, sum#7194L, sum#7196L])
               +- ShuffleQueryStage 5
                  +- Exchange hashpartitioning(cs_order_number#214, 20), ENSURE_REQUIREMENTS, [plan_id=51181]
                     +- *(6) HashAggregate(keys=[cs_order_number#214], functions=[partial_sum(UnscaledValue(cs_ext_ship_cost#225)), partial_sum(UnscaledValue(cs_net_profit#230))], output=[cs_order_number#214, sum#7194L, sum#7196L])
                        +- *(6) Project [cs_order_number#214, cs_ext_ship_cost#225, cs_net_profit#230]
                           +- *(6) BroadcastHashJoin [cs_call_center_sk#208], [cc_call_center_sk#7120], Inner, BuildRight, false
                              :- *(6) Project [cs_call_center_sk#208, cs_order_number#214, cs_ext_ship_cost#225, cs_net_profit#230]
                              :  +- *(6) BroadcastHashJoin [cs_ship_addr_sk#207], [ca_address_sk#3717], Inner, BuildRight, false
                              :     :- *(6) Project [cs_ship_addr_sk#207, cs_call_center_sk#208, cs_order_number#214, cs_ext_ship_cost#225, cs_net_profit#230]
                              :     :  +- *(6) BroadcastHashJoin [cs_ship_date_sk#199], [d_date_sk#24], Inner, BuildRight, false
                              :     :     :- *(6) BroadcastHashJoin [cs_order_number#214], [cr_order_number#3307], LeftAnti, BuildRight, false
                              :     :     :  :- *(6) Project [cs_ship_date_sk#199, cs_ship_addr_sk#207, cs_call_center_sk#208, cs_order_number#214, cs_ext_ship_cost#225, cs_net_profit#230]
                              :     :     :  :  +- *(6) BroadcastHashJoin [cs_order_number#214], [cs_order_number#7168], LeftSemi, BuildRight, NOT (cs_warehouse_sk#211 = cs_warehouse_sk#7165), false
                              :     :     :  :     :- *(6) Filter ((isnotnull(cs_ship_date_sk#199) AND isnotnull(cs_ship_addr_sk#207)) AND isnotnull(cs_call_center_sk#208))
                              :     :     :  :     :  +- *(6) ColumnarToRow
                              :     :     :  :     :     +- FileScan parquet default.catalog_sales[cs_ship_date_sk#199,cs_ship_addr_sk#207,cs_call_center_sk#208,cs_warehouse_sk#211,cs_order_number#214,cs_ext_ship_cost#225,cs_net_profit#230] Batched: true, DataFilters: [isnotnull(cs_ship_date_sk#199), isnotnull(cs_ship_addr_sk#207), isnotnull(cs_call_center_sk#208)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_ship_date_sk), IsNotNull(cs_ship_addr_sk), IsNotNull(cs_call_center_sk)], ReadSchema: struct<cs_ship_date_sk:int,cs_ship_addr_sk:int,cs_call_center_sk:int,cs_warehouse_sk:int,cs_order...
                              :     :     :  :     +- BroadcastQueryStage 0
                              :     :     :  :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[1, int, true] as bigint)),false), [plan_id=50565]
                              :     :     :  :           +- *(1) ColumnarToRow
                              :     :     :  :              +- FileScan parquet default.catalog_sales[cs_warehouse_sk#7165,cs_order_number#7168] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<cs_warehouse_sk:int,cs_order_number:int>
                              :     :     :  +- BroadcastQueryStage 1
                              :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=50578]
                              :     :     :        +- *(2) ColumnarToRow
                              :     :     :           +- FileScan parquet default.catalog_returns[cr_order_number#3307] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_returns], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<cr_order_number:int>
                              :     :     +- BroadcastQueryStage 2
                              :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=50594]
                              :     :           +- *(3) Project [d_date_sk#24]
                              :     :              +- *(3) Filter (((isnotnull(d_date#26) AND (d_date#26 >= 2002-02-01)) AND (d_date#26 <= 2002-04-02)) AND isnotnull(d_date_sk#24))
                              :     :                 +- *(3) ColumnarToRow
                              :     :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_date#26] Batched: true, DataFilters: [isnotnull(d_date#26), (d_date#26 >= 2002-02-01), (d_date#26 <= 2002-04-02), isnotnull(d_date_sk#..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2002-02-01), LessThanOrEqual(d_date,2002-04-02), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>
                              :     +- BroadcastQueryStage 3
                              :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=50615]
                              :           +- *(4) Project [ca_address_sk#3717]
                              :              +- *(4) Filter ((isnotnull(ca_state#3725) AND (ca_state#3725 = GA)) AND isnotnull(ca_address_sk#3717))
                              :                 +- *(4) ColumnarToRow
                              :                    +- FileScan parquet default.customer_address[ca_address_sk#3717,ca_state#3725] Batched: true, DataFilters: [isnotnull(ca_state#3725), (ca_state#3725 = GA), isnotnull(ca_address_sk#3717)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_state), EqualTo(ca_state,GA), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_state:string>
                              +- BroadcastQueryStage 4
                                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=50636]
                                    +- *(5) Project [cc_call_center_sk#7120]
                                       +- *(5) Filter ((isnotnull(cc_county#7145) AND (cc_county#7145 = Williamson County)) AND isnotnull(cc_call_center_sk#7120))
                                          +- *(5) ColumnarToRow
                                             +- FileScan parquet default.call_center[cc_call_center_sk#7120,cc_county#7145] Batched: true, DataFilters: [isnotnull(cc_county#7145), (cc_county#7145 = Williamson County), isnotnull(cc_call_center_sk#7120)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/call_center], PartitionFilters: [], PushedFilters: [IsNotNull(cc_county), EqualTo(cc_county,Williamson County), IsNotNull(cc_call_center_sk)], ReadSchema: struct<cc_call_center_sk:int,cc_county:string>

==== q17 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   *(10) HashAggregate(keys=[i_item_id#438, i_item_desc#441, s_state#76], functions=[count(ss_quantity#424), avg(ss_quantity#424), stddev_samp(cast(ss_quantity#424 as double)), count(sr_return_quantity#14), avg(sr_return_quantity#14), stddev_samp(cast(sr_return_quantity#14 as double)), count(cs_quantity#215), avg(cs_quantity#215), stddev_samp(cast(cs_quantity#215 as double))], output=[i_item_id#438, i_item_desc#441, s_state#76, store_sales_quantitycount#7281L, store_sales_quantityave#7282, store_sales_quantitystdev#7283, store_sales_quantitycov#7284, as_store_returns_quantitycount#7285L, as_store_returns_quantityave#7286, as_store_returns_quantitystdev#7287, store_returns_quantitycov#7288, catalog_sales_quantitycount#7289L, catalog_sales_quantityave#7290, catalog_sales_quantitystdev#7291, catalog_sales_quantitycov#7292])
   +- ShuffleQueryStage 9
      +- Exchange hashpartitioning(i_item_id#438, i_item_desc#441, s_state#76, 20), ENSURE_REQUIREMENTS, [plan_id=52438]
         +- *(9) HashAggregate(keys=[i_item_id#438, i_item_desc#441, s_state#76], functions=[partial_count(ss_quantity#424), partial_avg(ss_quantity#424), partial_stddev_samp(cast(ss_quantity#424 as double)), partial_count(sr_return_quantity#14), partial_avg(sr_return_quantity#14), partial_stddev_samp(cast(sr_return_quantity#14 as double)), partial_count(cs_quantity#215), partial_avg(cs_quantity#215), partial_stddev_samp(cast(cs_quantity#215 as double))], output=[i_item_id#438, i_item_desc#441, s_state#76, count#7583L, sum#7584, count#7585L, n#7468, avg#7469, m2#7470, count#7586L, sum#7587, count#7588L, n#7484, avg#7485, m2#7486, count#7589L, sum#7590, count#7591L, n#7500, avg#7501, m2#7502])
            +- *(9) Project [ss_quantity#424, sr_return_quantity#14, cs_quantity#215, s_state#76, i_item_id#438, i_item_desc#441]
               +- *(9) BroadcastHashJoin [ss_item_sk#416], [i_item_sk#437], Inner, BuildRight, false
                  :- *(9) Project [ss_item_sk#416, ss_quantity#424, sr_return_quantity#14, cs_quantity#215, s_state#76]
                  :  +- *(9) BroadcastHashJoin [ss_store_sk#421], [s_store_sk#52], Inner, BuildRight, false
                  :     :- *(9) Project [ss_item_sk#416, ss_store_sk#421, ss_quantity#424, sr_return_quantity#14, cs_quantity#215]
                  :     :  +- *(9) BroadcastHashJoin [cs_sold_date_sk#197], [d_date_sk#7321], Inner, BuildRight, false
                  :     :     :- *(9) Project [ss_item_sk#416, ss_store_sk#421, ss_quantity#424, sr_return_quantity#14, cs_sold_date_sk#197, cs_quantity#215]
                  :     :     :  +- *(9) BroadcastHashJoin [sr_returned_date_sk#4], [d_date_sk#7293], Inner, BuildRight, false
                  :     :     :     :- *(9) Project [ss_item_sk#416, ss_store_sk#421, ss_quantity#424, sr_returned_date_sk#4, sr_return_quantity#14, cs_sold_date_sk#197, cs_quantity#215]
                  :     :     :     :  +- *(9) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#24], Inner, BuildRight, false
                  :     :     :     :     :- *(9) Project [ss_sold_date_sk#414, ss_item_sk#416, ss_store_sk#421, ss_quantity#424, sr_returned_date_sk#4, sr_return_quantity#14, cs_sold_date_sk#197, cs_quantity#215]
                  :     :     :     :     :  +- *(9) ShuffledHashJoin [sr_customer_sk#7, sr_item_sk#6], [cs_bill_customer_sk#200, cs_item_sk#212], Inner, BuildLeft
                  :     :     :     :     :     :- ShuffleQueryStage 8
                  :     :     :     :     :     :  +- Exchange hashpartitioning(sr_customer_sk#7, sr_item_sk#6, 20), ENSURE_REQUIREMENTS, [plan_id=52299]
                  :     :     :     :     :     :     +- *(8) Project [ss_sold_date_sk#414, ss_item_sk#416, ss_store_sk#421, ss_quantity#424, sr_returned_date_sk#4, sr_item_sk#6, sr_customer_sk#7, sr_return_quantity#14]
                  :     :     :     :     :     :        +- *(8) BroadcastHashJoin [ss_customer_sk#417, ss_item_sk#416, ss_ticket_number#423], [sr_customer_sk#7, sr_item_sk#6, sr_ticket_number#13], Inner, BuildRight, false
                  :     :     :     :     :     :           :- *(8) Filter ((((isnotnull(ss_customer_sk#417) AND isnotnull(ss_item_sk#416)) AND isnotnull(ss_ticket_number#423)) AND isnotnull(ss_sold_date_sk#414)) AND isnotnull(ss_store_sk#421))
                  :     :     :     :     :     :           :  +- *(8) ColumnarToRow
                  :     :     :     :     :     :           :     +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_item_sk#416,ss_customer_sk#417,ss_store_sk#421,ss_ticket_number#423,ss_quantity#424] Batched: true, DataFilters: [isnotnull(ss_customer_sk#417), isnotnull(ss_item_sk#416), isnotnull(ss_ticket_number#423), isnot..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk), IsNotNull(ss_item_sk), IsNotNull(ss_ticket_number), IsNotNull(ss_sold..., ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:int...
                  :     :     :     :     :     :           +- BroadcastQueryStage 0
                  :     :     :     :     :     :              +- BroadcastExchange HashedRelationBroadcastMode(List(input[2, int, false], input[1, int, false], input[3, int, false]),false), [plan_id=51503]
                  :     :     :     :     :     :                 +- *(1) Filter (((isnotnull(sr_customer_sk#7) AND isnotnull(sr_item_sk#6)) AND isnotnull(sr_ticket_number#13)) AND isnotnull(sr_returned_date_sk#4))
                  :     :     :     :     :     :                    +- *(1) ColumnarToRow
                  :     :     :     :     :     :                       +- FileScan parquet default.store_returns[sr_returned_date_sk#4,sr_item_sk#6,sr_customer_sk#7,sr_ticket_number#13,sr_return_quantity#14] Batched: true, DataFilters: [isnotnull(sr_customer_sk#7), isnotnull(sr_item_sk#6), isnotnull(sr_ticket_number#13), isnotnull(..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_returns], PartitionFilters: [], PushedFilters: [IsNotNull(sr_customer_sk), IsNotNull(sr_item_sk), IsNotNull(sr_ticket_number), IsNotNull(sr_retu..., ReadSchema: struct<sr_returned_date_sk:int,sr_item_sk:int,sr_customer_sk:int,sr_ticket_number:int,sr_return_q...
                  :     :     :     :     :     +- ShuffleQueryStage 1
                  :     :     :     :     :        +- Exchange hashpartitioning(cs_bill_customer_sk#200, cs_item_sk#212, 20), ENSURE_REQUIREMENTS, [plan_id=51521]
                  :     :     :     :     :           +- *(2) Filter ((isnotnull(cs_bill_customer_sk#200) AND isnotnull(cs_item_sk#212)) AND isnotnull(cs_sold_date_sk#197))
                  :     :     :     :     :              +- *(2) ColumnarToRow
                  :     :     :     :     :                 +- FileScan parquet default.catalog_sales[cs_sold_date_sk#197,cs_bill_customer_sk#200,cs_item_sk#212,cs_quantity#215] Batched: true, DataFilters: [isnotnull(cs_bill_customer_sk#200), isnotnull(cs_item_sk#212), isnotnull(cs_sold_date_sk#197)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_bill_customer_sk), IsNotNull(cs_item_sk), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_bill_customer_sk:int,cs_item_sk:int,cs_quantity:int>
                  :     :     :     :     +- BroadcastQueryStage 2
                  :     :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=51541]
                  :     :     :     :           +- *(3) Project [d_date_sk#24]
                  :     :     :     :              +- *(3) Filter ((isnotnull(d_quarter_name#39) AND (d_quarter_name#39 = 2001Q1)) AND isnotnull(d_date_sk#24))
                  :     :     :     :                 +- *(3) ColumnarToRow
                  :     :     :     :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_quarter_name#39] Batched: true, DataFilters: [isnotnull(d_quarter_name#39), (d_quarter_name#39 = 2001Q1), isnotnull(d_date_sk#24)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_quarter_name), EqualTo(d_quarter_name,2001Q1), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_quarter_name:string>
                  :     :     :     +- BroadcastQueryStage 3
                  :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=51562]
                  :     :     :           +- *(4) Project [d_date_sk#7293]
                  :     :     :              +- *(4) Filter (d_quarter_name#7308 IN (2001Q1,2001Q2,2001Q3) AND isnotnull(d_date_sk#7293))
                  :     :     :                 +- *(4) ColumnarToRow
                  :     :     :                    +- FileScan parquet default.date_dim[d_date_sk#7293,d_quarter_name#7308] Batched: true, DataFilters: [d_quarter_name#7308 IN (2001Q1,2001Q2,2001Q3), isnotnull(d_date_sk#7293)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [In(d_quarter_name, [2001Q1,2001Q2,2001Q3]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_quarter_name:string>
                  :     :     +- BroadcastQueryStage 5
                  :     :        +- ReusedExchange [d_date_sk#7321], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=51562]
                  :     +- BroadcastQueryStage 6
                  :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=51604]
                  :           +- *(6) Filter isnotnull(s_store_sk#52)
                  :              +- *(6) ColumnarToRow
                  :                 +- FileScan parquet default.store[s_store_sk#52,s_state#76] Batched: true, DataFilters: [isnotnull(s_store_sk#52)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_state:string>
                  +- BroadcastQueryStage 7
                     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=51621]
                        +- *(7) Filter isnotnull(i_item_sk#437)
                           +- *(7) ColumnarToRow
                              +- FileScan parquet default.item[i_item_sk#437,i_item_id#438,i_item_desc#441] Batched: true, DataFilters: [isnotnull(i_item_sk#437)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string>

==== q18 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[ca_country#7850 ASC NULLS FIRST,ca_state#7851 ASC NULLS FIRST,ca_county#7852 ASC NULLS FIRST,i_item_id#7849 ASC NULLS FIRST], output=[i_item_id#7849,ca_country#7850,ca_state#7851,ca_county#7852,agg1#7820,agg2#7821,agg3#7822,agg4#7823,agg5#7824,agg6#7825,agg7#7826])
   +- *(8) HashAggregate(keys=[i_item_id#7849, ca_country#7850, ca_state#7851, ca_county#7852, spark_grouping_id#7848L], functions=[avg(cast(cs_quantity#215 as decimal(12,2))), avg(cast(cs_list_price#217 as decimal(12,2))), avg(cast(cs_coupon_amt#224 as decimal(12,2))), avg(cast(cs_sales_price#218 as decimal(12,2))), avg(cast(cs_net_profit#230 as decimal(12,2))), avg(cast(c_birth_year#94 as decimal(12,2))), avg(cast(cd_dep_count#3639 as decimal(12,2)))], output=[i_item_id#7849, ca_country#7850, ca_state#7851, ca_county#7852, agg1#7820, agg2#7821, agg3#7822, agg4#7823, agg5#7824, agg6#7825, agg7#7826])
      +- ShuffleQueryStage 6
         +- Exchange hashpartitioning(i_item_id#7849, ca_country#7850, ca_state#7851, ca_county#7852, spark_grouping_id#7848L, 20), ENSURE_REQUIREMENTS, [plan_id=53384]
            +- *(7) HashAggregate(keys=[i_item_id#7849, ca_country#7850, ca_state#7851, ca_county#7852, spark_grouping_id#7848L], functions=[partial_avg(cast(cs_quantity#215 as decimal(12,2))), partial_avg(cast(cs_list_price#217 as decimal(12,2))), partial_avg(cast(cs_coupon_amt#224 as decimal(12,2))), partial_avg(cast(cs_sales_price#218 as decimal(12,2))), partial_avg(cast(cs_net_profit#230 as decimal(12,2))), partial_avg(cast(c_birth_year#94 as decimal(12,2))), partial_avg(cast(cd_dep_count#3639 as decimal(12,2)))], output=[i_item_id#7849, ca_country#7850, ca_state#7851, ca_county#7852, spark_grouping_id#7848L, sum#7878, count#7879L, sum#7880, count#7881L, sum#7882, count#7883L, sum#7884, count#7885L, sum#7886, count#7887L, sum#7888, count#7889L, sum#7890, count#7891L])
               +- *(7) Expand [[cs_quantity#215, cs_list_price#217, cs_sales_price#218, cs_coupon_amt#224, cs_net_profit#230, cd_dep_count#3639, c_birth_year#94, i_item_id#438, ca_country#3727, ca_state#3725, ca_county#3724, 0], [cs_quantity#215, cs_list_price#217, cs_sales_price#218, cs_coupon_amt#224, cs_net_profit#230, cd_dep_count#3639, c_birth_year#94, i_item_id#438, ca_country#3727, ca_state#3725, null, 1], [cs_quantity#215, cs_list_price#217, cs_sales_price#218, cs_coupon_amt#224, cs_net_profit#230, cd_dep_count#3639, c_birth_year#94, i_item_id#438, ca_country#3727, null, null, 3], [cs_quantity#215, cs_list_price#217, cs_sales_price#218, cs_coupon_amt#224, cs_net_profit#230, cd_dep_count#3639, c_birth_year#94, i_item_id#438, null, null, null, 7], [cs_quantity#215, cs_list_price#217, cs_sales_price#218, cs_coupon_amt#224, cs_net_profit#230, cd_dep_count#3639, c_birth_year#94, null, null, null, null, 15]], [cs_quantity#215, cs_list_price#217, cs_sales_price#218, cs_coupon_amt#224, cs_net_profit#230, cd_dep_count#3639, c_birth_year#94, i_item_id#7849, ca_country#7850, ca_state#7851, ca_county#7852, spark_grouping_id#7848L]
                  +- *(7) Project [cs_quantity#215, cs_list_price#217, cs_sales_price#218, cs_coupon_amt#224, cs_net_profit#230, cd_dep_count#3639, c_birth_year#94, i_item_id#438, ca_country#3727, ca_state#3725, ca_county#3724]
                     +- *(7) BroadcastHashJoin [cs_item_sk#212], [i_item_sk#437], Inner, BuildRight, false
                        :- *(7) Project [cs_item_sk#212, cs_quantity#215, cs_list_price#217, cs_sales_price#218, cs_coupon_amt#224, cs_net_profit#230, cd_dep_count#3639, c_birth_year#94, ca_county#3724, ca_state#3725, ca_country#3727]
                        :  +- *(7) BroadcastHashJoin [cs_sold_date_sk#197], [d_date_sk#24], Inner, BuildRight, false
                        :     :- *(7) Project [cs_sold_date_sk#197, cs_item_sk#212, cs_quantity#215, cs_list_price#217, cs_sales_price#218, cs_coupon_amt#224, cs_net_profit#230, cd_dep_count#3639, c_birth_year#94, ca_county#3724, ca_state#3725, ca_country#3727]
                        :     :  +- *(7) BroadcastHashJoin [c_current_addr_sk#85], [ca_address_sk#3717], Inner, BuildRight, false
                        :     :     :- *(7) Project [cs_sold_date_sk#197, cs_item_sk#212, cs_quantity#215, cs_list_price#217, cs_sales_price#218, cs_coupon_amt#224, cs_net_profit#230, cd_dep_count#3639, c_current_addr_sk#85, c_birth_year#94]
                        :     :     :  +- *(7) BroadcastHashJoin [c_current_cdemo_sk#83], [cd_demo_sk#7827], Inner, BuildRight, false
                        :     :     :     :- *(7) Project [cs_sold_date_sk#197, cs_item_sk#212, cs_quantity#215, cs_list_price#217, cs_sales_price#218, cs_coupon_amt#224, cs_net_profit#230, cd_dep_count#3639, c_current_cdemo_sk#83, c_current_addr_sk#85, c_birth_year#94]
                        :     :     :     :  +- *(7) BroadcastHashJoin [cs_bill_customer_sk#200], [c_customer_sk#81], Inner, BuildRight, false
                        :     :     :     :     :- *(7) Project [cs_sold_date_sk#197, cs_bill_customer_sk#200, cs_item_sk#212, cs_quantity#215, cs_list_price#217, cs_sales_price#218, cs_coupon_amt#224, cs_net_profit#230, cd_dep_count#3639]
                        :     :     :     :     :  +- *(7) BroadcastHashJoin [cs_bill_cdemo_sk#201], [cd_demo_sk#3633], Inner, BuildRight, false
                        :     :     :     :     :     :- *(7) Filter (((isnotnull(cs_bill_cdemo_sk#201) AND isnotnull(cs_bill_customer_sk#200)) AND isnotnull(cs_sold_date_sk#197)) AND isnotnull(cs_item_sk#212))
                        :     :     :     :     :     :  +- *(7) ColumnarToRow
                        :     :     :     :     :     :     +- FileScan parquet default.catalog_sales[cs_sold_date_sk#197,cs_bill_customer_sk#200,cs_bill_cdemo_sk#201,cs_item_sk#212,cs_quantity#215,cs_list_price#217,cs_sales_price#218,cs_coupon_amt#224,cs_net_profit#230] Batched: true, DataFilters: [isnotnull(cs_bill_cdemo_sk#201), isnotnull(cs_bill_customer_sk#200), isnotnull(cs_sold_date_sk#1..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_bill_cdemo_sk), IsNotNull(cs_bill_customer_sk), IsNotNull(cs_sold_date_sk), IsNotNu..., ReadSchema: struct<cs_sold_date_sk:int,cs_bill_customer_sk:int,cs_bill_cdemo_sk:int,cs_item_sk:int,cs_quantit...
                        :     :     :     :     :     +- BroadcastQueryStage 0
                        :     :     :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=52717]
                        :     :     :     :     :           +- *(1) Project [cd_demo_sk#3633, cd_dep_count#3639]
                        :     :     :     :     :              +- *(1) Filter ((((isnotnull(cd_gender#3634) AND isnotnull(cd_education_status#3636)) AND (cd_gender#3634 = F)) AND (cd_education_status#3636 = Unknown             )) AND isnotnull(cd_demo_sk#3633))
                        :     :     :     :     :                 +- *(1) ColumnarToRow
                        :     :     :     :     :                    +- FileScan parquet default.customer_demographics[cd_demo_sk#3633,cd_gender#3634,cd_education_status#3636,cd_dep_count#3639] Batched: true, DataFilters: [isnotnull(cd_gender#3634), isnotnull(cd_education_status#3636), (cd_gender#3634 = F), (cd_educat..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer_demographics], PartitionFilters: [], PushedFilters: [IsNotNull(cd_gender), IsNotNull(cd_education_status), EqualTo(cd_gender,F), EqualTo(cd_education..., ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_education_status:string,cd_dep_count:int>
                        :     :     :     :     +- BroadcastQueryStage 1
                        :     :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=52738]
                        :     :     :     :           +- *(2) Project [c_customer_sk#81, c_current_cdemo_sk#83, c_current_addr_sk#85, c_birth_year#94]
                        :     :     :     :              +- *(2) Filter (((c_birth_month#93 IN (1,6,8,9,12,2) AND isnotnull(c_customer_sk#81)) AND isnotnull(c_current_cdemo_sk#83)) AND isnotnull(c_current_addr_sk#85))
                        :     :     :     :                 +- *(2) ColumnarToRow
                        :     :     :     :                    +- FileScan parquet default.customer[c_customer_sk#81,c_current_cdemo_sk#83,c_current_addr_sk#85,c_birth_month#93,c_birth_year#94] Batched: true, DataFilters: [c_birth_month#93 IN (1,6,8,9,12,2), isnotnull(c_customer_sk#81), isnotnull(c_current_cdemo_sk#83..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer], PartitionFilters: [], PushedFilters: [In(c_birth_month, [1,12,2,6,8,9]), IsNotNull(c_customer_sk), IsNotNull(c_current_cdemo_sk), IsNo..., ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_addr_sk:int,c_birth_month:int,c_birth_y...
                        :     :     :     +- BroadcastQueryStage 2
                        :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=52757]
                        :     :     :           +- *(3) Filter isnotnull(cd_demo_sk#7827)
                        :     :     :              +- *(3) ColumnarToRow
                        :     :     :                 +- FileScan parquet default.customer_demographics[cd_demo_sk#7827] Batched: true, DataFilters: [isnotnull(cd_demo_sk#7827)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer_demographics], PartitionFilters: [], PushedFilters: [IsNotNull(cd_demo_sk)], ReadSchema: struct<cd_demo_sk:int>
                        :     :     +- BroadcastQueryStage 3
                        :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=52774]
                        :     :           +- *(4) Filter (ca_state#3725 IN (MS,IN,ND,OK,NM,VA) AND isnotnull(ca_address_sk#3717))
                        :     :              +- *(4) ColumnarToRow
                        :     :                 +- FileScan parquet default.customer_address[ca_address_sk#3717,ca_county#3724,ca_state#3725,ca_country#3727] Batched: true, DataFilters: [ca_state#3725 IN (MS,IN,ND,OK,NM,VA), isnotnull(ca_address_sk#3717)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer_address], PartitionFilters: [], PushedFilters: [In(ca_state, [IN,MS,ND,NM,OK,VA]), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_county:string,ca_state:string,ca_country:string>
                        :     +- BroadcastQueryStage 4
                        :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=52793]
                        :           +- *(5) Project [d_date_sk#24]
                        :              +- *(5) Filter ((isnotnull(d_year#30) AND (d_year#30 = 1998)) AND isnotnull(d_date_sk#24))
                        :                 +- *(5) ColumnarToRow
                        :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30] Batched: true, DataFilters: [isnotnull(d_year#30), (d_year#30 = 1998), isnotnull(d_date_sk#24)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1998), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                        +- BroadcastQueryStage 5
                           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=52812]
                              +- *(6) Filter isnotnull(i_item_sk#437)
                                 +- *(6) ColumnarToRow
                                    +- FileScan parquet default.item[i_item_sk#437,i_item_id#438] Batched: true, DataFilters: [isnotnull(i_item_sk#437)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string>


==== q19 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[ext_price#7936 DESC NULLS LAST,brand#7935 ASC NULLS FIRST,brand_id#7934 ASC NULLS FIRST,i_manufact_id#450 ASC NULLS FIRST,i_manufact#451 ASC NULLS FIRST], output=[brand_id#7934,brand#7935,i_manufact_id#450,i_manufact#451,ext_price#7936])
   +- *(7) HashAggregate(keys=[i_brand#445, i_brand_id#444, i_manufact_id#450, i_manufact#451], functions=[sum(UnscaledValue(ss_ext_sales_price#429))], output=[brand_id#7934, brand#7935, i_manufact_id#450, i_manufact#451, ext_price#7936])
      +- ShuffleQueryStage 5
         +- Exchange hashpartitioning(i_brand#445, i_brand_id#444, i_manufact_id#450, i_manufact#451, 20), ENSURE_REQUIREMENTS, [plan_id=54112]
            +- *(6) HashAggregate(keys=[i_brand#445, i_brand_id#444, i_manufact_id#450, i_manufact#451], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#429))], output=[i_brand#445, i_brand_id#444, i_manufact_id#450, i_manufact#451, sum#7944L])
               +- *(6) Project [ss_ext_sales_price#429, i_brand_id#444, i_brand#445, i_manufact_id#450, i_manufact#451]
                  +- *(6) BroadcastHashJoin [ss_store_sk#421], [s_store_sk#52], Inner, BuildRight, NOT (substr(ca_zip#3726, 1, 5) = substr(s_zip#77, 1, 5)), false
                     :- *(6) Project [ss_store_sk#421, ss_ext_sales_price#429, i_brand_id#444, i_brand#445, i_manufact_id#450, i_manufact#451, ca_zip#3726]
                     :  +- *(6) BroadcastHashJoin [c_current_addr_sk#85], [ca_address_sk#3717], Inner, BuildRight, false
                     :     :- *(6) Project [ss_store_sk#421, ss_ext_sales_price#429, i_brand_id#444, i_brand#445, i_manufact_id#450, i_manufact#451, c_current_addr_sk#85]
                     :     :  +- *(6) BroadcastHashJoin [ss_customer_sk#417], [c_customer_sk#81], Inner, BuildRight, false
                     :     :     :- *(6) Project [ss_customer_sk#417, ss_store_sk#421, ss_ext_sales_price#429, i_brand_id#444, i_brand#445, i_manufact_id#450, i_manufact#451]
                     :     :     :  +- *(6) BroadcastHashJoin [ss_item_sk#416], [i_item_sk#437], Inner, BuildRight, false
                     :     :     :     :- *(6) Project [ss_item_sk#416, ss_customer_sk#417, ss_store_sk#421, ss_ext_sales_price#429]
                     :     :     :     :  +- *(6) BroadcastHashJoin [d_date_sk#24], [ss_sold_date_sk#414], Inner, BuildLeft, false
                     :     :     :     :     :- BroadcastQueryStage 0
                     :     :     :     :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=53631]
                     :     :     :     :     :     +- *(1) Project [d_date_sk#24]
                     :     :     :     :     :        +- *(1) Filter ((((isnotnull(d_moy#32) AND isnotnull(d_year#30)) AND (d_moy#32 = 11)) AND (d_year#30 = 1998)) AND isnotnull(d_date_sk#24))
                     :     :     :     :     :           +- *(1) ColumnarToRow
                     :     :     :     :     :              +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30,d_moy#32] Batched: true, DataFilters: [isnotnull(d_moy#32), isnotnull(d_year#30), (d_moy#32 = 11), (d_year#30 = 1998), isnotnull(d_date..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_moy), IsNotNull(d_year), EqualTo(d_moy,11), EqualTo(d_year,1998), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                     :     :     :     :     +- *(6) Filter (((isnotnull(ss_sold_date_sk#414) AND isnotnull(ss_item_sk#416)) AND isnotnull(ss_customer_sk#417)) AND isnotnull(ss_store_sk#421))
                     :     :     :     :        +- *(6) ColumnarToRow
                     :     :     :     :           +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_item_sk#416,ss_customer_sk#417,ss_store_sk#421,ss_ext_sales_price#429] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#414), isnotnull(ss_item_sk#416), isnotnull(ss_customer_sk#417), isnotn..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_item_sk), IsNotNull(ss_customer_sk), IsNotNull(ss_store..., ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ext_sales_price:d...
                     :     :     :     +- BroadcastQueryStage 1
                     :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=53652]
                     :     :     :           +- *(2) Project [i_item_sk#437, i_brand_id#444, i_brand#445, i_manufact_id#450, i_manufact#451]
                     :     :     :              +- *(2) Filter ((isnotnull(i_manager_id#457) AND (i_manager_id#457 = 8)) AND isnotnull(i_item_sk#437))
                     :     :     :                 +- *(2) ColumnarToRow
                     :     :     :                    +- FileScan parquet default.item[i_item_sk#437,i_brand_id#444,i_brand#445,i_manufact_id#450,i_manufact#451,i_manager_id#457] Batched: true, DataFilters: [isnotnull(i_manager_id#457), (i_manager_id#457 = 8), isnotnull(i_item_sk#437)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_manager_id), EqualTo(i_manager_id,8), IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_brand:string,i_manufact_id:int,i_manufact:string,i_manager_...
                     :     :     +- BroadcastQueryStage 2
                     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=53671]
                     :     :           +- *(3) Filter (isnotnull(c_customer_sk#81) AND isnotnull(c_current_addr_sk#85))
                     :     :              +- *(3) ColumnarToRow
                     :     :                 +- FileScan parquet default.customer[c_customer_sk#81,c_current_addr_sk#85] Batched: true, DataFilters: [isnotnull(c_customer_sk#81), isnotnull(c_current_addr_sk#85)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int>
                     :     +- BroadcastQueryStage 3
                     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=53688]
                     :           +- *(4) Filter (isnotnull(ca_address_sk#3717) AND isnotnull(ca_zip#3726))
                     :              +- *(4) ColumnarToRow
                     :                 +- FileScan parquet default.customer_address[ca_address_sk#3717,ca_zip#3726] Batched: true, DataFilters: [isnotnull(ca_address_sk#3717), isnotnull(ca_zip#3726)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_zip)], ReadSchema: struct<ca_address_sk:int,ca_zip:string>
                     +- BroadcastQueryStage 4
                        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=53705]
                           +- *(5) Filter (isnotnull(s_zip#77) AND isnotnull(s_store_sk#52))
                              +- *(5) ColumnarToRow
                                 +- FileScan parquet default.store[s_store_sk#52,s_zip#77] Batched: true, DataFilters: [isnotnull(s_zip#77), isnotnull(s_store_sk#52)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_zip), IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_zip:string>

==== q20 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[i_category#449 ASC NULLS FIRST,i_class#447 ASC NULLS FIRST,i_item_id#438 ASC NULLS FIRST,i_item_desc#441 ASC NULLS FIRST,revenueratio#7949 ASC NULLS FIRST], output=[i_item_desc#441,i_category#449,i_class#447,i_current_price#442,itemrevenue#7948,revenueratio#7949])
   +- *(6) Project [i_item_desc#441, i_category#449, i_class#447, i_current_price#442, itemrevenue#7948, CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(_w0#7954) * 100.00), DecimalType(21,2)) as decimal(27,2))) / promote_precision(_we0#7956)), DecimalType(38,17)) AS revenueratio#7949, i_item_id#438]
      +- Window [sum(_w1#7955) windowspecdefinition(i_class#447, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS _we0#7956], [i_class#447]
         +- *(5) Sort [i_class#447 ASC NULLS FIRST], false, 0
            +- ShuffleQueryStage 3
               +- Exchange hashpartitioning(i_class#447, 20), ENSURE_REQUIREMENTS, [plan_id=54499]
                  +- *(4) HashAggregate(keys=[i_item_id#438, i_item_desc#441, i_category#449, i_class#447, i_current_price#442], functions=[sum(UnscaledValue(cs_ext_sales_price#220))], output=[i_item_desc#441, i_category#449, i_class#447, i_current_price#442, itemrevenue#7948, _w0#7954, _w1#7955, i_item_id#438])
                     +- ShuffleQueryStage 2
                        +- Exchange hashpartitioning(i_item_id#438, i_item_desc#441, i_category#449, i_class#447, i_current_price#442, 20), ENSURE_REQUIREMENTS, [plan_id=54451]
                           +- *(3) HashAggregate(keys=[i_item_id#438, i_item_desc#441, i_category#449, i_class#447, i_current_price#442], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#220))], output=[i_item_id#438, i_item_desc#441, i_category#449, i_class#447, i_current_price#442, sum#7964L])
                              +- *(3) Project [cs_ext_sales_price#220, i_item_id#438, i_item_desc#441, i_current_price#442, i_class#447, i_category#449]
                                 +- *(3) BroadcastHashJoin [cs_sold_date_sk#197], [d_date_sk#24], Inner, BuildRight, false
                                    :- *(3) Project [cs_sold_date_sk#197, cs_ext_sales_price#220, i_item_id#438, i_item_desc#441, i_current_price#442, i_class#447, i_category#449]
                                    :  +- *(3) BroadcastHashJoin [cs_item_sk#212], [i_item_sk#437], Inner, BuildRight, false
                                    :     :- *(3) Filter (isnotnull(cs_item_sk#212) AND isnotnull(cs_sold_date_sk#197))
                                    :     :  +- *(3) ColumnarToRow
                                    :     :     +- FileScan parquet default.catalog_sales[cs_sold_date_sk#197,cs_item_sk#212,cs_ext_sales_price#220] Batched: true, DataFilters: [isnotnull(cs_item_sk#212), isnotnull(cs_sold_date_sk#197)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_item_sk), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>
                                    :     +- BroadcastQueryStage 0
                                    :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=54277]
                                    :           +- *(1) Filter (i_category#449 IN (Sports                                            ,Books                                             ,Home                                              ) AND isnotnull(i_item_sk#437))
                                    :              +- *(1) ColumnarToRow
                                    :                 +- FileScan parquet default.item[i_item_sk#437,i_item_id#438,i_item_desc#441,i_current_price#442,i_class#447,i_category#449] Batched: true, DataFilters: [i_category#449 IN (Sports                                            ,Books                     ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [In(i_category, [Books                                             ,Home                         ..., ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string,i_current_price:decimal(7,2),i_class:str...
                                    +- BroadcastQueryStage 1
                                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=54296]
                                          +- *(2) Project [d_date_sk#24]
                                             +- *(2) Filter (((isnotnull(d_date#26) AND (d_date#26 >= 1999-02-22)) AND (d_date#26 <= 1999-03-24)) AND isnotnull(d_date_sk#24))
                                                +- *(2) ColumnarToRow
                                                   +- FileScan parquet default.date_dim[d_date_sk#24,d_date#26] Batched: true, DataFilters: [isnotnull(d_date#26), (d_date#26 >= 1999-02-22), (d_date#26 <= 1999-03-24), isnotnull(d_date_sk#..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,1999-02-22), LessThanOrEqual(d_date,1999-03-24), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>


==== q21 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[w_warehouse_name#7978 ASC NULLS FIRST,i_item_id#438 ASC NULLS FIRST], output=[w_warehouse_name#7978,i_item_id#438,inv_before#7970L,inv_after#7971L])
   +- *(5) Filter (CASE WHEN (inv_before#7970L > 0) THEN ((cast(inv_after#7971L as double) / cast(inv_before#7970L as double)) >= 0.666667) END AND CASE WHEN (inv_before#7970L > 0) THEN ((cast(inv_after#7971L as double) / cast(inv_before#7970L as double)) <= 1.5) END)
      +- *(5) HashAggregate(keys=[w_warehouse_name#7978, i_item_id#438], functions=[sum(CASE WHEN (d_date#26 < 2000-03-11) THEN inv_quantity_on_hand#7975 ELSE 0 END), sum(CASE WHEN (d_date#26 >= 2000-03-11) THEN inv_quantity_on_hand#7975 ELSE 0 END)], output=[w_warehouse_name#7978, i_item_id#438, inv_before#7970L, inv_after#7971L])
         +- ShuffleQueryStage 3
            +- Exchange hashpartitioning(w_warehouse_name#7978, i_item_id#438, 20), ENSURE_REQUIREMENTS, [plan_id=54918]
               +- *(4) HashAggregate(keys=[w_warehouse_name#7978, i_item_id#438], functions=[partial_sum(CASE WHEN (d_date#26 < 2000-03-11) THEN inv_quantity_on_hand#7975 ELSE 0 END), partial_sum(CASE WHEN (d_date#26 >= 2000-03-11) THEN inv_quantity_on_hand#7975 ELSE 0 END)], output=[w_warehouse_name#7978, i_item_id#438, sum#8000L, sum#8001L])
                  +- *(4) Project [inv_quantity_on_hand#7975, w_warehouse_name#7978, i_item_id#438, d_date#26]
                     +- *(4) BroadcastHashJoin [inv_date_sk#7972], [d_date_sk#24], Inner, BuildRight, false
                        :- *(4) Project [inv_date_sk#7972, inv_quantity_on_hand#7975, w_warehouse_name#7978, i_item_id#438]
                        :  +- *(4) BroadcastHashJoin [inv_item_sk#7973], [i_item_sk#437], Inner, BuildRight, false
                        :     :- *(4) Project [inv_date_sk#7972, inv_item_sk#7973, inv_quantity_on_hand#7975, w_warehouse_name#7978]
                        :     :  +- *(4) BroadcastHashJoin [inv_warehouse_sk#7974], [w_warehouse_sk#7976], Inner, BuildRight, false
                        :     :     :- *(4) Filter ((isnotnull(inv_warehouse_sk#7974) AND isnotnull(inv_item_sk#7973)) AND isnotnull(inv_date_sk#7972))
                        :     :     :  +- *(4) ColumnarToRow
                        :     :     :     +- FileScan parquet default.inventory[inv_date_sk#7972,inv_item_sk#7973,inv_warehouse_sk#7974,inv_quantity_on_hand#7975] Batched: true, DataFilters: [isnotnull(inv_warehouse_sk#7974), isnotnull(inv_item_sk#7973), isnotnull(inv_date_sk#7972)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/inventory], PartitionFilters: [], PushedFilters: [IsNotNull(inv_warehouse_sk), IsNotNull(inv_item_sk), IsNotNull(inv_date_sk)], ReadSchema: struct<inv_date_sk:int,inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>
                        :     :     +- BroadcastQueryStage 0
                        :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=54669]
                        :     :           +- *(1) Filter isnotnull(w_warehouse_sk#7976)
                        :     :              +- *(1) ColumnarToRow
                        :     :                 +- FileScan parquet default.warehouse[w_warehouse_sk#7976,w_warehouse_name#7978] Batched: true, DataFilters: [isnotnull(w_warehouse_sk#7976)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/warehouse], PartitionFilters: [], PushedFilters: [IsNotNull(w_warehouse_sk)], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string>
                        :     +- BroadcastQueryStage 1
                        :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=54688]
                        :           +- *(2) Project [i_item_sk#437, i_item_id#438]
                        :              +- *(2) Filter (((isnotnull(i_current_price#442) AND (i_current_price#442 >= 0.99)) AND (i_current_price#442 <= 1.49)) AND isnotnull(i_item_sk#437))
                        :                 +- *(2) ColumnarToRow
                        :                    +- FileScan parquet default.item[i_item_sk#437,i_item_id#438,i_current_price#442] Batched: true, DataFilters: [isnotnull(i_current_price#442), (i_current_price#442 >= 0.99), (i_current_price#442 <= 1.49), is..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_current_price), GreaterThanOrEqual(i_current_price,0.99), LessThanOrEqual(i_current_..., ReadSchema: struct<i_item_sk:int,i_item_id:string,i_current_price:decimal(7,2)>
                        +- BroadcastQueryStage 2
                           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=54707]
                              +- *(3) Filter (((isnotnull(d_date#26) AND (d_date#26 >= 2000-02-10)) AND (d_date#26 <= 2000-04-10)) AND isnotnull(d_date_sk#24))
                                 +- *(3) ColumnarToRow
                                    +- FileScan parquet default.date_dim[d_date_sk#24,d_date#26] Batched: true, DataFilters: [isnotnull(d_date#26), (d_date#26 >= 2000-02-10), (d_date#26 <= 2000-04-10), isnotnull(d_date_sk#..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2000-02-10), LessThanOrEqual(d_date,2000-04-10), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>

==== q22 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[qoh#8008 ASC NULLS FIRST,i_product_name#8015 ASC NULLS FIRST,i_brand#8016 ASC NULLS FIRST,i_class#8017 ASC NULLS FIRST,i_category#8018 ASC NULLS FIRST], output=[i_product_name#8015,i_brand#8016,i_class#8017,i_category#8018,qoh#8008])
   +- *(5) HashAggregate(keys=[i_product_name#8015, i_brand#8016, i_class#8017, i_category#8018, spark_grouping_id#8014L], functions=[avg(inv_quantity_on_hand#7975)], output=[i_product_name#8015, i_brand#8016, i_class#8017, i_category#8018, qoh#8008])
      +- ShuffleQueryStage 3
         +- Exchange hashpartitioning(i_product_name#8015, i_brand#8016, i_class#8017, i_category#8018, spark_grouping_id#8014L, 20), ENSURE_REQUIREMENTS, [plan_id=55347]
            +- *(4) HashAggregate(keys=[i_product_name#8015, i_brand#8016, i_class#8017, i_category#8018, spark_grouping_id#8014L], functions=[partial_avg(inv_quantity_on_hand#7975)], output=[i_product_name#8015, i_brand#8016, i_class#8017, i_category#8018, spark_grouping_id#8014L, sum#8026, count#8027L])
               +- *(4) Expand [[inv_quantity_on_hand#7975, i_product_name#458, i_brand#445, i_class#447, i_category#449, 0], [inv_quantity_on_hand#7975, i_product_name#458, i_brand#445, i_class#447, null, 1], [inv_quantity_on_hand#7975, i_product_name#458, i_brand#445, null, null, 3], [inv_quantity_on_hand#7975, i_product_name#458, null, null, null, 7], [inv_quantity_on_hand#7975, null, null, null, null, 15]], [inv_quantity_on_hand#7975, i_product_name#8015, i_brand#8016, i_class#8017, i_category#8018, spark_grouping_id#8014L]
                  +- *(4) Project [inv_quantity_on_hand#7975, i_product_name#458, i_brand#445, i_class#447, i_category#449]
                     +- *(4) BroadcastHashJoin [inv_warehouse_sk#7974], [w_warehouse_sk#7976], Inner, BuildRight, false
                        :- *(4) Project [inv_warehouse_sk#7974, inv_quantity_on_hand#7975, i_brand#445, i_class#447, i_category#449, i_product_name#458]
                        :  +- *(4) BroadcastHashJoin [inv_item_sk#7973], [i_item_sk#437], Inner, BuildRight, false
                        :     :- *(4) Project [inv_item_sk#7973, inv_warehouse_sk#7974, inv_quantity_on_hand#7975]
                        :     :  +- *(4) BroadcastHashJoin [inv_date_sk#7972], [d_date_sk#24], Inner, BuildRight, false
                        :     :     :- *(4) Filter ((isnotnull(inv_date_sk#7972) AND isnotnull(inv_item_sk#7973)) AND isnotnull(inv_warehouse_sk#7974))
                        :     :     :  +- *(4) ColumnarToRow
                        :     :     :     +- FileScan parquet default.inventory[inv_date_sk#7972,inv_item_sk#7973,inv_warehouse_sk#7974,inv_quantity_on_hand#7975] Batched: true, DataFilters: [isnotnull(inv_date_sk#7972), isnotnull(inv_item_sk#7973), isnotnull(inv_warehouse_sk#7974)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/inventory], PartitionFilters: [], PushedFilters: [IsNotNull(inv_date_sk), IsNotNull(inv_item_sk), IsNotNull(inv_warehouse_sk)], ReadSchema: struct<inv_date_sk:int,inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>
                        :     :     +- BroadcastQueryStage 0
                        :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=55099]
                        :     :           +- *(1) Project [d_date_sk#24]
                        :     :              +- *(1) Filter (((isnotnull(d_month_seq#27) AND (d_month_seq#27 >= 1200)) AND (d_month_seq#27 <= 1211)) AND isnotnull(d_date_sk#24))
                        :     :                 +- *(1) ColumnarToRow
                        :     :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_month_seq#27] Batched: true, DataFilters: [isnotnull(d_month_seq#27), (d_month_seq#27 >= 1200), (d_month_seq#27 <= 1211), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1200), LessThanOrEqual(d_month_seq,1211),..., ReadSchema: struct<d_date_sk:int,d_month_seq:int>
                        :     +- BroadcastQueryStage 1
                        :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=55118]
                        :           +- *(2) Filter isnotnull(i_item_sk#437)
                        :              +- *(2) ColumnarToRow
                        :                 +- FileScan parquet default.item[i_item_sk#437,i_brand#445,i_class#447,i_category#449,i_product_name#458] Batched: true, DataFilters: [isnotnull(i_item_sk#437)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_product_name:string>
                        +- BroadcastQueryStage 2
                           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=55135]
                              +- *(3) Filter isnotnull(w_warehouse_sk#7976)
                                 +- *(3) ColumnarToRow
                                    +- FileScan parquet default.warehouse[w_warehouse_sk#7976] Batched: true, DataFilters: [isnotnull(w_warehouse_sk#7976)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/warehouse], PartitionFilters: [], PushedFilters: [IsNotNull(w_warehouse_sk)], ReadSchema: struct<w_warehouse_sk:int>

==== q23a ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   *(22) HashAggregate(keys=[], functions=[sum(sales#8034)], output=[sum(sales)#8214])
   +- ShuffleQueryStage 29
      +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=59120]
         +- *(21) HashAggregate(keys=[], functions=[partial_sum(sales#8034)], output=[sum#8219, isEmpty#8220])
            +- Union
               :- *(19) Project [CheckOverflow((promote_precision(cast(cs_quantity#215 as decimal(12,2))) * promote_precision(cast(cs_list_price#217 as decimal(12,2)))), DecimalType(18,2)) AS sales#8034]
               :  +- *(19) BroadcastHashJoin [cs_sold_date_sk#197], [d_date_sk#8142], Inner, BuildRight, false
               :     :- *(19) Project [cs_sold_date_sk#197, cs_quantity#215, cs_list_price#217]
               :     :  +- *(19) BroadcastHashJoin [cs_bill_customer_sk#200], [c_customer_sk#8124], LeftSemi, BuildRight, false
               :     :     :- *(19) Project [cs_sold_date_sk#197, cs_bill_customer_sk#200, cs_quantity#215, cs_list_price#217]
               :     :     :  +- *(19) BroadcastHashJoin [cs_item_sk#212], [item_sk#8041], LeftSemi, BuildRight, false
               :     :     :     :- AQEShuffleRead local
               :     :     :     :  +- ShuffleQueryStage 0
               :     :     :     :     +- Exchange hashpartitioning(cs_item_sk#212, 20), ENSURE_REQUIREMENTS, [plan_id=56086]
               :     :     :     :        +- *(1) Filter isnotnull(cs_sold_date_sk#197)
               :     :     :     :           +- *(1) ColumnarToRow
               :     :     :     :              +- FileScan parquet default.catalog_sales[cs_sold_date_sk#197,cs_bill_customer_sk#200,cs_item_sk#212,cs_quantity#215,cs_list_price#217] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#197)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_bill_customer_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:d...
               :     :     :     +- BroadcastQueryStage 26
               :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=58712]
               :     :     :           +- AQEShuffleRead local
               :     :     :              +- ShuffleQueryStage 20
               :     :     :                 +- Exchange hashpartitioning(item_sk#8041, 20), ENSURE_REQUIREMENTS, [plan_id=58280]
               :     :     :                    +- *(15) Project [item_sk#8041]
               :     :     :                       +- *(15) Filter (cnt#8043L > 4)
               :     :     :                          +- *(15) HashAggregate(keys=[_groupingexpression#8216, i_item_sk#437, d_date#26], functions=[count(1)], output=[item_sk#8041, cnt#8043L])
               :     :     :                             +- ShuffleQueryStage 14
               :     :     :                                +- Exchange hashpartitioning(_groupingexpression#8216, i_item_sk#437, d_date#26, 20), ENSURE_REQUIREMENTS, [plan_id=57546]
               :     :     :                                   +- *(11) HashAggregate(keys=[_groupingexpression#8216, i_item_sk#437, d_date#26], functions=[partial_count(1)], output=[_groupingexpression#8216, i_item_sk#437, d_date#26, count#8222L])
               :     :     :                                      +- *(11) Project [d_date#26, i_item_sk#437, substr(i_item_desc#441, 1, 30) AS _groupingexpression#8216]
               :     :     :                                         +- *(11) BroadcastHashJoin [ss_item_sk#416], [i_item_sk#437], Inner, BuildRight, false
               :     :     :                                            :- *(11) Project [ss_item_sk#416, d_date#26]
               :     :     :                                            :  +- *(11) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#24], Inner, BuildRight, false
               :     :     :                                            :     :- *(11) Filter (isnotnull(ss_sold_date_sk#414) AND isnotnull(ss_item_sk#416))
               :     :     :                                            :     :  +- *(11) ColumnarToRow
               :     :     :                                            :     :     +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_item_sk#416] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#414), isnotnull(ss_item_sk#416)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int>
               :     :     :                                            :     +- BroadcastQueryStage 1
               :     :     :                                            :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=56105]
               :     :     :                                            :           +- *(2) Project [d_date_sk#24, d_date#26]
               :     :     :                                            :              +- *(2) Filter (d_year#30 IN (2000,2001,2002,2003) AND isnotnull(d_date_sk#24))
               :     :     :                                            :                 +- *(2) ColumnarToRow
               :     :     :                                            :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_date#26,d_year#30] Batched: true, DataFilters: [d_year#30 IN (2000,2001,2002,2003), isnotnull(d_date_sk#24)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [2000,2001,2002,2003]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:date,d_year:int>
               :     :     :                                            +- BroadcastQueryStage 2
               :     :     :                                               +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=56124]
               :     :     :                                                  +- *(3) Filter isnotnull(i_item_sk#437)
               :     :     :                                                     +- *(3) ColumnarToRow
               :     :     :                                                        +- FileScan parquet default.item[i_item_sk#437,i_item_desc#441] Batched: true, DataFilters: [isnotnull(i_item_sk#437)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_desc:string>
               :     :     +- BroadcastQueryStage 23
               :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=58497]
               :     :           +- *(17) Project [c_customer_sk#8124]
               :     :              +- *(17) Filter (isnotnull(ssales#8046) AND (cast(ssales#8046 as decimal(38,8)) > CheckOverflow((0.500000 * promote_precision(cast(Subquery subquery#8047, [id=#55722] as decimal(32,6)))), DecimalType(38,8))))
               :     :                 :  +- Subquery subquery#8047, [id=#55722]
               :     :                 :     +- AdaptiveSparkPlan isFinalPlan=true
                                             +- == Final Plan ==
                                                *(6) HashAggregate(keys=[], functions=[max(csales#8044)], output=[tpcds_cmax#8045])
                                                +- ShuffleQueryStage 6
                                                   +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=59002]
                                                      +- *(5) HashAggregate(keys=[], functions=[partial_max(csales#8044)], output=[max#8232])
                                                         +- *(5) HashAggregate(keys=[c_customer_sk#81], functions=[sum(CheckOverflow((promote_precision(cast(ss_quantity#8060 as decimal(12,2))) * promote_precision(cast(ss_sales_price#8063 as decimal(12,2)))), DecimalType(18,2)))], output=[csales#8044])
                                                            +- ShuffleQueryStage 5
                                                               +- Exchange hashpartitioning(c_customer_sk#81, 20), ENSURE_REQUIREMENTS, [plan_id=58859]
                                                                  +- *(4) HashAggregate(keys=[c_customer_sk#81], functions=[partial_sum(CheckOverflow((promote_precision(cast(ss_quantity#8060 as decimal(12,2))) * promote_precision(cast(ss_sales_price#8063 as decimal(12,2)))), DecimalType(18,2)))], output=[c_customer_sk#81, sum#8235, isEmpty#8236])
                                                                     +- *(4) Project [ss_quantity#8060, ss_sales_price#8063, c_customer_sk#81]
                                                                        +- *(4) BroadcastHashJoin [ss_sold_date_sk#8050], [d_date_sk#8073], Inner, BuildRight, false
                                                                           :- *(4) Project [ss_sold_date_sk#8050, ss_quantity#8060, ss_sales_price#8063, c_customer_sk#81]
                                                                           :  +- *(4) BroadcastHashJoin [ss_customer_sk#8053], [c_customer_sk#81], Inner, BuildRight, false
                                                                           :     :- *(4) Filter (isnotnull(ss_customer_sk#8053) AND isnotnull(ss_sold_date_sk#8050))
                                                                           :     :  +- *(4) ColumnarToRow
                                                                           :     :     +- FileScan parquet default.store_sales[ss_sold_date_sk#8050,ss_customer_sk#8053,ss_quantity#8060,ss_sales_price#8063] Batched: true, DataFilters: [isnotnull(ss_customer_sk#8053), isnotnull(ss_sold_date_sk#8050)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
                                                                           :     +- BroadcastQueryStage 4
                                                                           :        +- ReusedExchange [c_customer_sk#81], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=56152]
                                                                           +- BroadcastQueryStage 2
                                                                              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=58585]
                                                                                 +- *(2) Project [d_date_sk#8073]
                                                                                    +- *(2) Filter (d_year#8079 IN (2000,2001,2002,2003) AND isnotnull(d_date_sk#8073))
                                                                                       +- *(2) ColumnarToRow
                                                                                          +- FileScan parquet default.date_dim[d_date_sk#8073,d_year#8079] Batched: true, DataFilters: [d_year#8079 IN (2000,2001,2002,2003), isnotnull(d_date_sk#8073)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [2000,2001,2002,2003]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                             +- == Initial Plan ==
                                                HashAggregate(keys=[], functions=[max(csales#8044)], output=[tpcds_cmax#8045])
                                                +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=55720]
                                                   +- HashAggregate(keys=[], functions=[partial_max(csales#8044)], output=[max#8232])
                                                      +- HashAggregate(keys=[c_customer_sk#81], functions=[sum(CheckOverflow((promote_precision(cast(ss_quantity#8060 as decimal(12,2))) * promote_precision(cast(ss_sales_price#8063 as decimal(12,2)))), DecimalType(18,2)))], output=[csales#8044])
                                                         +- Exchange hashpartitioning(c_customer_sk#81, 20), ENSURE_REQUIREMENTS, [plan_id=55716]
                                                            +- HashAggregate(keys=[c_customer_sk#81], functions=[partial_sum(CheckOverflow((promote_precision(cast(ss_quantity#8060 as decimal(12,2))) * promote_precision(cast(ss_sales_price#8063 as decimal(12,2)))), DecimalType(18,2)))], output=[c_customer_sk#81, sum#8235, isEmpty#8236])
                                                               +- Project [ss_quantity#8060, ss_sales_price#8063, c_customer_sk#81]
                                                                  +- BroadcastHashJoin [ss_sold_date_sk#8050], [d_date_sk#8073], Inner, BuildRight, false
                                                                     :- Project [ss_sold_date_sk#8050, ss_quantity#8060, ss_sales_price#8063, c_customer_sk#81]
                                                                     :  +- BroadcastHashJoin [ss_customer_sk#8053], [c_customer_sk#81], Inner, BuildRight, false
                                                                     :     :- Filter (isnotnull(ss_customer_sk#8053) AND isnotnull(ss_sold_date_sk#8050))
                                                                     :     :  +- FileScan parquet default.store_sales[ss_sold_date_sk#8050,ss_customer_sk#8053,ss_quantity#8060,ss_sales_price#8063] Batched: true, DataFilters: [isnotnull(ss_customer_sk#8053), isnotnull(ss_sold_date_sk#8050)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
                                                                     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=55707]
                                                                     :        +- Filter isnotnull(c_customer_sk#81)
                                                                     :           +- FileScan parquet default.customer[c_customer_sk#81] Batched: true, DataFilters: [isnotnull(c_customer_sk#81)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>
                                                                     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=55711]
                                                                        +- Project [d_date_sk#8073]
                                                                           +- Filter (d_year#8079 IN (2000,2001,2002,2003) AND isnotnull(d_date_sk#8073))
                                                                              +- FileScan parquet default.date_dim[d_date_sk#8073,d_year#8079] Batched: true, DataFilters: [d_year#8079 IN (2000,2001,2002,2003), isnotnull(d_date_sk#8073)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [2000,2001,2002,2003]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
               :     :                 +- *(17) HashAggregate(keys=[c_customer_sk#8124], functions=[sum(CheckOverflow((promote_precision(cast(ss_quantity#8111 as decimal(12,2))) * promote_precision(cast(ss_sales_price#8114 as decimal(12,2)))), DecimalType(18,2)))], output=[c_customer_sk#8124, ssales#8046])
               :     :                    +- ShuffleQueryStage 17
               :     :                       +- Exchange hashpartitioning(c_customer_sk#8124, 20), ENSURE_REQUIREMENTS, [plan_id=57905]
               :     :                          +- *(13) HashAggregate(keys=[c_customer_sk#8124], functions=[partial_sum(CheckOverflow((promote_precision(cast(ss_quantity#8111 as decimal(12,2))) * promote_precision(cast(ss_sales_price#8114 as decimal(12,2)))), DecimalType(18,2)))], output=[c_customer_sk#8124, sum#8225, isEmpty#8226])
               :     :                             +- *(13) Project [ss_quantity#8111, ss_sales_price#8114, c_customer_sk#8124]
               :     :                                +- *(13) BroadcastHashJoin [ss_customer_sk#8104], [c_customer_sk#8124], Inner, BuildRight, false
               :     :                                   :- *(13) Filter isnotnull(ss_customer_sk#8104)
               :     :                                   :  +- *(13) ColumnarToRow
               :     :                                   :     +- FileScan parquet default.store_sales[ss_customer_sk#8104,ss_quantity#8111,ss_sales_price#8114] Batched: true, DataFilters: [isnotnull(ss_customer_sk#8104)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
               :     :                                   +- BroadcastQueryStage 3
               :     :                                      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=56152]
               :     :                                         +- *(4) Filter isnotnull(c_customer_sk#8124)
               :     :                                            +- *(4) ColumnarToRow
               :     :                                               +- FileScan parquet default.customer[c_customer_sk#8124] Batched: true, DataFilters: [isnotnull(c_customer_sk#8124)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>
               :     +- BroadcastQueryStage 4
               :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=56179]
               :           +- *(5) Project [d_date_sk#8142]
               :              +- *(5) Filter ((((isnotnull(d_year#8148) AND isnotnull(d_moy#8150)) AND (d_year#8148 = 2000)) AND (d_moy#8150 = 2)) AND isnotnull(d_date_sk#8142))
               :                 +- *(5) ColumnarToRow
               :                    +- FileScan parquet default.date_dim[d_date_sk#8142,d_year#8148,d_moy#8150] Batched: true, DataFilters: [isnotnull(d_year#8148), isnotnull(d_moy#8150), (d_year#8148 = 2000), (d_moy#8150 = 2), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2000), EqualTo(d_moy,2), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
               +- *(20) Project [CheckOverflow((promote_precision(cast(ws_quantity#181 as decimal(12,2))) * promote_precision(cast(ws_list_price#183 as decimal(12,2)))), DecimalType(18,2)) AS sales#8037]
                  +- *(20) BroadcastHashJoin [ws_sold_date_sk#163], [d_date_sk#8170], Inner, BuildRight, false
                     :- *(20) Project [ws_sold_date_sk#163, ws_quantity#181, ws_list_price#183]
                     :  +- *(20) BroadcastHashJoin [ws_bill_customer_sk#167], [c_customer_sk#8124], LeftSemi, BuildRight, false
                     :     :- *(20) Project [ws_sold_date_sk#163, ws_bill_customer_sk#167, ws_quantity#181, ws_list_price#183]
                     :     :  +- *(20) BroadcastHashJoin [ws_item_sk#166], [item_sk#8041], LeftSemi, BuildRight, false
                     :     :     :- AQEShuffleRead local
                     :     :     :  +- ShuffleQueryStage 5
                     :     :     :     +- Exchange hashpartitioning(ws_item_sk#166, 20), ENSURE_REQUIREMENTS, [plan_id=56198]
                     :     :     :        +- *(6) Filter isnotnull(ws_sold_date_sk#163)
                     :     :     :           +- *(6) ColumnarToRow
                     :     :     :              +- FileScan parquet default.web_sales[ws_sold_date_sk#163,ws_item_sk#166,ws_bill_customer_sk#167,ws_quantity#181,ws_list_price#183] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#163)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_bill_customer_sk:int,ws_quantity:int,ws_list_price:d...
                     :     :     +- BroadcastQueryStage 28
                     :     :        +- ReusedExchange [item_sk#8041], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=58712]
                     :     +- BroadcastQueryStage 25
                     :        +- ReusedExchange [c_customer_sk#8124], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=58497]
                     +- BroadcastQueryStage 13
                        +- ReusedExchange [d_date_sk#8170], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=56179]


==== q23b ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[c_last_name#8415 ASC NULLS FIRST,c_first_name#8414 ASC NULLS FIRST,sales#8298 ASC NULLS FIRST], output=[c_last_name#8415,c_first_name#8414,sales#8298])
   +- Union
      :- *(31) HashAggregate(keys=[c_last_name#8415, c_first_name#8414], functions=[sum(CheckOverflow((promote_precision(cast(cs_quantity#215 as decimal(12,2))) * promote_precision(cast(cs_list_price#217 as decimal(12,2)))), DecimalType(18,2)))], output=[c_last_name#8415, c_first_name#8414, sales#8298])
      :  +- ShuffleQueryStage 47
      :     +- Exchange hashpartitioning(c_last_name#8415, c_first_name#8414, 20), ENSURE_REQUIREMENTS, [plan_id=64698]
      :        +- *(29) HashAggregate(keys=[c_last_name#8415, c_first_name#8414], functions=[partial_sum(CheckOverflow((promote_precision(cast(cs_quantity#215 as decimal(12,2))) * promote_precision(cast(cs_list_price#217 as decimal(12,2)))), DecimalType(18,2)))], output=[c_last_name#8415, c_first_name#8414, sum#8523, isEmpty#8524])
      :           +- *(29) Project [cs_quantity#215, cs_list_price#217, c_first_name#8414, c_last_name#8415]
      :              +- *(29) BroadcastHashJoin [cs_sold_date_sk#197], [d_date_sk#8424], Inner, BuildRight, false
      :                 :- *(29) Project [cs_sold_date_sk#197, cs_quantity#215, cs_list_price#217, c_first_name#8414, c_last_name#8415]
      :                 :  +- *(29) BroadcastHashJoin [cs_bill_customer_sk#200], [c_customer_sk#8406], Inner, BuildRight, false
      :                 :     :- *(29) BroadcastHashJoin [cs_bill_customer_sk#200], [c_customer_sk#8388], LeftSemi, BuildRight, false
      :                 :     :  :- *(29) Project [cs_sold_date_sk#197, cs_bill_customer_sk#200, cs_quantity#215, cs_list_price#217]
      :                 :     :  :  +- *(29) BroadcastHashJoin [cs_item_sk#212], [item_sk#8305], LeftSemi, BuildRight, false
      :                 :     :  :     :- AQEShuffleRead local
      :                 :     :  :     :  +- ShuffleQueryStage 0
      :                 :     :  :     :     +- Exchange hashpartitioning(cs_item_sk#212, 20), ENSURE_REQUIREMENTS, [plan_id=60010]
      :                 :     :  :     :        +- *(1) Filter (isnotnull(cs_bill_customer_sk#200) AND isnotnull(cs_sold_date_sk#197))
      :                 :     :  :     :           +- *(1) ColumnarToRow
      :                 :     :  :     :              +- FileScan parquet default.catalog_sales[cs_sold_date_sk#197,cs_bill_customer_sk#200,cs_item_sk#212,cs_quantity#215,cs_list_price#217] Batched: true, DataFilters: [isnotnull(cs_bill_customer_sk#200), isnotnull(cs_sold_date_sk#197)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_bill_customer_sk), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_bill_customer_sk:int,cs_item_sk:int,cs_quantity:int,cs_list_price:d...
      :                 :     :  :     +- BroadcastQueryStage 41
      :                 :     :  :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=64196]
      :                 :     :  :           +- AQEShuffleRead local
      :                 :     :  :              +- ShuffleQueryStage 38
      :                 :     :  :                 +- Exchange hashpartitioning(item_sk#8305, 20), ENSURE_REQUIREMENTS, [plan_id=63828]
      :                 :     :  :                    +- *(25) Project [item_sk#8305]
      :                 :     :  :                       +- *(25) Filter (cnt#8307L > 4)
      :                 :     :  :                          +- *(25) HashAggregate(keys=[_groupingexpression#8520, i_item_sk#437, d_date#26], functions=[count(1)], output=[item_sk#8305, cnt#8307L])
      :                 :     :  :                             +- ShuffleQueryStage 28
      :                 :     :  :                                +- Exchange hashpartitioning(_groupingexpression#8520, i_item_sk#437, d_date#26, 20), ENSURE_REQUIREMENTS, [plan_id=62276]
      :                 :     :  :                                   +- *(19) HashAggregate(keys=[_groupingexpression#8520, i_item_sk#437, d_date#26], functions=[partial_count(1)], output=[_groupingexpression#8520, i_item_sk#437, d_date#26, count#8526L])
      :                 :     :  :                                      +- *(19) Project [d_date#26, i_item_sk#437, substr(i_item_desc#441, 1, 30) AS _groupingexpression#8520]
      :                 :     :  :                                         +- *(19) BroadcastHashJoin [ss_item_sk#416], [i_item_sk#437], Inner, BuildRight, false
      :                 :     :  :                                            :- *(19) Project [ss_item_sk#416, d_date#26]
      :                 :     :  :                                            :  +- *(19) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#24], Inner, BuildRight, false
      :                 :     :  :                                            :     :- *(19) Filter (isnotnull(ss_sold_date_sk#414) AND isnotnull(ss_item_sk#416))
      :                 :     :  :                                            :     :  +- *(19) ColumnarToRow
      :                 :     :  :                                            :     :     +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_item_sk#416] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#414), isnotnull(ss_item_sk#416)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int>
      :                 :     :  :                                            :     +- BroadcastQueryStage 1
      :                 :     :  :                                            :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=60029]
      :                 :     :  :                                            :           +- *(2) Project [d_date_sk#24, d_date#26]
      :                 :     :  :                                            :              +- *(2) Filter (d_year#30 IN (2000,2001,2002,2003) AND isnotnull(d_date_sk#24))
      :                 :     :  :                                            :                 +- *(2) ColumnarToRow
      :                 :     :  :                                            :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_date#26,d_year#30] Batched: true, DataFilters: [d_year#30 IN (2000,2001,2002,2003), isnotnull(d_date_sk#24)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [2000,2001,2002,2003]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:date,d_year:int>
      :                 :     :  :                                            +- BroadcastQueryStage 2
      :                 :     :  :                                               +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=60048]
      :                 :     :  :                                                  +- *(3) Filter isnotnull(i_item_sk#437)
      :                 :     :  :                                                     +- *(3) ColumnarToRow
      :                 :     :  :                                                        +- FileScan parquet default.item[i_item_sk#437,i_item_desc#441] Batched: true, DataFilters: [isnotnull(i_item_sk#437)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_desc:string>
      :                 :     :  +- BroadcastQueryStage 31
      :                 :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=63479]
      :                 :     :        +- *(21) Project [c_customer_sk#8388]
      :                 :     :           +- *(21) Filter (isnotnull(ssales#8310) AND (cast(ssales#8310 as decimal(38,8)) > CheckOverflow((0.500000 * promote_precision(cast(Subquery subquery#8311, [id=#59627] as decimal(32,6)))), DecimalType(38,8))))
      :                 :     :              :  +- Subquery subquery#8311, [id=#59627]
      :                 :     :              :     +- AdaptiveSparkPlan isFinalPlan=true
                                                   +- == Final Plan ==
                                                      *(6) HashAggregate(keys=[], functions=[max(csales#8308)], output=[tpcds_cmax#8309])
                                                      +- ShuffleQueryStage 6
                                                         +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=64410]
                                                            +- *(5) HashAggregate(keys=[], functions=[partial_max(csales#8308)], output=[max#8540])
                                                               +- *(5) HashAggregate(keys=[c_customer_sk#81], functions=[sum(CheckOverflow((promote_precision(cast(ss_quantity#8324 as decimal(12,2))) * promote_precision(cast(ss_sales_price#8327 as decimal(12,2)))), DecimalType(18,2)))], output=[csales#8308])
                                                                  +- ShuffleQueryStage 5
                                                                     +- Exchange hashpartitioning(c_customer_sk#81, 20), ENSURE_REQUIREMENTS, [plan_id=64020]
                                                                        +- *(4) HashAggregate(keys=[c_customer_sk#81], functions=[partial_sum(CheckOverflow((promote_precision(cast(ss_quantity#8324 as decimal(12,2))) * promote_precision(cast(ss_sales_price#8327 as decimal(12,2)))), DecimalType(18,2)))], output=[c_customer_sk#81, sum#8543, isEmpty#8544])
                                                                           +- *(4) Project [ss_quantity#8324, ss_sales_price#8327, c_customer_sk#81]
                                                                              +- *(4) BroadcastHashJoin [ss_sold_date_sk#8314], [d_date_sk#8337], Inner, BuildRight, false
                                                                                 :- *(4) Project [ss_sold_date_sk#8314, ss_quantity#8324, ss_sales_price#8327, c_customer_sk#81]
                                                                                 :  +- *(4) BroadcastHashJoin [ss_customer_sk#8317], [c_customer_sk#81], Inner, BuildRight, false
                                                                                 :     :- *(4) Filter (isnotnull(ss_customer_sk#8317) AND isnotnull(ss_sold_date_sk#8314))
                                                                                 :     :  +- *(4) ColumnarToRow
                                                                                 :     :     +- FileScan parquet default.store_sales[ss_sold_date_sk#8314,ss_customer_sk#8317,ss_quantity#8324,ss_sales_price#8327] Batched: true, DataFilters: [isnotnull(ss_customer_sk#8317), isnotnull(ss_sold_date_sk#8314)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
                                                                                 :     +- BroadcastQueryStage 4
                                                                                 :        +- ReusedExchange [c_customer_sk#81], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=60076]
                                                                                 +- BroadcastQueryStage 2
                                                                                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=63654]
                                                                                       +- *(2) Project [d_date_sk#8337]
                                                                                          +- *(2) Filter (d_year#8343 IN (2000,2001,2002,2003) AND isnotnull(d_date_sk#8337))
                                                                                             +- *(2) ColumnarToRow
                                                                                                +- FileScan parquet default.date_dim[d_date_sk#8337,d_year#8343] Batched: true, DataFilters: [d_year#8343 IN (2000,2001,2002,2003), isnotnull(d_date_sk#8337)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [2000,2001,2002,2003]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                                   +- == Initial Plan ==
                                                      HashAggregate(keys=[], functions=[max(csales#8308)], output=[tpcds_cmax#8309])
                                                      +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=59625]
                                                         +- HashAggregate(keys=[], functions=[partial_max(csales#8308)], output=[max#8540])
                                                            +- HashAggregate(keys=[c_customer_sk#81], functions=[sum(CheckOverflow((promote_precision(cast(ss_quantity#8324 as decimal(12,2))) * promote_precision(cast(ss_sales_price#8327 as decimal(12,2)))), DecimalType(18,2)))], output=[csales#8308])
                                                               +- Exchange hashpartitioning(c_customer_sk#81, 20), ENSURE_REQUIREMENTS, [plan_id=59621]
                                                                  +- HashAggregate(keys=[c_customer_sk#81], functions=[partial_sum(CheckOverflow((promote_precision(cast(ss_quantity#8324 as decimal(12,2))) * promote_precision(cast(ss_sales_price#8327 as decimal(12,2)))), DecimalType(18,2)))], output=[c_customer_sk#81, sum#8543, isEmpty#8544])
                                                                     +- Project [ss_quantity#8324, ss_sales_price#8327, c_customer_sk#81]
                                                                        +- BroadcastHashJoin [ss_sold_date_sk#8314], [d_date_sk#8337], Inner, BuildRight, false
                                                                           :- Project [ss_sold_date_sk#8314, ss_quantity#8324, ss_sales_price#8327, c_customer_sk#81]
                                                                           :  +- BroadcastHashJoin [ss_customer_sk#8317], [c_customer_sk#81], Inner, BuildRight, false
                                                                           :     :- Filter (isnotnull(ss_customer_sk#8317) AND isnotnull(ss_sold_date_sk#8314))
                                                                           :     :  +- FileScan parquet default.store_sales[ss_sold_date_sk#8314,ss_customer_sk#8317,ss_quantity#8324,ss_sales_price#8327] Batched: true, DataFilters: [isnotnull(ss_customer_sk#8317), isnotnull(ss_sold_date_sk#8314)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
                                                                           :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=59612]
                                                                           :        +- Filter isnotnull(c_customer_sk#81)
                                                                           :           +- FileScan parquet default.customer[c_customer_sk#81] Batched: true, DataFilters: [isnotnull(c_customer_sk#81)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>
                                                                           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=59616]
                                                                              +- Project [d_date_sk#8337]
                                                                                 +- Filter (d_year#8343 IN (2000,2001,2002,2003) AND isnotnull(d_date_sk#8337))
                                                                                    +- FileScan parquet default.date_dim[d_date_sk#8337,d_year#8343] Batched: true, DataFilters: [d_year#8343 IN (2000,2001,2002,2003), isnotnull(d_date_sk#8337)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [2000,2001,2002,2003]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
      :                 :     :              +- *(21) HashAggregate(keys=[c_customer_sk#8388], functions=[sum(CheckOverflow((promote_precision(cast(ss_quantity#8375 as decimal(12,2))) * promote_precision(cast(ss_sales_price#8378 as decimal(12,2)))), DecimalType(18,2)))], output=[c_customer_sk#8388, ssales#8310])
      :                 :     :                 +- ShuffleQueryStage 21
      :                 :     :                    +- Exchange hashpartitioning(c_customer_sk#8388, 20), ENSURE_REQUIREMENTS, [plan_id=61449]
      :                 :     :                       +- *(15) HashAggregate(keys=[c_customer_sk#8388], functions=[partial_sum(CheckOverflow((promote_precision(cast(ss_quantity#8375 as decimal(12,2))) * promote_precision(cast(ss_sales_price#8378 as decimal(12,2)))), DecimalType(18,2)))], output=[c_customer_sk#8388, sum#8529, isEmpty#8530])
      :                 :     :                          +- *(15) Project [ss_quantity#8375, ss_sales_price#8378, c_customer_sk#8388]
      :                 :     :                             +- *(15) BroadcastHashJoin [ss_customer_sk#8368], [c_customer_sk#8388], Inner, BuildRight, false
      :                 :     :                                :- *(15) Filter isnotnull(ss_customer_sk#8368)
      :                 :     :                                :  +- *(15) ColumnarToRow
      :                 :     :                                :     +- FileScan parquet default.store_sales[ss_customer_sk#8368,ss_quantity#8375,ss_sales_price#8378] Batched: true, DataFilters: [isnotnull(ss_customer_sk#8368)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_customer_sk:int,ss_quantity:int,ss_sales_price:decimal(7,2)>
      :                 :     :                                +- BroadcastQueryStage 3
      :                 :     :                                   +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=60076]
      :                 :     :                                      +- *(4) Filter isnotnull(c_customer_sk#8388)
      :                 :     :                                         +- *(4) ColumnarToRow
      :                 :     :                                            +- FileScan parquet default.customer[c_customer_sk#8388] Batched: true, DataFilters: [isnotnull(c_customer_sk#8388)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int>
      :                 :     +- BroadcastQueryStage 44
      :                 :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=64537]
      :                 :           +- *(27) BroadcastHashJoin [c_customer_sk#8406], [c_customer_sk#8388], LeftSemi, BuildRight, false
      :                 :              :- AQEShuffleRead local
      :                 :              :  +- ShuffleQueryStage 4
      :                 :              :     +- Exchange hashpartitioning(c_customer_sk#8406, 20), ENSURE_REQUIREMENTS, [plan_id=60100]
      :                 :              :        +- *(5) Filter isnotnull(c_customer_sk#8406)
      :                 :              :           +- *(5) ColumnarToRow
      :                 :              :              +- FileScan parquet default.customer[c_customer_sk#8406,c_first_name#8414,c_last_name#8415] Batched: true, DataFilters: [isnotnull(c_customer_sk#8406)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string>
      :                 :              +- BroadcastQueryStage 33
      :                 :                 +- ReusedExchange [c_customer_sk#8388], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=63479]
      :                 +- BroadcastQueryStage 7
      :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=60148]
      :                       +- *(7) Project [d_date_sk#8424]
      :                          +- *(7) Filter ((((isnotnull(d_year#8430) AND isnotnull(d_moy#8432)) AND (d_year#8430 = 2000)) AND (d_moy#8432 = 2)) AND isnotnull(d_date_sk#8424))
      :                             +- *(7) ColumnarToRow
      :                                +- FileScan parquet default.date_dim[d_date_sk#8424,d_year#8430,d_moy#8432] Batched: true, DataFilters: [isnotnull(d_year#8430), isnotnull(d_moy#8432), (d_year#8430 = 2000), (d_moy#8432 = 2), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2000), EqualTo(d_moy,2), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
      +- *(32) HashAggregate(keys=[c_last_name#8461, c_first_name#8460], functions=[sum(CheckOverflow((promote_precision(cast(ws_quantity#181 as decimal(12,2))) * promote_precision(cast(ws_list_price#183 as decimal(12,2)))), DecimalType(18,2)))], output=[c_last_name#8461, c_first_name#8460, sales#8301])
         +- ShuffleQueryStage 48
            +- Exchange hashpartitioning(c_last_name#8461, c_first_name#8460, 20), ENSURE_REQUIREMENTS, [plan_id=64762]
               +- *(30) HashAggregate(keys=[c_last_name#8461, c_first_name#8460], functions=[partial_sum(CheckOverflow((promote_precision(cast(ws_quantity#181 as decimal(12,2))) * promote_precision(cast(ws_list_price#183 as decimal(12,2)))), DecimalType(18,2)))], output=[c_last_name#8461, c_first_name#8460, sum#8533, isEmpty#8534])
                  +- *(30) Project [ws_quantity#181, ws_list_price#183, c_first_name#8460, c_last_name#8461]
                     +- *(30) BroadcastHashJoin [ws_sold_date_sk#163], [d_date_sk#8470], Inner, BuildRight, false
                        :- *(30) Project [ws_sold_date_sk#163, ws_quantity#181, ws_list_price#183, c_first_name#8460, c_last_name#8461]
                        :  +- *(30) BroadcastHashJoin [ws_bill_customer_sk#167], [c_customer_sk#8452], Inner, BuildRight, false
                        :     :- *(30) BroadcastHashJoin [ws_bill_customer_sk#167], [c_customer_sk#8388], LeftSemi, BuildRight, false
                        :     :  :- *(30) Project [ws_sold_date_sk#163, ws_bill_customer_sk#167, ws_quantity#181, ws_list_price#183]
                        :     :  :  +- *(30) BroadcastHashJoin [ws_item_sk#166], [item_sk#8305], LeftSemi, BuildRight, false
                        :     :  :     :- AQEShuffleRead local
                        :     :  :     :  +- ShuffleQueryStage 8
                        :     :  :     :     +- Exchange hashpartitioning(ws_item_sk#166, 20), ENSURE_REQUIREMENTS, [plan_id=60296]
                        :     :  :     :        +- *(8) Filter (isnotnull(ws_bill_customer_sk#167) AND isnotnull(ws_sold_date_sk#163))
                        :     :  :     :           +- *(8) ColumnarToRow
                        :     :  :     :              +- FileScan parquet default.web_sales[ws_sold_date_sk#163,ws_item_sk#166,ws_bill_customer_sk#167,ws_quantity#181,ws_list_price#183] Batched: true, DataFilters: [isnotnull(ws_bill_customer_sk#167), isnotnull(ws_sold_date_sk#163)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_bill_customer_sk), IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_bill_customer_sk:int,ws_quantity:int,ws_list_price:d...
                        :     :  :     +- BroadcastQueryStage 43
                        :     :  :        +- ReusedExchange [item_sk#8305], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=64196]
                        :     :  +- BroadcastQueryStage 35
                        :     :     +- ReusedExchange [c_customer_sk#8388], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=63479]
                        :     +- BroadcastQueryStage 46
                        :        +- ReusedExchange [c_customer_sk#8452, c_first_name#8460, c_last_name#8461], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=64537]
                        +- BroadcastQueryStage 20
                           +- ReusedExchange [d_date_sk#8470], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=60148]


==== q24 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   *(8) Filter (isnotnull(paid#8658) AND (cast(paid#8658 as decimal(33,8)) > cast(Subquery subquery#8659, [id=#65035] as decimal(33,8))))
   :  +- Subquery subquery#8659, [id=#65035]
   :     +- AdaptiveSparkPlan isFinalPlan=true
         +- == Final Plan ==
            *(12) HashAggregate(keys=[], functions=[avg(netpaid#8660)], output=[(0.05 * avg(netpaid))#8664])
            +- ShuffleQueryStage 18
               +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=66331]
                  +- *(11) HashAggregate(keys=[], functions=[partial_avg(netpaid#8660)], output=[sum#8682, count#8683L])
                     +- *(11) HashAggregate(keys=[c_last_name#90, c_first_name#89, s_store_name#57, ca_state#3725, s_state#76, i_color#454, i_current_price#442, i_manager_id#457, i_units#455, i_size#452], functions=[sum(UnscaledValue(ss_net_paid#434))], output=[netpaid#8660])
                        +- ShuffleQueryStage 17
                           +- Exchange hashpartitioning(c_last_name#90, c_first_name#89, s_store_name#57, ca_state#3725, s_state#76, i_color#454, i_current_price#442, i_manager_id#457, i_units#455, i_size#452, 20), ENSURE_REQUIREMENTS, [plan_id=66250]
                              +- *(10) HashAggregate(keys=[c_last_name#90, c_first_name#89, s_store_name#57, ca_state#3725, s_state#76, i_color#454, i_current_price#442, i_manager_id#457, i_units#455, i_size#452], functions=[partial_sum(UnscaledValue(ss_net_paid#434))], output=[c_last_name#90, c_first_name#89, s_store_name#57, ca_state#3725, s_state#76, i_color#454, i_current_price#442, i_manager_id#457, i_units#455, i_size#452, sum#8685L])
                                 +- *(10) Project [ss_net_paid#434, s_store_name#57, s_state#76, i_current_price#442, i_size#452, i_color#454, i_units#455, i_manager_id#457, c_first_name#89, c_last_name#90, ca_state#3725]
                                    +- *(10) BroadcastHashJoin [c_birth_country#95, s_zip#77], [upper(ca_country#3727), ca_zip#3726], Inner, BuildRight, false
                                       :- *(10) Project [ss_net_paid#434, s_store_name#57, s_state#76, s_zip#77, i_current_price#442, i_size#452, i_color#454, i_units#455, i_manager_id#457, c_first_name#89, c_last_name#90, c_birth_country#95]
                                       :  +- *(10) BroadcastHashJoin [ss_customer_sk#417], [c_customer_sk#81], Inner, BuildRight, false
                                       :     :- *(10) Project [ss_customer_sk#417, ss_net_paid#434, s_store_name#57, s_state#76, s_zip#77, i_current_price#442, i_size#452, i_color#454, i_units#455, i_manager_id#457]
                                       :     :  +- *(10) BroadcastHashJoin [ss_item_sk#416], [i_item_sk#437], Inner, BuildRight, false
                                       :     :     :- *(10) Project [ss_item_sk#416, ss_customer_sk#417, ss_net_paid#434, s_store_name#57, s_state#76, s_zip#77]
                                       :     :     :  +- *(10) BroadcastHashJoin [ss_store_sk#421], [s_store_sk#52], Inner, BuildRight, false
                                       :     :     :     :- *(10) Project [ss_item_sk#416, ss_customer_sk#417, ss_store_sk#421, ss_net_paid#434]
                                       :     :     :     :  +- *(10) BroadcastHashJoin [ss_ticket_number#423, ss_item_sk#416], [sr_ticket_number#13, sr_item_sk#6], Inner, BuildRight, false
                                       :     :     :     :     :- *(10) Filter (((isnotnull(ss_ticket_number#423) AND isnotnull(ss_item_sk#416)) AND isnotnull(ss_store_sk#421)) AND isnotnull(ss_customer_sk#417))
                                       :     :     :     :     :  +- *(10) ColumnarToRow
                                       :     :     :     :     :     +- FileScan parquet default.store_sales[ss_item_sk#416,ss_customer_sk#417,ss_store_sk#421,ss_ticket_number#423,ss_net_paid#434] Batched: true, DataFilters: [isnotnull(ss_ticket_number#423), isnotnull(ss_item_sk#416), isnotnull(ss_store_sk#421), isnotnul..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_ticket_number), IsNotNull(ss_item_sk), IsNotNull(ss_store_sk), IsNotNull(ss_custome..., ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:int,ss_net_paid:decimal...
                                       :     :     :     :     +- BroadcastQueryStage 10
                                       :     :     :     :        +- ReusedExchange [sr_item_sk#6, sr_ticket_number#13], BroadcastExchange HashedRelationBroadcastMode(List((shiftleft(cast(input[1, int, false] as bigint), 32) | (cast(input[0, int, false] as bigint) & 4294967295))),false), [plan_id=65143]
                                       :     :     :     +- BroadcastQueryStage 12
                                       :     :     :        +- ReusedExchange [s_store_sk#52, s_store_name#57, s_state#76, s_zip#77], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=65162]
                                       :     :     +- BroadcastQueryStage 4
                                       :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=65923]
                                       :     :           +- *(3) Filter isnotnull(i_item_sk#437)
                                       :     :              +- *(3) ColumnarToRow
                                       :     :                 +- FileScan parquet default.item[i_item_sk#437,i_current_price#442,i_size#452,i_color#454,i_units#455,i_manager_id#457] Batched: true, DataFilters: [isnotnull(i_item_sk#437)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2),i_size:string,i_color:string,i_units:string,i_m...
                                       :     +- BroadcastQueryStage 14
                                       :        +- ReusedExchange [c_customer_sk#81, c_first_name#89, c_last_name#90, c_birth_country#95], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=65198]
                                       +- BroadcastQueryStage 16
                                          +- ReusedExchange [ca_state#3725, ca_zip#3726, ca_country#3727], BroadcastExchange HashedRelationBroadcastMode(List(upper(input[2, string, false]), input[1, string, false]),false), [plan_id=65215]
         +- == Initial Plan ==
            HashAggregate(keys=[], functions=[avg(netpaid#8660)], output=[(0.05 * avg(netpaid))#8664])
            +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=65033]
               +- HashAggregate(keys=[], functions=[partial_avg(netpaid#8660)], output=[sum#8682, count#8683L])
                  +- HashAggregate(keys=[c_last_name#90, c_first_name#89, s_store_name#57, ca_state#3725, s_state#76, i_color#454, i_current_price#442, i_manager_id#457, i_units#455, i_size#452], functions=[sum(UnscaledValue(ss_net_paid#434))], output=[netpaid#8660])
                     +- Exchange hashpartitioning(c_last_name#90, c_first_name#89, s_store_name#57, ca_state#3725, s_state#76, i_color#454, i_current_price#442, i_manager_id#457, i_units#455, i_size#452, 20), ENSURE_REQUIREMENTS, [plan_id=65029]
                        +- HashAggregate(keys=[c_last_name#90, c_first_name#89, s_store_name#57, ca_state#3725, s_state#76, i_color#454, i_current_price#442, i_manager_id#457, i_units#455, i_size#452], functions=[partial_sum(UnscaledValue(ss_net_paid#434))], output=[c_last_name#90, c_first_name#89, s_store_name#57, ca_state#3725, s_state#76, i_color#454, i_current_price#442, i_manager_id#457, i_units#455, i_size#452, sum#8685L])
                           +- Project [ss_net_paid#434, s_store_name#57, s_state#76, i_current_price#442, i_size#452, i_color#454, i_units#455, i_manager_id#457, c_first_name#89, c_last_name#90, ca_state#3725]
                              +- BroadcastHashJoin [c_birth_country#95, s_zip#77], [upper(ca_country#3727), ca_zip#3726], Inner, BuildRight, false
                                 :- Project [ss_net_paid#434, s_store_name#57, s_state#76, s_zip#77, i_current_price#442, i_size#452, i_color#454, i_units#455, i_manager_id#457, c_first_name#89, c_last_name#90, c_birth_country#95]
                                 :  +- BroadcastHashJoin [ss_customer_sk#417], [c_customer_sk#81], Inner, BuildRight, false
                                 :     :- Project [ss_customer_sk#417, ss_net_paid#434, s_store_name#57, s_state#76, s_zip#77, i_current_price#442, i_size#452, i_color#454, i_units#455, i_manager_id#457]
                                 :     :  +- BroadcastHashJoin [ss_item_sk#416], [i_item_sk#437], Inner, BuildRight, false
                                 :     :     :- Project [ss_item_sk#416, ss_customer_sk#417, ss_net_paid#434, s_store_name#57, s_state#76, s_zip#77]
                                 :     :     :  +- BroadcastHashJoin [ss_store_sk#421], [s_store_sk#52], Inner, BuildRight, false
                                 :     :     :     :- Project [ss_item_sk#416, ss_customer_sk#417, ss_store_sk#421, ss_net_paid#434]
                                 :     :     :     :  +- BroadcastHashJoin [ss_ticket_number#423, ss_item_sk#416], [sr_ticket_number#13, sr_item_sk#6], Inner, BuildRight, false
                                 :     :     :     :     :- Filter (((isnotnull(ss_ticket_number#423) AND isnotnull(ss_item_sk#416)) AND isnotnull(ss_store_sk#421)) AND isnotnull(ss_customer_sk#417))
                                 :     :     :     :     :  +- FileScan parquet default.store_sales[ss_item_sk#416,ss_customer_sk#417,ss_store_sk#421,ss_ticket_number#423,ss_net_paid#434] Batched: true, DataFilters: [isnotnull(ss_ticket_number#423), isnotnull(ss_item_sk#416), isnotnull(ss_store_sk#421), isnotnul..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_ticket_number), IsNotNull(ss_item_sk), IsNotNull(ss_store_sk), IsNotNull(ss_custome..., ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:int,ss_net_paid:decimal...
                                 :     :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List((shiftleft(cast(input[1, int, false] as bigint), 32) | (cast(input[0, int, false] as bigint) & 4294967295))),false), [plan_id=65008]
                                 :     :     :     :        +- Filter (isnotnull(sr_ticket_number#13) AND isnotnull(sr_item_sk#6))
                                 :     :     :     :           +- FileScan parquet default.store_returns[sr_item_sk#6,sr_ticket_number#13] Batched: true, DataFilters: [isnotnull(sr_ticket_number#13), isnotnull(sr_item_sk#6)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_returns], PartitionFilters: [], PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk)], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:int>
                                 :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=65012]
                                 :     :     :        +- Project [s_store_sk#52, s_store_name#57, s_state#76, s_zip#77]
                                 :     :     :           +- Filter (((isnotnull(s_market_id#62) AND (s_market_id#62 = 8)) AND isnotnull(s_store_sk#52)) AND isnotnull(s_zip#77))
                                 :     :     :              +- FileScan parquet default.store[s_store_sk#52,s_store_name#57,s_market_id#62,s_state#76,s_zip#77] Batched: true, DataFilters: [isnotnull(s_market_id#62), (s_market_id#62 = 8), isnotnull(s_store_sk#52), isnotnull(s_zip#77)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_market_id), EqualTo(s_market_id,8), IsNotNull(s_store_sk), IsNotNull(s_zip)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_market_id:int,s_state:string,s_zip:string>
                                 :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=65016]
                                 :     :        +- Filter isnotnull(i_item_sk#437)
                                 :     :           +- FileScan parquet default.item[i_item_sk#437,i_current_price#442,i_size#452,i_color#454,i_units#455,i_manager_id#457] Batched: true, DataFilters: [isnotnull(i_item_sk#437)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2),i_size:string,i_color:string,i_units:string,i_m...
                                 :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=65020]
                                 :        +- Filter (isnotnull(c_customer_sk#81) AND isnotnull(c_birth_country#95))
                                 :           +- FileScan parquet default.customer[c_customer_sk#81,c_first_name#89,c_last_name#90,c_birth_country#95] Batched: true, DataFilters: [isnotnull(c_customer_sk#81), isnotnull(c_birth_country#95)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_birth_country)], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string,c_birth_country:string>
                                 +- BroadcastExchange HashedRelationBroadcastMode(List(upper(input[2, string, false]), input[1, string, false]),false), [plan_id=65024]
                                    +- Filter (isnotnull(ca_country#3727) AND isnotnull(ca_zip#3726))
                                       +- FileScan parquet default.customer_address[ca_state#3725,ca_zip#3726,ca_country#3727] Batched: true, DataFilters: [isnotnull(ca_country#3727), isnotnull(ca_zip#3726)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_country), IsNotNull(ca_zip)], ReadSchema: struct<ca_state:string,ca_zip:string,ca_country:string>
   +- *(8) HashAggregate(keys=[c_last_name#90, c_first_name#89, s_store_name#57], functions=[sum(netpaid#8660)], output=[c_last_name#90, c_first_name#89, s_store_name#57, paid#8658])
      +- ShuffleQueryStage 6
         +- Exchange hashpartitioning(c_last_name#90, c_first_name#89, s_store_name#57, 20), ENSURE_REQUIREMENTS, [plan_id=65760]
            +- *(7) HashAggregate(keys=[c_last_name#90, c_first_name#89, s_store_name#57], functions=[partial_sum(netpaid#8660)], output=[c_last_name#90, c_first_name#89, s_store_name#57, sum#8676, isEmpty#8677])
               +- *(7) HashAggregate(keys=[c_last_name#90, c_first_name#89, s_store_name#57, ca_state#3725, s_state#76, i_color#454, i_current_price#442, i_manager_id#457, i_units#455, i_size#452], functions=[sum(UnscaledValue(ss_net_paid#434))], output=[c_last_name#90, c_first_name#89, s_store_name#57, netpaid#8660])
                  +- ShuffleQueryStage 5
                     +- Exchange hashpartitioning(c_last_name#90, c_first_name#89, s_store_name#57, ca_state#3725, s_state#76, i_color#454, i_current_price#442, i_manager_id#457, i_units#455, i_size#452, 20), ENSURE_REQUIREMENTS, [plan_id=65696]
                        +- *(6) HashAggregate(keys=[c_last_name#90, c_first_name#89, s_store_name#57, ca_state#3725, s_state#76, i_color#454, i_current_price#442, i_manager_id#457, i_units#455, i_size#452], functions=[partial_sum(UnscaledValue(ss_net_paid#434))], output=[c_last_name#90, c_first_name#89, s_store_name#57, ca_state#3725, s_state#76, i_color#454, i_current_price#442, i_manager_id#457, i_units#455, i_size#452, sum#8679L])
                           +- *(6) Project [ss_net_paid#434, s_store_name#57, s_state#76, i_current_price#442, i_size#452, i_color#454, i_units#455, i_manager_id#457, c_first_name#89, c_last_name#90, ca_state#3725]
                              +- *(6) BroadcastHashJoin [c_birth_country#95, s_zip#77], [upper(ca_country#3727), ca_zip#3726], Inner, BuildRight, false
                                 :- *(6) Project [ss_net_paid#434, s_store_name#57, s_state#76, s_zip#77, i_current_price#442, i_size#452, i_color#454, i_units#455, i_manager_id#457, c_first_name#89, c_last_name#90, c_birth_country#95]
                                 :  +- *(6) BroadcastHashJoin [ss_customer_sk#417], [c_customer_sk#81], Inner, BuildRight, false
                                 :     :- *(6) Project [ss_customer_sk#417, ss_net_paid#434, s_store_name#57, s_state#76, s_zip#77, i_current_price#442, i_size#452, i_color#454, i_units#455, i_manager_id#457]
                                 :     :  +- *(6) BroadcastHashJoin [ss_item_sk#416], [i_item_sk#437], Inner, BuildRight, false
                                 :     :     :- *(6) Project [ss_item_sk#416, ss_customer_sk#417, ss_net_paid#434, s_store_name#57, s_state#76, s_zip#77]
                                 :     :     :  +- *(6) BroadcastHashJoin [ss_store_sk#421], [s_store_sk#52], Inner, BuildRight, false
                                 :     :     :     :- *(6) Project [ss_item_sk#416, ss_customer_sk#417, ss_store_sk#421, ss_net_paid#434]
                                 :     :     :     :  +- *(6) BroadcastHashJoin [ss_ticket_number#423, ss_item_sk#416], [sr_ticket_number#13, sr_item_sk#6], Inner, BuildRight, false
                                 :     :     :     :     :- *(6) Filter (((isnotnull(ss_ticket_number#423) AND isnotnull(ss_item_sk#416)) AND isnotnull(ss_store_sk#421)) AND isnotnull(ss_customer_sk#417))
                                 :     :     :     :     :  +- *(6) ColumnarToRow
                                 :     :     :     :     :     +- FileScan parquet default.store_sales[ss_item_sk#416,ss_customer_sk#417,ss_store_sk#421,ss_ticket_number#423,ss_net_paid#434] Batched: true, DataFilters: [isnotnull(ss_ticket_number#423), isnotnull(ss_item_sk#416), isnotnull(ss_store_sk#421), isnotnul..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_ticket_number), IsNotNull(ss_item_sk), IsNotNull(ss_store_sk), IsNotNull(ss_custome..., ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:int,ss_net_paid:decimal...
                                 :     :     :     :     +- BroadcastQueryStage 0
                                 :     :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List((shiftleft(cast(input[1, int, false] as bigint), 32) | (cast(input[0, int, false] as bigint) & 4294967295))),false), [plan_id=65143]
                                 :     :     :     :           +- *(1) Filter (isnotnull(sr_ticket_number#13) AND isnotnull(sr_item_sk#6))
                                 :     :     :     :              +- *(1) ColumnarToRow
                                 :     :     :     :                 +- FileScan parquet default.store_returns[sr_item_sk#6,sr_ticket_number#13] Batched: true, DataFilters: [isnotnull(sr_ticket_number#13), isnotnull(sr_item_sk#6)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_returns], PartitionFilters: [], PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk)], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:int>
                                 :     :     :     +- BroadcastQueryStage 1
                                 :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=65162]
                                 :     :     :           +- *(2) Project [s_store_sk#52, s_store_name#57, s_state#76, s_zip#77]
                                 :     :     :              +- *(2) Filter (((isnotnull(s_market_id#62) AND (s_market_id#62 = 8)) AND isnotnull(s_store_sk#52)) AND isnotnull(s_zip#77))
                                 :     :     :                 +- *(2) ColumnarToRow
                                 :     :     :                    +- FileScan parquet default.store[s_store_sk#52,s_store_name#57,s_market_id#62,s_state#76,s_zip#77] Batched: true, DataFilters: [isnotnull(s_market_id#62), (s_market_id#62 = 8), isnotnull(s_store_sk#52), isnotnull(s_zip#77)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_market_id), EqualTo(s_market_id,8), IsNotNull(s_store_sk), IsNotNull(s_zip)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_market_id:int,s_state:string,s_zip:string>
                                 :     :     +- BroadcastQueryStage 2
                                 :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=65181]
                                 :     :           +- *(3) Filter ((isnotnull(i_color#454) AND (i_color#454 = pale                )) AND isnotnull(i_item_sk#437))
                                 :     :              +- *(3) ColumnarToRow
                                 :     :                 +- FileScan parquet default.item[i_item_sk#437,i_current_price#442,i_size#452,i_color#454,i_units#455,i_manager_id#457] Batched: true, DataFilters: [isnotnull(i_color#454), (i_color#454 = pale                ), isnotnull(i_item_sk#437)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_color), EqualTo(i_color,pale                ), IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2),i_size:string,i_color:string,i_units:string,i_m...
                                 :     +- BroadcastQueryStage 3
                                 :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=65198]
                                 :           +- *(4) Filter (isnotnull(c_customer_sk#81) AND isnotnull(c_birth_country#95))
                                 :              +- *(4) ColumnarToRow
                                 :                 +- FileScan parquet default.customer[c_customer_sk#81,c_first_name#89,c_last_name#90,c_birth_country#95] Batched: true, DataFilters: [isnotnull(c_customer_sk#81), isnotnull(c_birth_country#95)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_birth_country)], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string,c_birth_country:string>
                                 +- BroadcastQueryStage 4
                                    +- BroadcastExchange HashedRelationBroadcastMode(List(upper(input[2, string, false]), input[1, string, false]),false), [plan_id=65215]
                                       +- *(5) Filter (isnotnull(ca_country#3727) AND isnotnull(ca_zip#3726))
                                          +- *(5) ColumnarToRow
                                             +- FileScan parquet default.customer_address[ca_state#3725,ca_zip#3726,ca_country#3727] Batched: true, DataFilters: [isnotnull(ca_country#3727), isnotnull(ca_zip#3726)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_country), IsNotNull(ca_zip)], ReadSchema: struct<ca_state:string,ca_zip:string,ca_country:string>


==== q25 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   *(10) HashAggregate(keys=[i_item_id#438, i_item_desc#441, s_store_id#53, s_store_name#57], functions=[sum(UnscaledValue(ss_net_profit#436)), sum(UnscaledValue(sr_net_loss#23)), sum(UnscaledValue(cs_net_profit#230))], output=[i_item_id#438, i_item_desc#441, s_store_id#53, s_store_name#57, store_sales_profit#8786, store_returns_loss#8787, catalog_sales_profit#8788])
   +- ShuffleQueryStage 9
      +- Exchange hashpartitioning(i_item_id#438, i_item_desc#441, s_store_id#53, s_store_name#57, 20), ENSURE_REQUIREMENTS, [plan_id=69169]
         +- *(9) HashAggregate(keys=[i_item_id#438, i_item_desc#441, s_store_id#53, s_store_name#57], functions=[partial_sum(UnscaledValue(ss_net_profit#436)), partial_sum(UnscaledValue(sr_net_loss#23)), partial_sum(UnscaledValue(cs_net_profit#230))], output=[i_item_id#438, i_item_desc#441, s_store_id#53, s_store_name#57, sum#8860L, sum#8861L, sum#8862L])
            +- *(9) Project [ss_net_profit#436, sr_net_loss#23, cs_net_profit#230, s_store_id#53, s_store_name#57, i_item_id#438, i_item_desc#441]
               +- *(9) BroadcastHashJoin [ss_item_sk#416], [i_item_sk#437], Inner, BuildRight, false
                  :- *(9) Project [ss_item_sk#416, ss_net_profit#436, sr_net_loss#23, cs_net_profit#230, s_store_id#53, s_store_name#57]
                  :  +- *(9) BroadcastHashJoin [ss_store_sk#421], [s_store_sk#52], Inner, BuildRight, false
                  :     :- *(9) Project [ss_item_sk#416, ss_store_sk#421, ss_net_profit#436, sr_net_loss#23, cs_net_profit#230]
                  :     :  +- *(9) BroadcastHashJoin [cs_sold_date_sk#197], [d_date_sk#8817], Inner, BuildRight, false
                  :     :     :- *(9) Project [ss_item_sk#416, ss_store_sk#421, ss_net_profit#436, sr_net_loss#23, cs_sold_date_sk#197, cs_net_profit#230]
                  :     :     :  +- *(9) BroadcastHashJoin [sr_returned_date_sk#4], [d_date_sk#8789], Inner, BuildRight, false
                  :     :     :     :- *(9) Project [ss_item_sk#416, ss_store_sk#421, ss_net_profit#436, sr_returned_date_sk#4, sr_net_loss#23, cs_sold_date_sk#197, cs_net_profit#230]
                  :     :     :     :  +- *(9) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#24], Inner, BuildRight, false
                  :     :     :     :     :- *(9) Project [ss_sold_date_sk#414, ss_item_sk#416, ss_store_sk#421, ss_net_profit#436, sr_returned_date_sk#4, sr_net_loss#23, cs_sold_date_sk#197, cs_net_profit#230]
                  :     :     :     :     :  +- *(9) ShuffledHashJoin [sr_customer_sk#7, sr_item_sk#6], [cs_bill_customer_sk#200, cs_item_sk#212], Inner, BuildLeft
                  :     :     :     :     :     :- ShuffleQueryStage 8
                  :     :     :     :     :     :  +- Exchange hashpartitioning(sr_customer_sk#7, sr_item_sk#6, 20), ENSURE_REQUIREMENTS, [plan_id=69030]
                  :     :     :     :     :     :     +- *(8) Project [ss_sold_date_sk#414, ss_item_sk#416, ss_store_sk#421, ss_net_profit#436, sr_returned_date_sk#4, sr_item_sk#6, sr_customer_sk#7, sr_net_loss#23]
                  :     :     :     :     :     :        +- *(8) BroadcastHashJoin [ss_customer_sk#417, ss_item_sk#416, ss_ticket_number#423], [sr_customer_sk#7, sr_item_sk#6, sr_ticket_number#13], Inner, BuildRight, false
                  :     :     :     :     :     :           :- *(8) Filter ((((isnotnull(ss_customer_sk#417) AND isnotnull(ss_item_sk#416)) AND isnotnull(ss_ticket_number#423)) AND isnotnull(ss_sold_date_sk#414)) AND isnotnull(ss_store_sk#421))
                  :     :     :     :     :     :           :  +- *(8) ColumnarToRow
                  :     :     :     :     :     :           :     +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_item_sk#416,ss_customer_sk#417,ss_store_sk#421,ss_ticket_number#423,ss_net_profit#436] Batched: true, DataFilters: [isnotnull(ss_customer_sk#417), isnotnull(ss_item_sk#416), isnotnull(ss_ticket_number#423), isnot..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk), IsNotNull(ss_item_sk), IsNotNull(ss_ticket_number), IsNotNull(ss_sold..., ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:int...
                  :     :     :     :     :     :           +- BroadcastQueryStage 0
                  :     :     :     :     :     :              +- BroadcastExchange HashedRelationBroadcastMode(List(input[2, int, false], input[1, int, false], input[3, int, false]),false), [plan_id=68131]
                  :     :     :     :     :     :                 +- *(1) Filter (((isnotnull(sr_customer_sk#7) AND isnotnull(sr_item_sk#6)) AND isnotnull(sr_ticket_number#13)) AND isnotnull(sr_returned_date_sk#4))
                  :     :     :     :     :     :                    +- *(1) ColumnarToRow
                  :     :     :     :     :     :                       +- FileScan parquet default.store_returns[sr_returned_date_sk#4,sr_item_sk#6,sr_customer_sk#7,sr_ticket_number#13,sr_net_loss#23] Batched: true, DataFilters: [isnotnull(sr_customer_sk#7), isnotnull(sr_item_sk#6), isnotnull(sr_ticket_number#13), isnotnull(..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_returns], PartitionFilters: [], PushedFilters: [IsNotNull(sr_customer_sk), IsNotNull(sr_item_sk), IsNotNull(sr_ticket_number), IsNotNull(sr_retu..., ReadSchema: struct<sr_returned_date_sk:int,sr_item_sk:int,sr_customer_sk:int,sr_ticket_number:int,sr_net_loss...
                  :     :     :     :     :     +- ShuffleQueryStage 1
                  :     :     :     :     :        +- Exchange hashpartitioning(cs_bill_customer_sk#200, cs_item_sk#212, 20), ENSURE_REQUIREMENTS, [plan_id=68149]
                  :     :     :     :     :           +- *(2) Filter ((isnotnull(cs_bill_customer_sk#200) AND isnotnull(cs_item_sk#212)) AND isnotnull(cs_sold_date_sk#197))
                  :     :     :     :     :              +- *(2) ColumnarToRow
                  :     :     :     :     :                 +- FileScan parquet default.catalog_sales[cs_sold_date_sk#197,cs_bill_customer_sk#200,cs_item_sk#212,cs_net_profit#230] Batched: true, DataFilters: [isnotnull(cs_bill_customer_sk#200), isnotnull(cs_item_sk#212), isnotnull(cs_sold_date_sk#197)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_bill_customer_sk), IsNotNull(cs_item_sk), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_bill_customer_sk:int,cs_item_sk:int,cs_net_profit:decimal(7,2)>
                  :     :     :     :     +- BroadcastQueryStage 2
                  :     :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=68169]
                  :     :     :     :           +- *(3) Project [d_date_sk#24]
                  :     :     :     :              +- *(3) Filter ((((isnotnull(d_moy#32) AND isnotnull(d_year#30)) AND (d_moy#32 = 4)) AND (d_year#30 = 2001)) AND isnotnull(d_date_sk#24))
                  :     :     :     :                 +- *(3) ColumnarToRow
                  :     :     :     :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30,d_moy#32] Batched: true, DataFilters: [isnotnull(d_moy#32), isnotnull(d_year#30), (d_moy#32 = 4), (d_year#30 = 2001), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_moy), IsNotNull(d_year), EqualTo(d_moy,4), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                  :     :     :     +- BroadcastQueryStage 3
                  :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=68190]
                  :     :     :           +- *(4) Project [d_date_sk#8789]
                  :     :     :              +- *(4) Filter (((((isnotnull(d_moy#8797) AND isnotnull(d_year#8795)) AND (d_moy#8797 >= 4)) AND (d_moy#8797 <= 10)) AND (d_year#8795 = 2001)) AND isnotnull(d_date_sk#8789))
                  :     :     :                 +- *(4) ColumnarToRow
                  :     :     :                    +- FileScan parquet default.date_dim[d_date_sk#8789,d_year#8795,d_moy#8797] Batched: true, DataFilters: [isnotnull(d_moy#8797), isnotnull(d_year#8795), (d_moy#8797 >= 4), (d_moy#8797 <= 10), (d_year#87..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_moy), IsNotNull(d_year), GreaterThanOrEqual(d_moy,4), LessThanOrEqual(d_moy,10), Equ..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                  :     :     +- BroadcastQueryStage 5
                  :     :        +- ReusedExchange [d_date_sk#8817], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=68190]
                  :     +- BroadcastQueryStage 6
                  :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=68232]
                  :           +- *(6) Filter isnotnull(s_store_sk#52)
                  :              +- *(6) ColumnarToRow
                  :                 +- FileScan parquet default.store[s_store_sk#52,s_store_id#53,s_store_name#57] Batched: true, DataFilters: [isnotnull(s_store_sk#52)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_id:string,s_store_name:string>
                  +- BroadcastQueryStage 7
                     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=68249]
                        +- *(7) Filter isnotnull(i_item_sk#437)
                           +- *(7) ColumnarToRow
                              +- FileScan parquet default.item[i_item_sk#437,i_item_id#438,i_item_desc#441] Batched: true, DataFilters: [isnotnull(i_item_sk#437)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string>

==== q26 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[i_item_id#438 ASC NULLS FIRST], output=[i_item_id#438,agg1#8875,agg2#8876,agg3#8877,agg4#8878])
   +- *(6) HashAggregate(keys=[i_item_id#438], functions=[avg(cs_quantity#215), avg(UnscaledValue(cs_list_price#217)), avg(UnscaledValue(cs_coupon_amt#224)), avg(UnscaledValue(cs_sales_price#218))], output=[i_item_id#438, agg1#8875, agg2#8876, agg3#8877, agg4#8878])
      +- ShuffleQueryStage 4
         +- Exchange hashpartitioning(i_item_id#438, 20), ENSURE_REQUIREMENTS, [plan_id=69732]
            +- *(5) HashAggregate(keys=[i_item_id#438], functions=[partial_avg(cs_quantity#215), partial_avg(UnscaledValue(cs_list_price#217)), partial_avg(UnscaledValue(cs_coupon_amt#224)), partial_avg(UnscaledValue(cs_sales_price#218))], output=[i_item_id#438, sum#8896, count#8897L, sum#8898, count#8899L, sum#8900, count#8901L, sum#8902, count#8903L])
               +- *(5) Project [cs_quantity#215, cs_list_price#217, cs_sales_price#218, cs_coupon_amt#224, i_item_id#438]
                  +- *(5) BroadcastHashJoin [cs_promo_sk#213], [p_promo_sk#3642], Inner, BuildRight, false
                     :- *(5) Project [cs_promo_sk#213, cs_quantity#215, cs_list_price#217, cs_sales_price#218, cs_coupon_amt#224, i_item_id#438]
                     :  +- *(5) BroadcastHashJoin [cs_item_sk#212], [i_item_sk#437], Inner, BuildRight, false
                     :     :- *(5) Project [cs_item_sk#212, cs_promo_sk#213, cs_quantity#215, cs_list_price#217, cs_sales_price#218, cs_coupon_amt#224]
                     :     :  +- *(5) BroadcastHashJoin [cs_sold_date_sk#197], [d_date_sk#24], Inner, BuildRight, false
                     :     :     :- *(5) Project [cs_sold_date_sk#197, cs_item_sk#212, cs_promo_sk#213, cs_quantity#215, cs_list_price#217, cs_sales_price#218, cs_coupon_amt#224]
                     :     :     :  +- *(5) BroadcastHashJoin [cs_bill_cdemo_sk#201], [cd_demo_sk#3633], Inner, BuildRight, false
                     :     :     :     :- *(5) Filter (((isnotnull(cs_bill_cdemo_sk#201) AND isnotnull(cs_sold_date_sk#197)) AND isnotnull(cs_item_sk#212)) AND isnotnull(cs_promo_sk#213))
                     :     :     :     :  +- *(5) ColumnarToRow
                     :     :     :     :     +- FileScan parquet default.catalog_sales[cs_sold_date_sk#197,cs_bill_cdemo_sk#201,cs_item_sk#212,cs_promo_sk#213,cs_quantity#215,cs_list_price#217,cs_sales_price#218,cs_coupon_amt#224] Batched: true, DataFilters: [isnotnull(cs_bill_cdemo_sk#201), isnotnull(cs_sold_date_sk#197), isnotnull(cs_item_sk#212), isno..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_bill_cdemo_sk), IsNotNull(cs_sold_date_sk), IsNotNull(cs_item_sk), IsNotNull(cs_pro..., ReadSchema: struct<cs_sold_date_sk:int,cs_bill_cdemo_sk:int,cs_item_sk:int,cs_promo_sk:int,cs_quantity:int,cs...
                     :     :     :     +- BroadcastQueryStage 0
                     :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=69380]
                     :     :     :           +- *(1) Project [cd_demo_sk#3633]
                     :     :     :              +- *(1) Filter ((((((isnotnull(cd_gender#3634) AND isnotnull(cd_marital_status#3635)) AND isnotnull(cd_education_status#3636)) AND (cd_gender#3634 = M)) AND (cd_marital_status#3635 = S)) AND (cd_education_status#3636 = College             )) AND isnotnull(cd_demo_sk#3633))
                     :     :     :                 +- *(1) ColumnarToRow
                     :     :     :                    +- FileScan parquet default.customer_demographics[cd_demo_sk#3633,cd_gender#3634,cd_marital_status#3635,cd_education_status#3636] Batched: true, DataFilters: [isnotnull(cd_gender#3634), isnotnull(cd_marital_status#3635), isnotnull(cd_education_status#3636..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer_demographics], PartitionFilters: [], PushedFilters: [IsNotNull(cd_gender), IsNotNull(cd_marital_status), IsNotNull(cd_education_status), EqualTo(cd_g..., ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string>
                     :     :     +- BroadcastQueryStage 1
                     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=69401]
                     :     :           +- *(2) Project [d_date_sk#24]
                     :     :              +- *(2) Filter ((isnotnull(d_year#30) AND (d_year#30 = 2000)) AND isnotnull(d_date_sk#24))
                     :     :                 +- *(2) ColumnarToRow
                     :     :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30] Batched: true, DataFilters: [isnotnull(d_year#30), (d_year#30 = 2000), isnotnull(d_date_sk#24)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                     :     +- BroadcastQueryStage 2
                     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=69420]
                     :           +- *(3) Filter isnotnull(i_item_sk#437)
                     :              +- *(3) ColumnarToRow
                     :                 +- FileScan parquet default.item[i_item_sk#437,i_item_id#438] Batched: true, DataFilters: [isnotnull(i_item_sk#437)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string>
                     +- BroadcastQueryStage 3
                        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=69439]
                           +- *(4) Project [p_promo_sk#3642]
                              +- *(4) Filter (((p_channel_email#3651 = N) OR (p_channel_event#3656 = N)) AND isnotnull(p_promo_sk#3642))
                                 +- *(4) ColumnarToRow
                                    +- FileScan parquet default.promotion[p_promo_sk#3642,p_channel_email#3651,p_channel_event#3656] Batched: true, DataFilters: [((p_channel_email#3651 = N) OR (p_channel_event#3656 = N)), isnotnull(p_promo_sk#3642)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/promotion], PartitionFilters: [], PushedFilters: [Or(EqualTo(p_channel_email,N),EqualTo(p_channel_event,N)), IsNotNull(p_promo_sk)], ReadSchema: struct<p_promo_sk:int,p_channel_email:string,p_channel_event:string>

==== q27 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[i_item_id#8940 ASC NULLS FIRST,s_state#8941 ASC NULLS FIRST], output=[i_item_id#8940,s_state#8941,g_state#8928,agg1#8929,agg2#8930,agg3#8931,agg4#8932])
   +- *(6) HashAggregate(keys=[i_item_id#8940, s_state#8941, spark_grouping_id#8939L], functions=[avg(ss_quantity#424), avg(UnscaledValue(ss_list_price#426)), avg(UnscaledValue(ss_coupon_amt#433)), avg(UnscaledValue(ss_sales_price#427))], output=[i_item_id#8940, s_state#8941, g_state#8928, agg1#8929, agg2#8930, agg3#8931, agg4#8932])
      +- ShuffleQueryStage 4
         +- Exchange hashpartitioning(i_item_id#8940, s_state#8941, spark_grouping_id#8939L, 20), ENSURE_REQUIREMENTS, [plan_id=70314]
            +- *(5) HashAggregate(keys=[i_item_id#8940, s_state#8941, spark_grouping_id#8939L], functions=[partial_avg(ss_quantity#424), partial_avg(UnscaledValue(ss_list_price#426)), partial_avg(UnscaledValue(ss_coupon_amt#433)), partial_avg(UnscaledValue(ss_sales_price#427))], output=[i_item_id#8940, s_state#8941, spark_grouping_id#8939L, sum#8958, count#8959L, sum#8960, count#8961L, sum#8962, count#8963L, sum#8964, count#8965L])
               +- *(5) Expand [[ss_quantity#424, ss_list_price#426, ss_sales_price#427, ss_coupon_amt#433, i_item_id#438, s_state#76, 0], [ss_quantity#424, ss_list_price#426, ss_sales_price#427, ss_coupon_amt#433, i_item_id#438, null, 1], [ss_quantity#424, ss_list_price#426, ss_sales_price#427, ss_coupon_amt#433, null, null, 3]], [ss_quantity#424, ss_list_price#426, ss_sales_price#427, ss_coupon_amt#433, i_item_id#8940, s_state#8941, spark_grouping_id#8939L]
                  +- *(5) Project [ss_quantity#424, ss_list_price#426, ss_sales_price#427, ss_coupon_amt#433, i_item_id#438, s_state#76]
                     +- *(5) BroadcastHashJoin [ss_item_sk#416], [i_item_sk#437], Inner, BuildRight, false
                        :- *(5) Project [ss_item_sk#416, ss_quantity#424, ss_list_price#426, ss_sales_price#427, ss_coupon_amt#433, s_state#76]
                        :  +- *(5) BroadcastHashJoin [ss_store_sk#421], [s_store_sk#52], Inner, BuildRight, false
                        :     :- *(5) Project [ss_item_sk#416, ss_store_sk#421, ss_quantity#424, ss_list_price#426, ss_sales_price#427, ss_coupon_amt#433]
                        :     :  +- *(5) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#24], Inner, BuildRight, false
                        :     :     :- *(5) Project [ss_sold_date_sk#414, ss_item_sk#416, ss_store_sk#421, ss_quantity#424, ss_list_price#426, ss_sales_price#427, ss_coupon_amt#433]
                        :     :     :  +- *(5) BroadcastHashJoin [ss_cdemo_sk#418], [cd_demo_sk#3633], Inner, BuildRight, false
                        :     :     :     :- *(5) Filter (((isnotnull(ss_cdemo_sk#418) AND isnotnull(ss_sold_date_sk#414)) AND isnotnull(ss_store_sk#421)) AND isnotnull(ss_item_sk#416))
                        :     :     :     :  +- *(5) ColumnarToRow
                        :     :     :     :     +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_item_sk#416,ss_cdemo_sk#418,ss_store_sk#421,ss_quantity#424,ss_list_price#426,ss_sales_price#427,ss_coupon_amt#433] Batched: true, DataFilters: [isnotnull(ss_cdemo_sk#418), isnotnull(ss_sold_date_sk#414), isnotnull(ss_store_sk#421), isnotnul..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_cdemo_sk), IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_cdemo_sk:int,ss_store_sk:int,ss_quantity:int,ss_list...
                        :     :     :     +- BroadcastQueryStage 0
                        :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=69945]
                        :     :     :           +- *(1) Project [cd_demo_sk#3633]
                        :     :     :              +- *(1) Filter ((((((isnotnull(cd_gender#3634) AND isnotnull(cd_marital_status#3635)) AND isnotnull(cd_education_status#3636)) AND (cd_gender#3634 = M)) AND (cd_marital_status#3635 = S)) AND (cd_education_status#3636 = College             )) AND isnotnull(cd_demo_sk#3633))
                        :     :     :                 +- *(1) ColumnarToRow
                        :     :     :                    +- FileScan parquet default.customer_demographics[cd_demo_sk#3633,cd_gender#3634,cd_marital_status#3635,cd_education_status#3636] Batched: true, DataFilters: [isnotnull(cd_gender#3634), isnotnull(cd_marital_status#3635), isnotnull(cd_education_status#3636..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer_demographics], PartitionFilters: [], PushedFilters: [IsNotNull(cd_gender), IsNotNull(cd_marital_status), IsNotNull(cd_education_status), EqualTo(cd_g..., ReadSchema: struct<cd_demo_sk:int,cd_gender:string,cd_marital_status:string,cd_education_status:string>
                        :     :     +- BroadcastQueryStage 1
                        :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=69966]
                        :     :           +- *(2) Project [d_date_sk#24]
                        :     :              +- *(2) Filter ((isnotnull(d_year#30) AND (d_year#30 = 2002)) AND isnotnull(d_date_sk#24))
                        :     :                 +- *(2) ColumnarToRow
                        :     :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30] Batched: true, DataFilters: [isnotnull(d_year#30), (d_year#30 = 2002), isnotnull(d_date_sk#24)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                        :     +- BroadcastQueryStage 2
                        :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=69985]
                        :           +- *(3) Filter ((isnotnull(s_state#76) AND (s_state#76 = TN)) AND isnotnull(s_store_sk#52))
                        :              +- *(3) ColumnarToRow
                        :                 +- FileScan parquet default.store[s_store_sk#52,s_state#76] Batched: true, DataFilters: [isnotnull(s_state#76), (s_state#76 = TN), isnotnull(s_store_sk#52)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_state), EqualTo(s_state,TN), IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_state:string>
                        +- BroadcastQueryStage 3
                           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=70002]
                              +- *(4) Filter isnotnull(i_item_sk#437)
                                 +- *(4) ColumnarToRow
                                    +- FileScan parquet default.item[i_item_sk#437,i_item_id#438] Batched: true, DataFilters: [isnotnull(i_item_sk#437)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string>

==== q28 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   *(18) BroadcastNestedLoopJoin BuildRight, Inner
   :- *(18) BroadcastNestedLoopJoin BuildRight, Inner
   :  :- *(18) BroadcastNestedLoopJoin BuildRight, Inner
   :  :  :- *(18) BroadcastNestedLoopJoin BuildRight, Inner
   :  :  :  :- *(18) BroadcastNestedLoopJoin BuildLeft, Inner
   :  :  :  :  :- BroadcastQueryStage 12
   :  :  :  :  :  +- BroadcastExchange IdentityBroadcastMode, [plan_id=71282]
   :  :  :  :  :     +- *(13) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#426)), count(ss_list_price#426), count(distinct ss_list_price#426)], output=[B1_LP#8990, B1_CNT#8991L, B1_CNTD#8992L])
   :  :  :  :  :        +- ShuffleQueryStage 6
   :  :  :  :  :           +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=70879]
   :  :  :  :  :              +- *(7) HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#426)), merge_count(ss_list_price#426), partial_count(distinct ss_list_price#426)], output=[sum#9166, count#9167L, count#9169L, count#9172L])
   :  :  :  :  :                 +- *(7) HashAggregate(keys=[ss_list_price#426], functions=[merge_avg(UnscaledValue(ss_list_price#426)), merge_count(ss_list_price#426)], output=[ss_list_price#426, sum#9166, count#9167L, count#9169L])
   :  :  :  :  :                    +- ShuffleQueryStage 0
   :  :  :  :  :                       +- Exchange hashpartitioning(ss_list_price#426, 20), ENSURE_REQUIREMENTS, [plan_id=70578]
   :  :  :  :  :                          +- *(1) HashAggregate(keys=[ss_list_price#426], functions=[partial_avg(UnscaledValue(ss_list_price#426)), partial_count(ss_list_price#426)], output=[ss_list_price#426, sum#9166, count#9167L, count#9169L])
   :  :  :  :  :                             +- *(1) Project [ss_list_price#426]
   :  :  :  :  :                                +- *(1) Filter (((isnotnull(ss_quantity#424) AND (ss_quantity#424 >= 0)) AND (ss_quantity#424 <= 5)) AND ((((ss_list_price#426 >= 8.00) AND (ss_list_price#426 <= 18.00)) OR ((ss_coupon_amt#433 >= 459.00) AND (ss_coupon_amt#433 <= 1459.00))) OR ((ss_wholesale_cost#425 >= 57.00) AND (ss_wholesale_cost#425 <= 77.00))))
   :  :  :  :  :                                   +- *(1) ColumnarToRow
   :  :  :  :  :                                      +- FileScan parquet default.store_sales[ss_quantity#424,ss_wholesale_cost#425,ss_list_price#426,ss_coupon_amt#433] Batched: true, DataFilters: [isnotnull(ss_quantity#424), (ss_quantity#424 >= 0), (ss_quantity#424 <= 5), ((((ss_list_price#42..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_quantity), GreaterThanOrEqual(ss_quantity,0), LessThanOrEqual(ss_quantity,5), Or(Or..., ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...
   :  :  :  :  +- *(18) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#9020)), count(ss_list_price#9020), count(distinct ss_list_price#9020)], output=[B2_LP#8993, B2_CNT#8994L, B2_CNTD#8995L])
   :  :  :  :     +- ShuffleQueryStage 7
   :  :  :  :        +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=70981]
   :  :  :  :           +- *(8) HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#9020)), merge_count(ss_list_price#9020), partial_count(distinct ss_list_price#9020)], output=[sum#9176, count#9177L, count#9179L, count#9182L])
   :  :  :  :              +- *(8) HashAggregate(keys=[ss_list_price#9020], functions=[merge_avg(UnscaledValue(ss_list_price#9020)), merge_count(ss_list_price#9020)], output=[ss_list_price#9020, sum#9176, count#9177L, count#9179L])
   :  :  :  :                 +- ShuffleQueryStage 1
   :  :  :  :                    +- Exchange hashpartitioning(ss_list_price#9020, 20), ENSURE_REQUIREMENTS, [plan_id=70623]
   :  :  :  :                       +- *(2) HashAggregate(keys=[ss_list_price#9020], functions=[partial_avg(UnscaledValue(ss_list_price#9020)), partial_count(ss_list_price#9020)], output=[ss_list_price#9020, sum#9176, count#9177L, count#9179L])
   :  :  :  :                          +- *(2) Project [ss_list_price#9020]
   :  :  :  :                             +- *(2) Filter (((isnotnull(ss_quantity#9018) AND (ss_quantity#9018 >= 6)) AND (ss_quantity#9018 <= 10)) AND ((((ss_list_price#9020 >= 90.00) AND (ss_list_price#9020 <= 100.00)) OR ((ss_coupon_amt#9027 >= 2323.00) AND (ss_coupon_amt#9027 <= 3323.00))) OR ((ss_wholesale_cost#9019 >= 31.00) AND (ss_wholesale_cost#9019 <= 51.00))))
   :  :  :  :                                +- *(2) ColumnarToRow
   :  :  :  :                                   +- FileScan parquet default.store_sales[ss_quantity#9018,ss_wholesale_cost#9019,ss_list_price#9020,ss_coupon_amt#9027] Batched: true, DataFilters: [isnotnull(ss_quantity#9018), (ss_quantity#9018 >= 6), (ss_quantity#9018 <= 10), ((((ss_list_pric..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_quantity), GreaterThanOrEqual(ss_quantity,6), LessThanOrEqual(ss_quantity,10), Or(O..., ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...
   :  :  :  +- BroadcastQueryStage 13
   :  :  :     +- BroadcastExchange IdentityBroadcastMode, [plan_id=71382]
   :  :  :        +- *(14) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#9043)), count(ss_list_price#9043), count(distinct ss_list_price#9043)], output=[B3_LP#8996, B3_CNT#8997L, B3_CNTD#8998L])
   :  :  :           +- ShuffleQueryStage 8
   :  :  :              +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=71044]
   :  :  :                 +- *(9) HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#9043)), merge_count(ss_list_price#9043), partial_count(distinct ss_list_price#9043)], output=[sum#9186, count#9187L, count#9189L, count#9192L])
   :  :  :                    +- *(9) HashAggregate(keys=[ss_list_price#9043], functions=[merge_avg(UnscaledValue(ss_list_price#9043)), merge_count(ss_list_price#9043)], output=[ss_list_price#9043, sum#9186, count#9187L, count#9189L])
   :  :  :                       +- ShuffleQueryStage 2
   :  :  :                          +- Exchange hashpartitioning(ss_list_price#9043, 20), ENSURE_REQUIREMENTS, [plan_id=70670]
   :  :  :                             +- *(3) HashAggregate(keys=[ss_list_price#9043], functions=[partial_avg(UnscaledValue(ss_list_price#9043)), partial_count(ss_list_price#9043)], output=[ss_list_price#9043, sum#9186, count#9187L, count#9189L])
   :  :  :                                +- *(3) Project [ss_list_price#9043]
   :  :  :                                   +- *(3) Filter (((isnotnull(ss_quantity#9041) AND (ss_quantity#9041 >= 11)) AND (ss_quantity#9041 <= 15)) AND ((((ss_list_price#9043 >= 142.00) AND (ss_list_price#9043 <= 152.00)) OR ((ss_coupon_amt#9050 >= 12214.00) AND (ss_coupon_amt#9050 <= 13214.00))) OR ((ss_wholesale_cost#9042 >= 79.00) AND (ss_wholesale_cost#9042 <= 99.00))))
   :  :  :                                      +- *(3) ColumnarToRow
   :  :  :                                         +- FileScan parquet default.store_sales[ss_quantity#9041,ss_wholesale_cost#9042,ss_list_price#9043,ss_coupon_amt#9050] Batched: true, DataFilters: [isnotnull(ss_quantity#9041), (ss_quantity#9041 >= 11), (ss_quantity#9041 <= 15), ((((ss_list_pri..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_quantity), GreaterThanOrEqual(ss_quantity,11), LessThanOrEqual(ss_quantity,15), Or(..., ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...
   :  :  +- BroadcastQueryStage 14
   :  :     +- BroadcastExchange IdentityBroadcastMode, [plan_id=71433]
   :  :        +- *(15) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#9066)), count(ss_list_price#9066), count(distinct ss_list_price#9066)], output=[B4_LP#8999, B4_CNT#9000L, B4_CNTD#9001L])
   :  :           +- ShuffleQueryStage 9
   :  :              +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=71106]
   :  :                 +- *(10) HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#9066)), merge_count(ss_list_price#9066), partial_count(distinct ss_list_price#9066)], output=[sum#9196, count#9197L, count#9199L, count#9202L])
   :  :                    +- *(10) HashAggregate(keys=[ss_list_price#9066], functions=[merge_avg(UnscaledValue(ss_list_price#9066)), merge_count(ss_list_price#9066)], output=[ss_list_price#9066, sum#9196, count#9197L, count#9199L])
   :  :                       +- ShuffleQueryStage 3
   :  :                          +- Exchange hashpartitioning(ss_list_price#9066, 20), ENSURE_REQUIREMENTS, [plan_id=70717]
   :  :                             +- *(4) HashAggregate(keys=[ss_list_price#9066], functions=[partial_avg(UnscaledValue(ss_list_price#9066)), partial_count(ss_list_price#9066)], output=[ss_list_price#9066, sum#9196, count#9197L, count#9199L])
   :  :                                +- *(4) Project [ss_list_price#9066]
   :  :                                   +- *(4) Filter (((isnotnull(ss_quantity#9064) AND (ss_quantity#9064 >= 16)) AND (ss_quantity#9064 <= 20)) AND ((((ss_list_price#9066 >= 135.00) AND (ss_list_price#9066 <= 145.00)) OR ((ss_coupon_amt#9073 >= 6071.00) AND (ss_coupon_amt#9073 <= 7071.00))) OR ((ss_wholesale_cost#9065 >= 38.00) AND (ss_wholesale_cost#9065 <= 58.00))))
   :  :                                      +- *(4) ColumnarToRow
   :  :                                         +- FileScan parquet default.store_sales[ss_quantity#9064,ss_wholesale_cost#9065,ss_list_price#9066,ss_coupon_amt#9073] Batched: true, DataFilters: [isnotnull(ss_quantity#9064), (ss_quantity#9064 >= 16), (ss_quantity#9064 <= 20), ((((ss_list_pri..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_quantity), GreaterThanOrEqual(ss_quantity,16), LessThanOrEqual(ss_quantity,20), Or(..., ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...
   :  +- BroadcastQueryStage 15
   :     +- BroadcastExchange IdentityBroadcastMode, [plan_id=71477]
   :        +- *(16) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#9089)), count(ss_list_price#9089), count(distinct ss_list_price#9089)], output=[B5_LP#9002, B5_CNT#9003L, B5_CNTD#9004L])
   :           +- ShuffleQueryStage 10
   :              +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=71167]
   :                 +- *(11) HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#9089)), merge_count(ss_list_price#9089), partial_count(distinct ss_list_price#9089)], output=[sum#9206, count#9207L, count#9209L, count#9212L])
   :                    +- *(11) HashAggregate(keys=[ss_list_price#9089], functions=[merge_avg(UnscaledValue(ss_list_price#9089)), merge_count(ss_list_price#9089)], output=[ss_list_price#9089, sum#9206, count#9207L, count#9209L])
   :                       +- ShuffleQueryStage 4
   :                          +- Exchange hashpartitioning(ss_list_price#9089, 20), ENSURE_REQUIREMENTS, [plan_id=70764]
   :                             +- *(5) HashAggregate(keys=[ss_list_price#9089], functions=[partial_avg(UnscaledValue(ss_list_price#9089)), partial_count(ss_list_price#9089)], output=[ss_list_price#9089, sum#9206, count#9207L, count#9209L])
   :                                +- *(5) Project [ss_list_price#9089]
   :                                   +- *(5) Filter (((isnotnull(ss_quantity#9087) AND (ss_quantity#9087 >= 21)) AND (ss_quantity#9087 <= 25)) AND ((((ss_list_price#9089 >= 122.00) AND (ss_list_price#9089 <= 132.00)) OR ((ss_coupon_amt#9096 >= 836.00) AND (ss_coupon_amt#9096 <= 1836.00))) OR ((ss_wholesale_cost#9088 >= 17.00) AND (ss_wholesale_cost#9088 <= 37.00))))
   :                                      +- *(5) ColumnarToRow
   :                                         +- FileScan parquet default.store_sales[ss_quantity#9087,ss_wholesale_cost#9088,ss_list_price#9089,ss_coupon_amt#9096] Batched: true, DataFilters: [isnotnull(ss_quantity#9087), (ss_quantity#9087 >= 21), (ss_quantity#9087 <= 25), ((((ss_list_pri..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_quantity), GreaterThanOrEqual(ss_quantity,21), LessThanOrEqual(ss_quantity,25), Or(..., ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...
   +- BroadcastQueryStage 16
      +- BroadcastExchange IdentityBroadcastMode, [plan_id=71517]
         +- *(17) HashAggregate(keys=[], functions=[avg(UnscaledValue(ss_list_price#9112)), count(ss_list_price#9112), count(distinct ss_list_price#9112)], output=[B6_LP#9005, B6_CNT#9006L, B6_CNTD#9007L])
            +- ShuffleQueryStage 11
               +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=71227]
                  +- *(12) HashAggregate(keys=[], functions=[merge_avg(UnscaledValue(ss_list_price#9112)), merge_count(ss_list_price#9112), partial_count(distinct ss_list_price#9112)], output=[sum#9216, count#9217L, count#9219L, count#9222L])
                     +- *(12) HashAggregate(keys=[ss_list_price#9112], functions=[merge_avg(UnscaledValue(ss_list_price#9112)), merge_count(ss_list_price#9112)], output=[ss_list_price#9112, sum#9216, count#9217L, count#9219L])
                        +- ShuffleQueryStage 5
                           +- Exchange hashpartitioning(ss_list_price#9112, 20), ENSURE_REQUIREMENTS, [plan_id=70811]
                              +- *(6) HashAggregate(keys=[ss_list_price#9112], functions=[partial_avg(UnscaledValue(ss_list_price#9112)), partial_count(ss_list_price#9112)], output=[ss_list_price#9112, sum#9216, count#9217L, count#9219L])
                                 +- *(6) Project [ss_list_price#9112]
                                    +- *(6) Filter (((isnotnull(ss_quantity#9110) AND (ss_quantity#9110 >= 26)) AND (ss_quantity#9110 <= 30)) AND ((((ss_list_price#9112 >= 154.00) AND (ss_list_price#9112 <= 164.00)) OR ((ss_coupon_amt#9119 >= 7326.00) AND (ss_coupon_amt#9119 <= 8326.00))) OR ((ss_wholesale_cost#9111 >= 7.00) AND (ss_wholesale_cost#9111 <= 27.00))))
                                       +- *(6) ColumnarToRow
                                          +- FileScan parquet default.store_sales[ss_quantity#9110,ss_wholesale_cost#9111,ss_list_price#9112,ss_coupon_amt#9119] Batched: true, DataFilters: [isnotnull(ss_quantity#9110), (ss_quantity#9110 >= 26), (ss_quantity#9110 <= 30), ((((ss_list_pri..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_quantity), GreaterThanOrEqual(ss_quantity,26), LessThanOrEqual(ss_quantity,30), Or(..., ReadSchema: struct<ss_quantity:int,ss_wholesale_cost:decimal(7,2),ss_list_price:decimal(7,2),ss_coupon_amt:de...


==== q29 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   *(10) HashAggregate(keys=[i_item_id#438, i_item_desc#441, s_store_id#53, s_store_name#57], functions=[sum(ss_quantity#424), sum(sr_return_quantity#14), sum(cs_quantity#215)], output=[i_item_id#438, i_item_desc#441, s_store_id#53, s_store_name#57, store_sales_quantity#9542L, store_returns_quantity#9543L, catalog_sales_quantity#9544L])
   +- ShuffleQueryStage 8
      +- Exchange hashpartitioning(i_item_id#438, i_item_desc#441, s_store_id#53, s_store_name#57, 20), ENSURE_REQUIREMENTS, [plan_id=72820]
         +- *(9) HashAggregate(keys=[i_item_id#438, i_item_desc#441, s_store_id#53, s_store_name#57], functions=[partial_sum(ss_quantity#424), partial_sum(sr_return_quantity#14), partial_sum(cs_quantity#215)], output=[i_item_id#438, i_item_desc#441, s_store_id#53, s_store_name#57, sum#9616L, sum#9617L, sum#9618L])
            +- *(9) Project [ss_quantity#424, sr_return_quantity#14, cs_quantity#215, s_store_id#53, s_store_name#57, i_item_id#438, i_item_desc#441]
               +- *(9) BroadcastHashJoin [ss_item_sk#416], [i_item_sk#437], Inner, BuildRight, false
                  :- *(9) Project [ss_item_sk#416, ss_quantity#424, sr_return_quantity#14, cs_quantity#215, s_store_id#53, s_store_name#57]
                  :  +- *(9) BroadcastHashJoin [ss_store_sk#421], [s_store_sk#52], Inner, BuildRight, false
                  :     :- *(9) Project [ss_item_sk#416, ss_store_sk#421, ss_quantity#424, sr_return_quantity#14, cs_quantity#215]
                  :     :  +- *(9) BroadcastHashJoin [cs_sold_date_sk#197], [d_date_sk#9573], Inner, BuildRight, false
                  :     :     :- *(9) Project [ss_item_sk#416, ss_store_sk#421, ss_quantity#424, sr_return_quantity#14, cs_sold_date_sk#197, cs_quantity#215]
                  :     :     :  +- *(9) BroadcastHashJoin [sr_returned_date_sk#4], [d_date_sk#9545], Inner, BuildRight, false
                  :     :     :     :- *(9) Project [ss_item_sk#416, ss_store_sk#421, ss_quantity#424, sr_returned_date_sk#4, sr_return_quantity#14, cs_sold_date_sk#197, cs_quantity#215]
                  :     :     :     :  +- *(9) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#24], Inner, BuildRight, false
                  :     :     :     :     :- *(9) Project [ss_sold_date_sk#414, ss_item_sk#416, ss_store_sk#421, ss_quantity#424, sr_returned_date_sk#4, sr_return_quantity#14, cs_sold_date_sk#197, cs_quantity#215]
                  :     :     :     :     :  +- *(9) ShuffledHashJoin [sr_customer_sk#7, sr_item_sk#6], [cs_bill_customer_sk#200, cs_item_sk#212], Inner, BuildLeft
                  :     :     :     :     :     :- ShuffleQueryStage 7
                  :     :     :     :     :     :  +- Exchange hashpartitioning(sr_customer_sk#7, sr_item_sk#6, 20), ENSURE_REQUIREMENTS, [plan_id=72413]
                  :     :     :     :     :     :     +- *(8) Project [ss_sold_date_sk#414, ss_item_sk#416, ss_store_sk#421, ss_quantity#424, sr_returned_date_sk#4, sr_item_sk#6, sr_customer_sk#7, sr_return_quantity#14]
                  :     :     :     :     :     :        +- *(8) BroadcastHashJoin [ss_customer_sk#417, ss_item_sk#416, ss_ticket_number#423], [sr_customer_sk#7, sr_item_sk#6, sr_ticket_number#13], Inner, BuildRight, false
                  :     :     :     :     :     :           :- *(8) Filter ((((isnotnull(ss_customer_sk#417) AND isnotnull(ss_item_sk#416)) AND isnotnull(ss_ticket_number#423)) AND isnotnull(ss_sold_date_sk#414)) AND isnotnull(ss_store_sk#421))
                  :     :     :     :     :     :           :  +- *(8) ColumnarToRow
                  :     :     :     :     :     :           :     +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_item_sk#416,ss_customer_sk#417,ss_store_sk#421,ss_ticket_number#423,ss_quantity#424] Batched: true, DataFilters: [isnotnull(ss_customer_sk#417), isnotnull(ss_item_sk#416), isnotnull(ss_ticket_number#423), isnot..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk), IsNotNull(ss_item_sk), IsNotNull(ss_ticket_number), IsNotNull(ss_sold..., ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:int...
                  :     :     :     :     :     :           +- BroadcastQueryStage 0
                  :     :     :     :     :     :              +- BroadcastExchange HashedRelationBroadcastMode(List(input[2, int, false], input[1, int, false], input[3, int, false]),false), [plan_id=71928]
                  :     :     :     :     :     :                 +- *(1) Filter (((isnotnull(sr_customer_sk#7) AND isnotnull(sr_item_sk#6)) AND isnotnull(sr_ticket_number#13)) AND isnotnull(sr_returned_date_sk#4))
                  :     :     :     :     :     :                    +- *(1) ColumnarToRow
                  :     :     :     :     :     :                       +- FileScan parquet default.store_returns[sr_returned_date_sk#4,sr_item_sk#6,sr_customer_sk#7,sr_ticket_number#13,sr_return_quantity#14] Batched: true, DataFilters: [isnotnull(sr_customer_sk#7), isnotnull(sr_item_sk#6), isnotnull(sr_ticket_number#13), isnotnull(..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_returns], PartitionFilters: [], PushedFilters: [IsNotNull(sr_customer_sk), IsNotNull(sr_item_sk), IsNotNull(sr_ticket_number), IsNotNull(sr_retu..., ReadSchema: struct<sr_returned_date_sk:int,sr_item_sk:int,sr_customer_sk:int,sr_ticket_number:int,sr_return_q...
                  :     :     :     :     :     +- ShuffleQueryStage 1
                  :     :     :     :     :        +- Exchange hashpartitioning(cs_bill_customer_sk#200, cs_item_sk#212, 20), ENSURE_REQUIREMENTS, [plan_id=71946]
                  :     :     :     :     :           +- *(2) Filter ((isnotnull(cs_bill_customer_sk#200) AND isnotnull(cs_item_sk#212)) AND isnotnull(cs_sold_date_sk#197))
                  :     :     :     :     :              +- *(2) ColumnarToRow
                  :     :     :     :     :                 +- FileScan parquet default.catalog_sales[cs_sold_date_sk#197,cs_bill_customer_sk#200,cs_item_sk#212,cs_quantity#215] Batched: true, DataFilters: [isnotnull(cs_bill_customer_sk#200), isnotnull(cs_item_sk#212), isnotnull(cs_sold_date_sk#197)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_bill_customer_sk), IsNotNull(cs_item_sk), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_bill_customer_sk:int,cs_item_sk:int,cs_quantity:int>
                  :     :     :     :     +- BroadcastQueryStage 2
                  :     :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=71966]
                  :     :     :     :           +- *(3) Project [d_date_sk#24]
                  :     :     :     :              +- *(3) Filter ((((isnotnull(d_moy#32) AND isnotnull(d_year#30)) AND (d_moy#32 = 9)) AND (d_year#30 = 1999)) AND isnotnull(d_date_sk#24))
                  :     :     :     :                 +- *(3) ColumnarToRow
                  :     :     :     :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30,d_moy#32] Batched: true, DataFilters: [isnotnull(d_moy#32), isnotnull(d_year#30), (d_moy#32 = 9), (d_year#30 = 1999), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_moy), IsNotNull(d_year), EqualTo(d_moy,9), EqualTo(d_year,1999), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                  :     :     :     +- BroadcastQueryStage 3
                  :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=71987]
                  :     :     :           +- *(4) Project [d_date_sk#9545]
                  :     :     :              +- *(4) Filter (((((isnotnull(d_moy#9553) AND isnotnull(d_year#9551)) AND (d_moy#9553 >= 9)) AND (d_moy#9553 <= 12)) AND (d_year#9551 = 1999)) AND isnotnull(d_date_sk#9545))
                  :     :     :                 +- *(4) ColumnarToRow
                  :     :     :                    +- FileScan parquet default.date_dim[d_date_sk#9545,d_year#9551,d_moy#9553] Batched: true, DataFilters: [isnotnull(d_moy#9553), isnotnull(d_year#9551), (d_moy#9553 >= 9), (d_moy#9553 <= 12), (d_year#95..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_moy), IsNotNull(d_year), GreaterThanOrEqual(d_moy,9), LessThanOrEqual(d_moy,12), Equ..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                  :     :     +- BroadcastQueryStage 4
                  :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=72008]
                  :     :           +- *(5) Project [d_date_sk#9573]
                  :     :              +- *(5) Filter (d_year#9579 IN (1999,2000,2001) AND isnotnull(d_date_sk#9573))
                  :     :                 +- *(5) ColumnarToRow
                  :     :                    +- FileScan parquet default.date_dim[d_date_sk#9573,d_year#9579] Batched: true, DataFilters: [d_year#9579 IN (1999,2000,2001), isnotnull(d_date_sk#9573)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [In(d_year, [1999,2000,2001]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                  :     +- BroadcastQueryStage 5
                  :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=72027]
                  :           +- *(6) Filter isnotnull(s_store_sk#52)
                  :              +- *(6) ColumnarToRow
                  :                 +- FileScan parquet default.store[s_store_sk#52,s_store_id#53,s_store_name#57] Batched: true, DataFilters: [isnotnull(s_store_sk#52)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_id:string,s_store_name:string>
                  +- BroadcastQueryStage 6
                     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=72044]
                        +- *(7) Filter isnotnull(i_item_sk#437)
                           +- *(7) ColumnarToRow
                              +- FileScan parquet default.item[i_item_sk#437,i_item_id#438,i_item_desc#441] Batched: true, DataFilters: [isnotnull(i_item_sk#437)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string>

==== q30 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[c_customer_id#82 ASC NULLS FIRST,c_salutation#88 ASC NULLS FIRST,c_first_name#89 ASC NULLS FIRST,c_last_name#90 ASC NULLS FIRST,c_preferred_cust_flag#91 ASC NULLS FIRST,c_birth_day#92 ASC NULLS FIRST,c_birth_month#93 ASC NULLS FIRST,c_birth_year#94 ASC NULLS FIRST,c_birth_country#95 ASC NULLS FIRST,c_login#96 ASC NULLS FIRST,c_email_address#97 ASC NULLS FIRST,c_last_review_date#98 ASC NULLS FIRST,ctr_total_return#9637 ASC NULLS FIRST], output=[c_customer_id#82,c_salutation#88,c_first_name#89,c_last_name#90,c_preferred_cust_flag#91,c_birth_day#92,c_birth_month#93,c_birth_year#94,c_birth_country#95,c_login#96,c_email_address#97,c_last_review_date#98,ctr_total_return#9637])
   +- *(11) Project [c_customer_id#82, c_salutation#88, c_first_name#89, c_last_name#90, c_preferred_cust_flag#91, c_birth_day#92, c_birth_month#93, c_birth_year#94, c_birth_country#95, c_login#96, c_email_address#97, c_last_review_date#98, ctr_total_return#9637]
      +- *(11) BroadcastHashJoin [c_current_addr_sk#85], [ca_address_sk#9638], Inner, BuildRight, false
         :- *(11) Project [ctr_total_return#9637, c_customer_id#82, c_current_addr_sk#85, c_salutation#88, c_first_name#89, c_last_name#90, c_preferred_cust_flag#91, c_birth_day#92, c_birth_month#93, c_birth_year#94, c_birth_country#95, c_login#96, c_email_address#97, c_last_review_date#98]
         :  +- *(11) BroadcastHashJoin [ctr_customer_sk#9635], [c_customer_sk#81], Inner, BuildRight, false
         :     :- *(11) Project [ctr_customer_sk#9635, ctr_total_return#9637]
         :     :  +- *(11) BroadcastHashJoin [ctr_state#9636], [ctr_state#9636#9668], Inner, BuildLeft, (cast(ctr_total_return#9637 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#9653), false
         :     :     :- BroadcastQueryStage 10
         :     :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(input[1, string, true]),false), [plan_id=74006]
         :     :     :     +- *(9) Filter isnotnull(ctr_total_return#9637)
         :     :     :        +- *(9) HashAggregate(keys=[wr_returning_customer_sk#3334, ca_state#3725], functions=[sum(UnscaledValue(wr_return_amt#3342))], output=[ctr_customer_sk#9635, ctr_state#9636, ctr_total_return#9637])
         :     :     :           +- ShuffleQueryStage 8
         :     :     :              +- Exchange hashpartitioning(wr_returning_customer_sk#3334, ca_state#3725, 20), ENSURE_REQUIREMENTS, [plan_id=73869]
         :     :     :                 +- *(7) HashAggregate(keys=[wr_returning_customer_sk#3334, ca_state#3725], functions=[partial_sum(UnscaledValue(wr_return_amt#3342))], output=[wr_returning_customer_sk#3334, ca_state#3725, sum#9670L])
         :     :     :                    +- *(7) Project [wr_returning_customer_sk#3334, wr_return_amt#3342, ca_state#3725]
         :     :     :                       +- *(7) BroadcastHashJoin [wr_returning_addr_sk#3337], [ca_address_sk#3717], Inner, BuildRight, false
         :     :     :                          :- *(7) Project [wr_returning_customer_sk#3334, wr_returning_addr_sk#3337, wr_return_amt#3342]
         :     :     :                          :  +- *(7) BroadcastHashJoin [wr_returned_date_sk#3327], [d_date_sk#24], Inner, BuildRight, false
         :     :     :                          :     :- *(7) Filter ((isnotnull(wr_returned_date_sk#3327) AND isnotnull(wr_returning_addr_sk#3337)) AND isnotnull(wr_returning_customer_sk#3334))
         :     :     :                          :     :  +- *(7) ColumnarToRow
         :     :     :                          :     :     +- FileScan parquet default.web_returns[wr_returned_date_sk#3327,wr_returning_customer_sk#3334,wr_returning_addr_sk#3337,wr_return_amt#3342] Batched: true, DataFilters: [isnotnull(wr_returned_date_sk#3327), isnotnull(wr_returning_addr_sk#3337), isnotnull(wr_returnin..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_returns], PartitionFilters: [], PushedFilters: [IsNotNull(wr_returned_date_sk), IsNotNull(wr_returning_addr_sk), IsNotNull(wr_returning_customer..., ReadSchema: struct<wr_returned_date_sk:int,wr_returning_customer_sk:int,wr_returning_addr_sk:int,wr_return_am...
         :     :     :                          :     +- BroadcastQueryStage 0
         :     :     :                          :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=73123]
         :     :     :                          :           +- *(1) Project [d_date_sk#24]
         :     :     :                          :              +- *(1) Filter ((isnotnull(d_year#30) AND (d_year#30 = 2002)) AND isnotnull(d_date_sk#24))
         :     :     :                          :                 +- *(1) ColumnarToRow
         :     :     :                          :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30] Batched: true, DataFilters: [isnotnull(d_year#30), (d_year#30 = 2002), isnotnull(d_date_sk#24)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2002), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :     :     :                          +- BroadcastQueryStage 1
         :     :     :                             +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=73142]
         :     :     :                                +- *(2) Filter (isnotnull(ca_address_sk#3717) AND isnotnull(ca_state#3725))
         :     :     :                                   +- *(2) ColumnarToRow
         :     :     :                                      +- FileScan parquet default.customer_address[ca_address_sk#3717,ca_state#3725] Batched: true, DataFilters: [isnotnull(ca_address_sk#3717), isnotnull(ca_state#3725)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_state)], ReadSchema: struct<ca_address_sk:int,ca_state:string>
         :     :     +- *(11) Filter isnotnull((avg(ctr_total_return) * 1.2)#9653)
         :     :        +- *(11) HashAggregate(keys=[ctr_state#9636], functions=[avg(ctr_total_return#9637)], output=[(avg(ctr_total_return) * 1.2)#9653, ctr_state#9636#9668])
         :     :           +- ShuffleQueryStage 11
         :     :              +- Exchange hashpartitioning(ctr_state#9636, 20), ENSURE_REQUIREMENTS, [plan_id=74077]
         :     :                 +- *(10) HashAggregate(keys=[ctr_state#9636], functions=[partial_avg(ctr_total_return#9637)], output=[ctr_state#9636, sum#9673, count#9674L])
         :     :                    +- *(10) HashAggregate(keys=[wr_returning_customer_sk#3334, ca_state#3725], functions=[sum(UnscaledValue(wr_return_amt#3342))], output=[ctr_state#9636, ctr_total_return#9637])
         :     :                       +- ShuffleQueryStage 9
         :     :                          +- Exchange hashpartitioning(wr_returning_customer_sk#3334, ca_state#3725, 20), ENSURE_REQUIREMENTS, [plan_id=73913]
         :     :                             +- *(8) HashAggregate(keys=[wr_returning_customer_sk#3334, ca_state#3725], functions=[partial_sum(UnscaledValue(wr_return_amt#3342))], output=[wr_returning_customer_sk#3334, ca_state#3725, sum#9676L])
         :     :                                +- *(8) Project [wr_returning_customer_sk#3334, wr_return_amt#3342, ca_state#3725]
         :     :                                   +- *(8) BroadcastHashJoin [wr_returning_addr_sk#3337], [ca_address_sk#3717], Inner, BuildRight, false
         :     :                                      :- *(8) Project [wr_returning_customer_sk#3334, wr_returning_addr_sk#3337, wr_return_amt#3342]
         :     :                                      :  +- *(8) BroadcastHashJoin [wr_returned_date_sk#3327], [d_date_sk#24], Inner, BuildRight, false
         :     :                                      :     :- *(8) Filter (isnotnull(wr_returned_date_sk#3327) AND isnotnull(wr_returning_addr_sk#3337))
         :     :                                      :     :  +- *(8) ColumnarToRow
         :     :                                      :     :     +- FileScan parquet default.web_returns[wr_returned_date_sk#3327,wr_returning_customer_sk#3334,wr_returning_addr_sk#3337,wr_return_amt#3342] Batched: true, DataFilters: [isnotnull(wr_returned_date_sk#3327), isnotnull(wr_returning_addr_sk#3337)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_returns], PartitionFilters: [], PushedFilters: [IsNotNull(wr_returned_date_sk), IsNotNull(wr_returning_addr_sk)], ReadSchema: struct<wr_returned_date_sk:int,wr_returning_customer_sk:int,wr_returning_addr_sk:int,wr_return_am...
         :     :                                      :     +- BroadcastQueryStage 3
         :     :                                      :        +- ReusedExchange [d_date_sk#24], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=73123]
         :     :                                      +- BroadcastQueryStage 5
         :     :                                         +- ReusedExchange [ca_address_sk#3717, ca_state#3725], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=73142]
         :     +- BroadcastQueryStage 6
         :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=73252]
         :           +- *(5) Filter (isnotnull(c_customer_sk#81) AND isnotnull(c_current_addr_sk#85))
         :              +- *(5) ColumnarToRow
         :                 +- FileScan parquet default.customer[c_customer_sk#81,c_customer_id#82,c_current_addr_sk#85,c_salutation#88,c_first_name#89,c_last_name#90,c_preferred_cust_flag#91,c_birth_day#92,c_birth_month#93,c_birth_year#94,c_birth_country#95,c_login#96,c_email_address#97,c_last_review_date#98] Batched: true, DataFilters: [isnotnull(c_customer_sk#81), isnotnull(c_current_addr_sk#85)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_current_addr_sk:int,c_salutation:string,c_first_n...
         +- BroadcastQueryStage 7
            +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=73277]
               +- *(6) Project [ca_address_sk#9638]
                  +- *(6) Filter ((isnotnull(ca_state#9646) AND (ca_state#9646 = GA)) AND isnotnull(ca_address_sk#9638))
                     +- *(6) ColumnarToRow
                        +- FileScan parquet default.customer_address[ca_address_sk#9638,ca_state#9646] Batched: true, DataFilters: [isnotnull(ca_state#9646), (ca_state#9646 = GA), isnotnull(ca_address_sk#9638)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_state), EqualTo(ca_state,GA), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_state:string>

==== q31 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   *(25) Sort [ca_county#3724 ASC NULLS FIRST], true, 0
   +- ShuffleQueryStage 31
      +- Exchange rangepartitioning(ca_county#3724 ASC NULLS FIRST, 20), ENSURE_REQUIREMENTS, [plan_id=77285]
         +- *(24) Project [ca_county#3724, d_year#30, CheckOverflow((promote_precision(web_sales#9757) / promote_precision(web_sales#9700)), DecimalType(37,20)) AS web_q1_q2_increase#9695, CheckOverflow((promote_precision(store_sales#9749) / promote_precision(store_sales#9699)), DecimalType(37,20)) AS store_q1_q2_increase#9696, CheckOverflow((promote_precision(web_sales#9761) / promote_precision(web_sales#9757)), DecimalType(37,20)) AS web_q2_q3_increase#9697, CheckOverflow((promote_precision(store_sales#9753) / promote_precision(store_sales#9749)), DecimalType(37,20)) AS store_q2_q3_increase#9698]
            +- *(24) BroadcastHashJoin [ca_county#9736], [ca_county#10325], Inner, BuildRight, (CASE WHEN (web_sales#9757 > 0.00) THEN CheckOverflow((promote_precision(web_sales#9761) / promote_precision(web_sales#9757)), DecimalType(37,20)) END > CASE WHEN (store_sales#9749 > 0.00) THEN CheckOverflow((promote_precision(store_sales#9753) / promote_precision(store_sales#9749)), DecimalType(37,20)) END), false
               :- *(24) Project [ca_county#3724, d_year#30, store_sales#9699, store_sales#9749, store_sales#9753, ca_county#9736, web_sales#9700, web_sales#9757]
               :  +- *(24) BroadcastHashJoin [ca_county#9736], [ca_county#10249], Inner, BuildRight, (CASE WHEN (web_sales#9700 > 0.00) THEN CheckOverflow((promote_precision(web_sales#9757) / promote_precision(web_sales#9700)), DecimalType(37,20)) END > CASE WHEN (store_sales#9699 > 0.00) THEN CheckOverflow((promote_precision(store_sales#9749) / promote_precision(store_sales#9699)), DecimalType(37,20)) END), false
               :     :- *(24) BroadcastHashJoin [ca_county#3724], [ca_county#9736], Inner, BuildRight, false
               :     :  :- *(24) Project [ca_county#3724, d_year#30, store_sales#9699, store_sales#9749, store_sales#9753]
               :     :  :  +- *(24) BroadcastHashJoin [ca_county#10108], [ca_county#10173], Inner, BuildRight, false
               :     :  :     :- *(24) BroadcastHashJoin [ca_county#3724], [ca_county#10108], Inner, BuildRight, false
               :     :  :     :  :- *(24) HashAggregate(keys=[ca_county#3724, d_qoy#34, d_year#30], functions=[sum(UnscaledValue(ss_ext_sales_price#429))], output=[ca_county#3724, d_year#30, store_sales#9699])
               :     :  :     :  :  +- ShuffleQueryStage 24
               :     :  :     :  :     +- Exchange hashpartitioning(ca_county#3724, d_qoy#34, d_year#30, 20), ENSURE_REQUIREMENTS, [plan_id=76374]
               :     :  :     :  :        +- *(17) HashAggregate(keys=[ca_county#3724, d_qoy#34, d_year#30], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#429))], output=[ca_county#3724, d_qoy#34, d_year#30, sum#10333L])
               :     :  :     :  :           +- *(17) Project [ss_ext_sales_price#429, d_year#30, d_qoy#34, ca_county#3724]
               :     :  :     :  :              +- *(17) BroadcastHashJoin [ss_addr_sk#420], [ca_address_sk#3717], Inner, BuildRight, false
               :     :  :     :  :                 :- *(17) Project [ss_addr_sk#420, ss_ext_sales_price#429, d_year#30, d_qoy#34]
               :     :  :     :  :                 :  +- *(17) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#24], Inner, BuildRight, false
               :     :  :     :  :                 :     :- *(17) Filter (isnotnull(ss_sold_date_sk#414) AND isnotnull(ss_addr_sk#420))
               :     :  :     :  :                 :     :  +- *(17) ColumnarToRow
               :     :  :     :  :                 :     :     +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_addr_sk#420,ss_ext_sales_price#429] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#414), isnotnull(ss_addr_sk#420)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_addr_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>
               :     :  :     :  :                 :     +- BroadcastQueryStage 0
               :     :  :     :  :                 :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=74831]
               :     :  :     :  :                 :           +- *(1) Filter ((((isnotnull(d_qoy#34) AND isnotnull(d_year#30)) AND (d_qoy#34 = 1)) AND (d_year#30 = 2000)) AND isnotnull(d_date_sk#24))
               :     :  :     :  :                 :              +- *(1) ColumnarToRow
               :     :  :     :  :                 :                 +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30,d_qoy#34] Batched: true, DataFilters: [isnotnull(d_qoy#34), isnotnull(d_year#30), (d_qoy#34 = 1), (d_year#30 = 2000), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,1), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>
               :     :  :     :  :                 +- BroadcastQueryStage 1
               :     :  :     :  :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=74848]
               :     :  :     :  :                       +- *(2) Filter (isnotnull(ca_address_sk#3717) AND isnotnull(ca_county#3724))
               :     :  :     :  :                          +- *(2) ColumnarToRow
               :     :  :     :  :                             +- FileScan parquet default.customer_address[ca_address_sk#3717,ca_county#3724] Batched: true, DataFilters: [isnotnull(ca_address_sk#3717), isnotnull(ca_county#3724)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_county)], ReadSchema: struct<ca_address_sk:int,ca_county:string>
               :     :  :     :  +- BroadcastQueryStage 26
               :     :  :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=76571]
               :     :  :     :        +- *(19) HashAggregate(keys=[ca_county#10108, d_qoy#10083, d_year#10079], functions=[sum(UnscaledValue(ss_ext_sales_price#10065))], output=[ca_county#10108, store_sales#9749])
               :     :  :     :           +- ShuffleQueryStage 20
               :     :  :     :              +- Exchange hashpartitioning(ca_county#10108, d_qoy#10083, d_year#10079, 20), ENSURE_REQUIREMENTS, [plan_id=75773]
               :     :  :     :                 +- *(13) HashAggregate(keys=[ca_county#10108, d_qoy#10083, d_year#10079], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#10065))], output=[ca_county#10108, d_qoy#10083, d_year#10079, sum#10335L])
               :     :  :     :                    +- *(13) Project [ss_ext_sales_price#10065, d_year#10079, d_qoy#10083, ca_county#10108]
               :     :  :     :                       +- *(13) BroadcastHashJoin [ss_addr_sk#10056], [ca_address_sk#10101], Inner, BuildRight, false
               :     :  :     :                          :- *(13) Project [ss_addr_sk#10056, ss_ext_sales_price#10065, d_year#10079, d_qoy#10083]
               :     :  :     :                          :  +- *(13) BroadcastHashJoin [ss_sold_date_sk#10050], [d_date_sk#10073], Inner, BuildRight, false
               :     :  :     :                          :     :- *(13) Filter (isnotnull(ss_sold_date_sk#10050) AND isnotnull(ss_addr_sk#10056))
               :     :  :     :                          :     :  +- *(13) ColumnarToRow
               :     :  :     :                          :     :     +- FileScan parquet default.store_sales[ss_sold_date_sk#10050,ss_addr_sk#10056,ss_ext_sales_price#10065] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#10050), isnotnull(ss_addr_sk#10056)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_addr_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>
               :     :  :     :                          :     +- BroadcastQueryStage 2
               :     :  :     :                          :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=74870]
               :     :  :     :                          :           +- *(3) Filter ((((isnotnull(d_qoy#10083) AND isnotnull(d_year#10079)) AND (d_qoy#10083 = 2)) AND (d_year#10079 = 2000)) AND isnotnull(d_date_sk#10073))
               :     :  :     :                          :              +- *(3) ColumnarToRow
               :     :  :     :                          :                 +- FileScan parquet default.date_dim[d_date_sk#10073,d_year#10079,d_qoy#10083] Batched: true, DataFilters: [isnotnull(d_qoy#10083), isnotnull(d_year#10079), (d_qoy#10083 = 2), (d_year#10079 = 2000), isnot..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,2), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>
               :     :  :     :                          +- BroadcastQueryStage 4
               :     :  :     :                             +- ReusedExchange [ca_address_sk#10101, ca_county#10108], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=74848]
               :     :  :     +- BroadcastQueryStage 28
               :     :  :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=76805]
               :     :  :           +- *(21) HashAggregate(keys=[ca_county#10173, d_qoy#10148, d_year#10144], functions=[sum(UnscaledValue(ss_ext_sales_price#10130))], output=[ca_county#10173, store_sales#9753])
               :     :  :              +- ShuffleQueryStage 22
               :     :  :                 +- Exchange hashpartitioning(ca_county#10173, d_qoy#10148, d_year#10144, 20), ENSURE_REQUIREMENTS, [plan_id=76107]
               :     :  :                    +- *(15) HashAggregate(keys=[ca_county#10173, d_qoy#10148, d_year#10144], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#10130))], output=[ca_county#10173, d_qoy#10148, d_year#10144, sum#10337L])
               :     :  :                       +- *(15) Project [ss_ext_sales_price#10130, d_year#10144, d_qoy#10148, ca_county#10173]
               :     :  :                          +- *(15) BroadcastHashJoin [ss_addr_sk#10121], [ca_address_sk#10166], Inner, BuildRight, false
               :     :  :                             :- *(15) Project [ss_addr_sk#10121, ss_ext_sales_price#10130, d_year#10144, d_qoy#10148]
               :     :  :                             :  +- *(15) BroadcastHashJoin [ss_sold_date_sk#10115], [d_date_sk#10138], Inner, BuildRight, false
               :     :  :                             :     :- *(15) Filter (isnotnull(ss_sold_date_sk#10115) AND isnotnull(ss_addr_sk#10121))
               :     :  :                             :     :  +- *(15) ColumnarToRow
               :     :  :                             :     :     +- FileScan parquet default.store_sales[ss_sold_date_sk#10115,ss_addr_sk#10121,ss_ext_sales_price#10130] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#10115), isnotnull(ss_addr_sk#10121)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_addr_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>
               :     :  :                             :     +- BroadcastQueryStage 5
               :     :  :                             :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=74912]
               :     :  :                             :           +- *(5) Filter ((((isnotnull(d_qoy#10148) AND isnotnull(d_year#10144)) AND (d_qoy#10148 = 3)) AND (d_year#10144 = 2000)) AND isnotnull(d_date_sk#10138))
               :     :  :                             :              +- *(5) ColumnarToRow
               :     :  :                             :                 +- FileScan parquet default.date_dim[d_date_sk#10138,d_year#10144,d_qoy#10148] Batched: true, DataFilters: [isnotnull(d_qoy#10148), isnotnull(d_year#10144), (d_qoy#10148 = 3), (d_year#10144 = 2000), isnot..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,3), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>
               :     :  :                             +- BroadcastQueryStage 7
               :     :  :                                +- ReusedExchange [ca_address_sk#10166, ca_county#10173], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=74848]
               :     :  +- BroadcastQueryStage 30
               :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=77043]
               :     :        +- *(23) HashAggregate(keys=[ca_county#9736, d_qoy#9711, d_year#9707], functions=[sum(UnscaledValue(ws_ext_sales_price#186))], output=[ca_county#9736, web_sales#9700])
               :     :           +- ShuffleQueryStage 25
               :     :              +- Exchange hashpartitioning(ca_county#9736, d_qoy#9711, d_year#9707, 20), ENSURE_REQUIREMENTS, [plan_id=76420]
               :     :                 +- *(18) HashAggregate(keys=[ca_county#9736, d_qoy#9711, d_year#9707], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#186))], output=[ca_county#9736, d_qoy#9711, d_year#9707, sum#10339L])
               :     :                    +- *(18) Project [ws_ext_sales_price#186, d_year#9707, d_qoy#9711, ca_county#9736]
               :     :                       +- *(18) BroadcastHashJoin [ws_bill_addr_sk#170], [ca_address_sk#9729], Inner, BuildRight, false
               :     :                          :- *(18) Project [ws_bill_addr_sk#170, ws_ext_sales_price#186, d_year#9707, d_qoy#9711]
               :     :                          :  +- *(18) BroadcastHashJoin [ws_sold_date_sk#163], [d_date_sk#9701], Inner, BuildRight, false
               :     :                          :     :- *(18) Filter (isnotnull(ws_sold_date_sk#163) AND isnotnull(ws_bill_addr_sk#170))
               :     :                          :     :  +- *(18) ColumnarToRow
               :     :                          :     :     +- FileScan parquet default.web_sales[ws_sold_date_sk#163,ws_bill_addr_sk#170,ws_ext_sales_price#186] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#163), isnotnull(ws_bill_addr_sk#170)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_bill_addr_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>
               :     :                          :     +- BroadcastQueryStage 9
               :     :                          :        +- ReusedExchange [d_date_sk#9701, d_year#9707, d_qoy#9711], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=74831]
               :     :                          +- BroadcastQueryStage 11
               :     :                             +- ReusedExchange [ca_address_sk#9729, ca_county#9736], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=74848]
               :     +- BroadcastQueryStage 27
               :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=76699]
               :           +- *(20) HashAggregate(keys=[ca_county#10249, d_qoy#10224, d_year#10220], functions=[sum(UnscaledValue(ws_ext_sales_price#10203))], output=[ca_county#10249, web_sales#9757])
               :              +- ShuffleQueryStage 21
               :                 +- Exchange hashpartitioning(ca_county#10249, d_qoy#10224, d_year#10220, 20), ENSURE_REQUIREMENTS, [plan_id=75820]
               :                    +- *(14) HashAggregate(keys=[ca_county#10249, d_qoy#10224, d_year#10220], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#10203))], output=[ca_county#10249, d_qoy#10224, d_year#10220, sum#10341L])
               :                       +- *(14) Project [ws_ext_sales_price#10203, d_year#10220, d_qoy#10224, ca_county#10249]
               :                          +- *(14) BroadcastHashJoin [ws_bill_addr_sk#10187], [ca_address_sk#10242], Inner, BuildRight, false
               :                             :- *(14) Project [ws_bill_addr_sk#10187, ws_ext_sales_price#10203, d_year#10220, d_qoy#10224]
               :                             :  +- *(14) BroadcastHashJoin [ws_sold_date_sk#10180], [d_date_sk#10214], Inner, BuildRight, false
               :                             :     :- *(14) Filter (isnotnull(ws_sold_date_sk#10180) AND isnotnull(ws_bill_addr_sk#10187))
               :                             :     :  +- *(14) ColumnarToRow
               :                             :     :     +- FileScan parquet default.web_sales[ws_sold_date_sk#10180,ws_bill_addr_sk#10187,ws_ext_sales_price#10203] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#10180), isnotnull(ws_bill_addr_sk#10187)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_bill_addr_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>
               :                             :     +- BroadcastQueryStage 13
               :                             :        +- ReusedExchange [d_date_sk#10214, d_year#10220, d_qoy#10224], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=74870]
               :                             +- BroadcastQueryStage 15
               :                                +- ReusedExchange [ca_address_sk#10242, ca_county#10249], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=74848]
               +- BroadcastQueryStage 29
                  +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=76906]
                     +- *(22) HashAggregate(keys=[ca_county#10325, d_qoy#10300, d_year#10296], functions=[sum(UnscaledValue(ws_ext_sales_price#10279))], output=[ca_county#10325, web_sales#9761])
                        +- ShuffleQueryStage 23
                           +- Exchange hashpartitioning(ca_county#10325, d_qoy#10300, d_year#10296, 20), ENSURE_REQUIREMENTS, [plan_id=76155]
                              +- *(16) HashAggregate(keys=[ca_county#10325, d_qoy#10300, d_year#10296], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#10279))], output=[ca_county#10325, d_qoy#10300, d_year#10296, sum#10343L])
                                 +- *(16) Project [ws_ext_sales_price#10279, d_year#10296, d_qoy#10300, ca_county#10325]
                                    +- *(16) BroadcastHashJoin [ws_bill_addr_sk#10263], [ca_address_sk#10318], Inner, BuildRight, false
                                       :- *(16) Project [ws_bill_addr_sk#10263, ws_ext_sales_price#10279, d_year#10296, d_qoy#10300]
                                       :  +- *(16) BroadcastHashJoin [ws_sold_date_sk#10256], [d_date_sk#10290], Inner, BuildRight, false
                                       :     :- *(16) Filter (isnotnull(ws_sold_date_sk#10256) AND isnotnull(ws_bill_addr_sk#10263))
                                       :     :  +- *(16) ColumnarToRow
                                       :     :     +- FileScan parquet default.web_sales[ws_sold_date_sk#10256,ws_bill_addr_sk#10263,ws_ext_sales_price#10279] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#10256), isnotnull(ws_bill_addr_sk#10263)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_bill_addr_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>
                                       :     +- BroadcastQueryStage 17
                                       :        +- ReusedExchange [d_date_sk#10290, d_year#10296, d_qoy#10300], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=74912]
                                       +- BroadcastQueryStage 19
                                          +- ReusedExchange [ca_address_sk#10318, ca_county#10325], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=74848]

==== q32 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   *(7) HashAggregate(keys=[], functions=[sum(UnscaledValue(cs_ext_discount_amt#219))], output=[excess discount amount#10374])
   +- ShuffleQueryStage 7
      +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=77991]
         +- *(6) HashAggregate(keys=[], functions=[partial_sum(UnscaledValue(cs_ext_discount_amt#219))], output=[sum#10443L])
            +- *(6) Project [cs_ext_discount_amt#219]
               +- *(6) BroadcastHashJoin [cs_sold_date_sk#197], [d_date_sk#24], Inner, BuildRight, false
                  :- *(6) Project [cs_sold_date_sk#197, cs_ext_discount_amt#219]
                  :  +- *(6) BroadcastHashJoin [i_item_sk#437], [cs_item_sk#10393], Inner, BuildLeft, (cast(cs_ext_discount_amt#219 as decimal(14,7)) > (1.3 * avg(cs_ext_discount_amt))#10377), false
                  :     :- BroadcastQueryStage 6
                  :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[2, int, true] as bigint)),false), [plan_id=77904]
                  :     :     +- AQEShuffleRead local
                  :     :        +- ShuffleQueryStage 4
                  :     :           +- Exchange hashpartitioning(i_item_sk#437, 20), ENSURE_REQUIREMENTS, [plan_id=77711]
                  :     :              +- *(4) Project [cs_sold_date_sk#197, cs_ext_discount_amt#219, i_item_sk#437]
                  :     :                 +- *(4) BroadcastHashJoin [cs_item_sk#212], [i_item_sk#437], Inner, BuildRight, false
                  :     :                    :- *(4) Filter ((isnotnull(cs_item_sk#212) AND isnotnull(cs_ext_discount_amt#219)) AND isnotnull(cs_sold_date_sk#197))
                  :     :                    :  +- *(4) ColumnarToRow
                  :     :                    :     +- FileScan parquet default.catalog_sales[cs_sold_date_sk#197,cs_item_sk#212,cs_ext_discount_amt#219] Batched: true, DataFilters: [isnotnull(cs_item_sk#212), isnotnull(cs_ext_discount_amt#219), isnotnull(cs_sold_date_sk#197)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_item_sk), IsNotNull(cs_ext_discount_amt), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_item_sk:int,cs_ext_discount_amt:decimal(7,2)>
                  :     :                    +- BroadcastQueryStage 0
                  :     :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=77517]
                  :     :                          +- *(1) Project [i_item_sk#437]
                  :     :                             +- *(1) Filter ((isnotnull(i_manufact_id#450) AND (i_manufact_id#450 = 977)) AND isnotnull(i_item_sk#437))
                  :     :                                +- *(1) ColumnarToRow
                  :     :                                   +- FileScan parquet default.item[i_item_sk#437,i_manufact_id#450] Batched: true, DataFilters: [isnotnull(i_manufact_id#450), (i_manufact_id#450 = 977), isnotnull(i_item_sk#437)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_manufact_id), EqualTo(i_manufact_id,977), IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_manufact_id:int>
                  :     +- *(6) Filter isnotnull((1.3 * avg(cs_ext_discount_amt))#10377)
                  :        +- *(6) HashAggregate(keys=[cs_item_sk#10393], functions=[avg(UnscaledValue(cs_ext_discount_amt#10400))], output=[(1.3 * avg(cs_ext_discount_amt))#10377, cs_item_sk#10393])
                  :           +- ShuffleQueryStage 5
                  :              +- Exchange hashpartitioning(cs_item_sk#10393, 20), ENSURE_REQUIREMENTS, [plan_id=77827]
                  :                 +- *(5) HashAggregate(keys=[cs_item_sk#10393], functions=[partial_avg(UnscaledValue(cs_ext_discount_amt#10400))], output=[cs_item_sk#10393, sum#10446, count#10447L])
                  :                    +- *(5) Project [cs_item_sk#10393, cs_ext_discount_amt#10400]
                  :                       +- *(5) BroadcastHashJoin [cs_sold_date_sk#10378], [d_date_sk#10412], Inner, BuildRight, false
                  :                          :- *(5) Filter (isnotnull(cs_sold_date_sk#10378) AND isnotnull(cs_item_sk#10393))
                  :                          :  +- *(5) ColumnarToRow
                  :                          :     +- FileScan parquet default.catalog_sales[cs_sold_date_sk#10378,cs_item_sk#10393,cs_ext_discount_amt#10400] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#10378), isnotnull(cs_item_sk#10393)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk), IsNotNull(cs_item_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_item_sk:int,cs_ext_discount_amt:decimal(7,2)>
                  :                          +- BroadcastQueryStage 1
                  :                             +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=77540]
                  :                                +- *(2) Project [d_date_sk#10412]
                  :                                   +- *(2) Filter (((isnotnull(d_date#10414) AND (d_date#10414 >= 2000-01-27)) AND (d_date#10414 <= 2000-04-26)) AND isnotnull(d_date_sk#10412))
                  :                                      +- *(2) ColumnarToRow
                  :                                         +- FileScan parquet default.date_dim[d_date_sk#10412,d_date#10414] Batched: true, DataFilters: [isnotnull(d_date#10414), (d_date#10414 >= 2000-01-27), (d_date#10414 <= 2000-04-26), isnotnull(d..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2000-01-27), LessThanOrEqual(d_date,2000-04-26), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>
                  +- BroadcastQueryStage 3
                     +- ReusedExchange [d_date_sk#24], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=77540]

==== q33 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[total_sales#10464 ASC NULLS FIRST], output=[i_manufact_id#450,total_sales#10464])
   +- *(20) HashAggregate(keys=[i_manufact_id#450], functions=[sum(total_sales#10465)], output=[i_manufact_id#450, total_sales#10464])
      +- ShuffleQueryStage 23
         +- Exchange hashpartitioning(i_manufact_id#450, 20), ENSURE_REQUIREMENTS, [plan_id=79861]
            +- *(19) HashAggregate(keys=[i_manufact_id#450], functions=[partial_sum(total_sales#10465)], output=[i_manufact_id#450, sum#10677, isEmpty#10678])
               +- Union
                  :- *(16) HashAggregate(keys=[i_manufact_id#450], functions=[sum(UnscaledValue(ss_ext_sales_price#429))], output=[i_manufact_id#450, total_sales#10465])
                  :  +- ShuffleQueryStage 20
                  :     +- Exchange hashpartitioning(i_manufact_id#450, 20), ENSURE_REQUIREMENTS, [plan_id=79649]
                  :        +- *(13) HashAggregate(keys=[i_manufact_id#450], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#429))], output=[i_manufact_id#450, sum#10680L])
                  :           +- *(13) Project [ss_ext_sales_price#429, i_manufact_id#450]
                  :              +- *(13) BroadcastHashJoin [ss_item_sk#416], [i_item_sk#437], Inner, BuildRight, false
                  :                 :- *(13) Project [ss_item_sk#416, ss_ext_sales_price#429]
                  :                 :  +- *(13) BroadcastHashJoin [ss_addr_sk#420], [ca_address_sk#3717], Inner, BuildRight, false
                  :                 :     :- *(13) Project [ss_item_sk#416, ss_addr_sk#420, ss_ext_sales_price#429]
                  :                 :     :  +- *(13) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#24], Inner, BuildRight, false
                  :                 :     :     :- *(13) Filter ((isnotnull(ss_sold_date_sk#414) AND isnotnull(ss_addr_sk#420)) AND isnotnull(ss_item_sk#416))
                  :                 :     :     :  +- *(13) ColumnarToRow
                  :                 :     :     :     +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_item_sk#416,ss_addr_sk#420,ss_ext_sales_price#429] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#414), isnotnull(ss_addr_sk#420), isnotnull(ss_item_sk#416)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_addr_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>
                  :                 :     :     +- BroadcastQueryStage 0
                  :                 :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=78493]
                  :                 :     :           +- *(1) Project [d_date_sk#24]
                  :                 :     :              +- *(1) Filter ((((isnotnull(d_year#30) AND isnotnull(d_moy#32)) AND (d_year#30 = 1998)) AND (d_moy#32 = 5)) AND isnotnull(d_date_sk#24))
                  :                 :     :                 +- *(1) ColumnarToRow
                  :                 :     :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30,d_moy#32] Batched: true, DataFilters: [isnotnull(d_year#30), isnotnull(d_moy#32), (d_year#30 = 1998), (d_moy#32 = 5), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1998), EqualTo(d_moy,5), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                  :                 :     +- BroadcastQueryStage 1
                  :                 :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=78514]
                  :                 :           +- *(2) Project [ca_address_sk#3717]
                  :                 :              +- *(2) Filter ((isnotnull(ca_gmt_offset#3728) AND (ca_gmt_offset#3728 = -5.00)) AND isnotnull(ca_address_sk#3717))
                  :                 :                 +- *(2) ColumnarToRow
                  :                 :                    +- FileScan parquet default.customer_address[ca_address_sk#3717,ca_gmt_offset#3728] Batched: true, DataFilters: [isnotnull(ca_gmt_offset#3728), (ca_gmt_offset#3728 = -5.00), isnotnull(ca_address_sk#3717)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_gmt_offset), EqualTo(ca_gmt_offset,-5.00), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>
                  :                 +- BroadcastQueryStage 15
                  :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=79362]
                  :                       +- *(10) BroadcastHashJoin [i_manufact_id#450], [i_manufact_id#10610], LeftSemi, BuildRight, false
                  :                          :- *(10) Filter isnotnull(i_item_sk#437)
                  :                          :  +- *(10) ColumnarToRow
                  :                          :     +- FileScan parquet default.item[i_item_sk#437,i_manufact_id#450] Batched: true, DataFilters: [isnotnull(i_item_sk#437)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_manufact_id:int>
                  :                          +- BroadcastQueryStage 2
                  :                             +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=78535]
                  :                                +- *(3) Project [i_manufact_id#10610]
                  :                                   +- *(3) Filter (isnotnull(i_category#10609) AND (i_category#10609 = Electronics                                       ))
                  :                                      +- *(3) ColumnarToRow
                  :                                         +- FileScan parquet default.item[i_category#10609,i_manufact_id#10610] Batched: true, DataFilters: [isnotnull(i_category#10609), (i_category#10609 = Electronics                                    ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Electronics                                       )], ReadSchema: struct<i_category:string,i_manufact_id:int>
                  :- *(17) HashAggregate(keys=[i_manufact_id#10525], functions=[sum(UnscaledValue(cs_ext_sales_price#220))], output=[i_manufact_id#10525, total_sales#10467])
                  :  +- ShuffleQueryStage 21
                  :     +- Exchange hashpartitioning(i_manufact_id#10525, 20), ENSURE_REQUIREMENTS, [plan_id=79700]
                  :        +- *(14) HashAggregate(keys=[i_manufact_id#10525], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#220))], output=[i_manufact_id#10525, sum#10682L])
                  :           +- *(14) Project [cs_ext_sales_price#220, i_manufact_id#10525]
                  :              +- *(14) BroadcastHashJoin [cs_item_sk#212], [i_item_sk#10512], Inner, BuildRight, false
                  :                 :- *(14) Project [cs_item_sk#212, cs_ext_sales_price#220]
                  :                 :  +- *(14) BroadcastHashJoin [cs_bill_addr_sk#203], [ca_address_sk#10499], Inner, BuildRight, false
                  :                 :     :- *(14) Project [cs_bill_addr_sk#203, cs_item_sk#212, cs_ext_sales_price#220]
                  :                 :     :  +- *(14) BroadcastHashJoin [cs_sold_date_sk#197], [d_date_sk#10471], Inner, BuildRight, false
                  :                 :     :     :- *(14) Filter ((isnotnull(cs_sold_date_sk#197) AND isnotnull(cs_bill_addr_sk#203)) AND isnotnull(cs_item_sk#212))
                  :                 :     :     :  +- *(14) ColumnarToRow
                  :                 :     :     :     +- FileScan parquet default.catalog_sales[cs_sold_date_sk#197,cs_bill_addr_sk#203,cs_item_sk#212,cs_ext_sales_price#220] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#197), isnotnull(cs_bill_addr_sk#203), isnotnull(cs_item_sk#212)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk), IsNotNull(cs_bill_addr_sk), IsNotNull(cs_item_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_bill_addr_sk:int,cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>
                  :                 :     :     +- BroadcastQueryStage 4
                  :                 :     :        +- ReusedExchange [d_date_sk#10471], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=78493]
                  :                 :     +- BroadcastQueryStage 6
                  :                 :        +- ReusedExchange [ca_address_sk#10499], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=78514]
                  :                 +- BroadcastQueryStage 17
                  :                    +- ReusedExchange [i_item_sk#10512, i_manufact_id#10525], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=79362]
                  +- *(18) HashAggregate(keys=[i_manufact_id#10588], functions=[sum(UnscaledValue(ws_ext_sales_price#186))], output=[i_manufact_id#10588, total_sales#10469])
                     +- ShuffleQueryStage 22
                        +- Exchange hashpartitioning(i_manufact_id#10588, 20), ENSURE_REQUIREMENTS, [plan_id=79751]
                           +- *(15) HashAggregate(keys=[i_manufact_id#10588], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#186))], output=[i_manufact_id#10588, sum#10684L])
                              +- *(15) Project [ws_ext_sales_price#186, i_manufact_id#10588]
                                 +- *(15) BroadcastHashJoin [ws_item_sk#166], [i_item_sk#10575], Inner, BuildRight, false
                                    :- *(15) Project [ws_item_sk#166, ws_ext_sales_price#186]
                                    :  +- *(15) BroadcastHashJoin [ws_bill_addr_sk#170], [ca_address_sk#10562], Inner, BuildRight, false
                                    :     :- *(15) Project [ws_item_sk#166, ws_bill_addr_sk#170, ws_ext_sales_price#186]
                                    :     :  +- *(15) BroadcastHashJoin [ws_sold_date_sk#163], [d_date_sk#10534], Inner, BuildRight, false
                                    :     :     :- *(15) Filter ((isnotnull(ws_sold_date_sk#163) AND isnotnull(ws_bill_addr_sk#170)) AND isnotnull(ws_item_sk#166))
                                    :     :     :  +- *(15) ColumnarToRow
                                    :     :     :     +- FileScan parquet default.web_sales[ws_sold_date_sk#163,ws_item_sk#166,ws_bill_addr_sk#170,ws_ext_sales_price#186] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#163), isnotnull(ws_bill_addr_sk#170), isnotnull(ws_item_sk#166)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_bill_addr_sk), IsNotNull(ws_item_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>
                                    :     :     +- BroadcastQueryStage 10
                                    :     :        +- ReusedExchange [d_date_sk#10534], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=78493]
                                    :     +- BroadcastQueryStage 12
                                    :        +- ReusedExchange [ca_address_sk#10562], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=78514]
                                    +- BroadcastQueryStage 19
                                       +- ReusedExchange [i_item_sk#10575, i_manufact_id#10588], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=79362]


==== q36 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[lochierarchy#10714 DESC NULLS LAST,CASE WHEN (lochierarchy#10714 = 0) THEN i_category#10725 END ASC NULLS FIRST,rank_within_parent#10715 ASC NULLS FIRST], output=[gross_margin#10713,i_category#10725,i_class#10726,lochierarchy#10714,rank_within_parent#10715])
   +- *(7) Project [gross_margin#10713, i_category#10725, i_class#10726, lochierarchy#10714, rank_within_parent#10715]
      +- Window [rank(_w3#10741) windowspecdefinition(_w1#10739, _w2#10740, _w3#10741 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rank_within_parent#10715], [_w1#10739, _w2#10740], [_w3#10741 ASC NULLS FIRST]
         +- *(6) Sort [_w1#10739 ASC NULLS FIRST, _w2#10740 ASC NULLS FIRST, _w3#10741 ASC NULLS FIRST], false, 0
            +- ShuffleQueryStage 4
               +- Exchange hashpartitioning(_w1#10739, _w2#10740, 20), ENSURE_REQUIREMENTS, [plan_id=80407]
                  +- *(5) HashAggregate(keys=[i_category#10725, i_class#10726, spark_grouping_id#10724L], functions=[sum(UnscaledValue(ss_net_profit#436)), sum(UnscaledValue(ss_ext_sales_price#429))], output=[gross_margin#10713, i_category#10725, i_class#10726, lochierarchy#10714, _w1#10739, _w2#10740, _w3#10741])
                     +- ShuffleQueryStage 3
                        +- Exchange hashpartitioning(i_category#10725, i_class#10726, spark_grouping_id#10724L, 20), ENSURE_REQUIREMENTS, [plan_id=80352]
                           +- *(4) HashAggregate(keys=[i_category#10725, i_class#10726, spark_grouping_id#10724L], functions=[partial_sum(UnscaledValue(ss_net_profit#436)), partial_sum(UnscaledValue(ss_ext_sales_price#429))], output=[i_category#10725, i_class#10726, spark_grouping_id#10724L, sum#10755L, sum#10756L])
                              +- *(4) Expand [[ss_ext_sales_price#429, ss_net_profit#436, i_category#449, i_class#447, 0], [ss_ext_sales_price#429, ss_net_profit#436, i_category#449, null, 1], [ss_ext_sales_price#429, ss_net_profit#436, null, null, 3]], [ss_ext_sales_price#429, ss_net_profit#436, i_category#10725, i_class#10726, spark_grouping_id#10724L]
                                 +- *(4) Project [ss_ext_sales_price#429, ss_net_profit#436, i_category#449, i_class#447]
                                    +- *(4) BroadcastHashJoin [ss_store_sk#421], [s_store_sk#52], Inner, BuildRight, false
                                       :- *(4) Project [ss_store_sk#421, ss_ext_sales_price#429, ss_net_profit#436, i_class#447, i_category#449]
                                       :  +- *(4) BroadcastHashJoin [ss_item_sk#416], [i_item_sk#437], Inner, BuildRight, false
                                       :     :- *(4) Project [ss_item_sk#416, ss_store_sk#421, ss_ext_sales_price#429, ss_net_profit#436]
                                       :     :  +- *(4) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#24], Inner, BuildRight, false
                                       :     :     :- *(4) Filter ((isnotnull(ss_sold_date_sk#414) AND isnotnull(ss_item_sk#416)) AND isnotnull(ss_store_sk#421))
                                       :     :     :  +- *(4) ColumnarToRow
                                       :     :     :     +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_item_sk#416,ss_store_sk#421,ss_ext_sales_price#429,ss_net_profit#436] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#414), isnotnull(ss_item_sk#416), isnotnull(ss_store_sk#421)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_item_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_ext_sales_price:decimal(7,2),ss_net_...
                                       :     :     +- BroadcastQueryStage 0
                                       :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=80053]
                                       :     :           +- *(1) Project [d_date_sk#24]
                                       :     :              +- *(1) Filter ((isnotnull(d_year#30) AND (d_year#30 = 2001)) AND isnotnull(d_date_sk#24))
                                       :     :                 +- *(1) ColumnarToRow
                                       :     :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30] Batched: true, DataFilters: [isnotnull(d_year#30), (d_year#30 = 2001), isnotnull(d_date_sk#24)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                                       :     +- BroadcastQueryStage 1
                                       :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=80072]
                                       :           +- *(2) Filter isnotnull(i_item_sk#437)
                                       :              +- *(2) ColumnarToRow
                                       :                 +- FileScan parquet default.item[i_item_sk#437,i_class#447,i_category#449] Batched: true, DataFilters: [isnotnull(i_item_sk#437)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_class:string,i_category:string>
                                       +- BroadcastQueryStage 2
                                          +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=80091]
                                             +- *(3) Project [s_store_sk#52]
                                                +- *(3) Filter ((isnotnull(s_state#76) AND (s_state#76 = TN)) AND isnotnull(s_store_sk#52))
                                                   +- *(3) ColumnarToRow
                                                      +- FileScan parquet default.store[s_store_sk#52,s_state#76] Batched: true, DataFilters: [isnotnull(s_state#76), (s_state#76 = TN), isnotnull(s_store_sk#52)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_state), EqualTo(s_state,TN), IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_state:string>

==== q37 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[i_item_id#438 ASC NULLS FIRST], output=[i_item_id#438,i_item_desc#441,i_current_price#442])
   +- *(5) HashAggregate(keys=[i_item_id#438, i_item_desc#441, i_current_price#442], functions=[], output=[i_item_id#438, i_item_desc#441, i_current_price#442])
      +- ShuffleQueryStage 3
         +- Exchange hashpartitioning(i_item_id#438, i_item_desc#441, i_current_price#442, 20), ENSURE_REQUIREMENTS, [plan_id=80783]
            +- *(4) HashAggregate(keys=[i_item_id#438, i_item_desc#441, i_current_price#442], functions=[], output=[i_item_id#438, i_item_desc#441, i_current_price#442])
               +- *(4) Project [i_item_id#438, i_item_desc#441, i_current_price#442]
                  +- *(4) BroadcastHashJoin [i_item_sk#437], [cs_item_sk#212], Inner, BuildRight, false
                     :- *(4) Project [i_item_sk#437, i_item_id#438, i_item_desc#441, i_current_price#442]
                     :  +- *(4) BroadcastHashJoin [inv_date_sk#7972], [d_date_sk#24], Inner, BuildRight, false
                     :     :- *(4) Project [i_item_sk#437, i_item_id#438, i_item_desc#441, i_current_price#442, inv_date_sk#7972]
                     :     :  +- *(4) BroadcastHashJoin [i_item_sk#437], [inv_item_sk#7973], Inner, BuildLeft, false
                     :     :     :- BroadcastQueryStage 0
                     :     :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=80573]
                     :     :     :     +- *(1) Project [i_item_sk#437, i_item_id#438, i_item_desc#441, i_current_price#442]
                     :     :     :        +- *(1) Filter ((((isnotnull(i_current_price#442) AND (i_current_price#442 >= 68.00)) AND (i_current_price#442 <= 98.00)) AND i_manufact_id#450 IN (677,940,694,808)) AND isnotnull(i_item_sk#437))
                     :     :     :           +- *(1) ColumnarToRow
                     :     :     :              +- FileScan parquet default.item[i_item_sk#437,i_item_id#438,i_item_desc#441,i_current_price#442,i_manufact_id#450] Batched: true, DataFilters: [isnotnull(i_current_price#442), (i_current_price#442 >= 68.00), (i_current_price#442 <= 98.00), ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_current_price), GreaterThanOrEqual(i_current_price,68.00), LessThanOrEqual(i_current..., ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string,i_current_price:decimal(7,2),i_manufact_...
                     :     :     +- *(4) Project [inv_date_sk#7972, inv_item_sk#7973]
                     :     :        +- *(4) Filter ((((isnotnull(inv_quantity_on_hand#7975) AND (inv_quantity_on_hand#7975 >= 100)) AND (inv_quantity_on_hand#7975 <= 500)) AND isnotnull(inv_item_sk#7973)) AND isnotnull(inv_date_sk#7972))
                     :     :           +- *(4) ColumnarToRow
                     :     :              +- FileScan parquet default.inventory[inv_date_sk#7972,inv_item_sk#7973,inv_quantity_on_hand#7975] Batched: true, DataFilters: [isnotnull(inv_quantity_on_hand#7975), (inv_quantity_on_hand#7975 >= 100), (inv_quantity_on_hand#..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/inventory], PartitionFilters: [], PushedFilters: [IsNotNull(inv_quantity_on_hand), GreaterThanOrEqual(inv_quantity_on_hand,100), LessThanOrEqual(i..., ReadSchema: struct<inv_date_sk:int,inv_item_sk:int,inv_quantity_on_hand:int>
                     :     +- BroadcastQueryStage 1
                     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=80594]
                     :           +- *(2) Project [d_date_sk#24]
                     :              +- *(2) Filter (((isnotnull(d_date#26) AND (d_date#26 >= 2000-02-01)) AND (d_date#26 <= 2000-04-01)) AND isnotnull(d_date_sk#24))
                     :                 +- *(2) ColumnarToRow
                     :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_date#26] Batched: true, DataFilters: [isnotnull(d_date#26), (d_date#26 >= 2000-02-01), (d_date#26 <= 2000-04-01), isnotnull(d_date_sk#..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2000-02-01), LessThanOrEqual(d_date,2000-04-01), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>
                     +- BroadcastQueryStage 2
                        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=80613]
                           +- *(3) Filter isnotnull(cs_item_sk#212)
                              +- *(3) ColumnarToRow
                                 +- FileScan parquet default.catalog_sales[cs_item_sk#212] Batched: true, DataFilters: [isnotnull(cs_item_sk#212)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_item_sk)], ReadSchema: struct<cs_item_sk:int>


==== q38 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   *(14) HashAggregate(keys=[], functions=[count(1)], output=[count(1)#10863L])
   +- ShuffleQueryStage 16
      +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=82210]
         +- *(13) HashAggregate(keys=[], functions=[partial_count(1)], output=[count#10870L])
            +- *(13) Project
               +- *(13) BroadcastHashJoin [coalesce(c_last_name#90, ), isnull(c_last_name#90), coalesce(c_first_name#89, ), isnull(c_first_name#89), coalesce(d_date#26, 1970-01-01), isnull(d_date#26)], [coalesce(c_last_name#10854, ), isnull(c_last_name#10854), coalesce(c_first_name#10853, ), isnull(c_first_name#10853), coalesce(d_date#10819, 1970-01-01), isnull(d_date#10819)], LeftSemi, BuildRight, false
                  :- *(13) BroadcastHashJoin [coalesce(c_last_name#90, ), isnull(c_last_name#90), coalesce(c_first_name#89, ), isnull(c_first_name#89), coalesce(d_date#26, 1970-01-01), isnull(d_date#26)], [coalesce(c_last_name#10808, ), isnull(c_last_name#10808), coalesce(c_first_name#10807, ), isnull(c_first_name#10807), coalesce(d_date#10773, 1970-01-01), isnull(d_date#10773)], LeftSemi, BuildRight, false
                  :  :- AQEShuffleRead local
                  :  :  +- ShuffleQueryStage 13
                  :  :     +- Exchange hashpartitioning(coalesce(c_last_name#90, ), isnull(c_last_name#90), coalesce(c_first_name#89, ), isnull(c_first_name#89), coalesce(d_date#26, 1970-01-01), isnull(d_date#26), 20), ENSURE_REQUIREMENTS, [plan_id=81972]
                  :  :        +- *(10) HashAggregate(keys=[c_last_name#90, c_first_name#89, d_date#26], functions=[], output=[c_last_name#90, c_first_name#89, d_date#26])
                  :  :           +- ShuffleQueryStage 10
                  :  :              +- Exchange hashpartitioning(c_last_name#90, c_first_name#89, d_date#26, 20), ENSURE_REQUIREMENTS, [plan_id=81792]
                  :  :                 +- *(7) HashAggregate(keys=[c_last_name#90, c_first_name#89, d_date#26], functions=[], output=[c_last_name#90, c_first_name#89, d_date#26])
                  :  :                    +- *(7) Project [c_last_name#90, c_first_name#89, d_date#26]
                  :  :                       +- *(7) BroadcastHashJoin [ss_customer_sk#417], [c_customer_sk#81], Inner, BuildRight, false
                  :  :                          :- *(7) Project [ss_customer_sk#417, d_date#26]
                  :  :                          :  +- *(7) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#24], Inner, BuildRight, false
                  :  :                          :     :- *(7) Filter (isnotnull(ss_sold_date_sk#414) AND isnotnull(ss_customer_sk#417))
                  :  :                          :     :  +- *(7) ColumnarToRow
                  :  :                          :     :     +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_customer_sk#417] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#414), isnotnull(ss_customer_sk#417)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int>
                  :  :                          :     +- BroadcastQueryStage 0
                  :  :                          :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=81166]
                  :  :                          :           +- *(1) Project [d_date_sk#24, d_date#26]
                  :  :                          :              +- *(1) Filter (((isnotnull(d_month_seq#27) AND (d_month_seq#27 >= 1200)) AND (d_month_seq#27 <= 1211)) AND isnotnull(d_date_sk#24))
                  :  :                          :                 +- *(1) ColumnarToRow
                  :  :                          :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_date#26,d_month_seq#27] Batched: true, DataFilters: [isnotnull(d_month_seq#27), (d_month_seq#27 >= 1200), (d_month_seq#27 <= 1211), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1200), LessThanOrEqual(d_month_seq,1211),..., ReadSchema: struct<d_date_sk:int,d_date:date,d_month_seq:int>
                  :  :                          +- BroadcastQueryStage 1
                  :  :                             +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=81185]
                  :  :                                +- *(2) Filter isnotnull(c_customer_sk#81)
                  :  :                                   +- *(2) ColumnarToRow
                  :  :                                      +- FileScan parquet default.customer[c_customer_sk#81,c_first_name#89,c_last_name#90] Batched: true, DataFilters: [isnotnull(c_customer_sk#81)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string>
                  :  +- BroadcastQueryStage 14
                  :     +- BroadcastExchange HashedRelationBroadcastMode(List(coalesce(input[0, string, true], ), isnull(input[0, string, true]), coalesce(input[1, string, true], ), isnull(input[1, string, true]), coalesce(input[2, date, true], 1970-01-01), isnull(input[2, date, true])),false), [plan_id=82037]
                  :        +- *(11) HashAggregate(keys=[c_last_name#10808, c_first_name#10807, d_date#10773], functions=[], output=[c_last_name#10808, c_first_name#10807, d_date#10773])
                  :           +- ShuffleQueryStage 11
                  :              +- Exchange hashpartitioning(c_last_name#10808, c_first_name#10807, d_date#10773, 20), ENSURE_REQUIREMENTS, [plan_id=81835]
                  :                 +- *(8) HashAggregate(keys=[c_last_name#10808, c_first_name#10807, d_date#10773], functions=[], output=[c_last_name#10808, c_first_name#10807, d_date#10773])
                  :                    +- *(8) Project [c_last_name#10808, c_first_name#10807, d_date#10773]
                  :                       +- *(8) BroadcastHashJoin [cs_bill_customer_sk#200], [c_customer_sk#10799], Inner, BuildRight, false
                  :                          :- *(8) Project [cs_bill_customer_sk#200, d_date#10773]
                  :                          :  +- *(8) BroadcastHashJoin [cs_sold_date_sk#197], [d_date_sk#10771], Inner, BuildRight, false
                  :                          :     :- *(8) Filter (isnotnull(cs_sold_date_sk#197) AND isnotnull(cs_bill_customer_sk#200))
                  :                          :     :  +- *(8) ColumnarToRow
                  :                          :     :     +- FileScan parquet default.catalog_sales[cs_sold_date_sk#197,cs_bill_customer_sk#200] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#197), isnotnull(cs_bill_customer_sk#200)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk), IsNotNull(cs_bill_customer_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_bill_customer_sk:int>
                  :                          :     +- BroadcastQueryStage 3
                  :                          :        +- ReusedExchange [d_date_sk#10771, d_date#10773], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=81166]
                  :                          +- BroadcastQueryStage 5
                  :                             +- ReusedExchange [c_customer_sk#10799, c_first_name#10807, c_last_name#10808], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=81185]
                  +- BroadcastQueryStage 15
                     +- BroadcastExchange HashedRelationBroadcastMode(List(coalesce(input[0, string, true], ), isnull(input[0, string, true]), coalesce(input[1, string, true], ), isnull(input[1, string, true]), coalesce(input[2, date, true], 1970-01-01), isnull(input[2, date, true])),false), [plan_id=82157]
                        +- *(12) HashAggregate(keys=[c_last_name#10854, c_first_name#10853, d_date#10819], functions=[], output=[c_last_name#10854, c_first_name#10853, d_date#10819])
                           +- ShuffleQueryStage 12
                              +- Exchange hashpartitioning(c_last_name#10854, c_first_name#10853, d_date#10819, 20), ENSURE_REQUIREMENTS, [plan_id=81879]
                                 +- *(9) HashAggregate(keys=[c_last_name#10854, c_first_name#10853, d_date#10819], functions=[], output=[c_last_name#10854, c_first_name#10853, d_date#10819])
                                    +- *(9) Project [c_last_name#10854, c_first_name#10853, d_date#10819]
                                       +- *(9) BroadcastHashJoin [ws_bill_customer_sk#167], [c_customer_sk#10845], Inner, BuildRight, false
                                          :- *(9) Project [ws_bill_customer_sk#167, d_date#10819]
                                          :  +- *(9) BroadcastHashJoin [ws_sold_date_sk#163], [d_date_sk#10817], Inner, BuildRight, false
                                          :     :- *(9) Filter (isnotnull(ws_sold_date_sk#163) AND isnotnull(ws_bill_customer_sk#167))
                                          :     :  +- *(9) ColumnarToRow
                                          :     :     +- FileScan parquet default.web_sales[ws_sold_date_sk#163,ws_bill_customer_sk#167] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#163), isnotnull(ws_bill_customer_sk#167)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_bill_customer_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_bill_customer_sk:int>
                                          :     +- BroadcastQueryStage 7
                                          :        +- ReusedExchange [d_date_sk#10817, d_date#10819], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=81166]
                                          +- BroadcastQueryStage 9
                                             +- ReusedExchange [c_customer_sk#10845, c_first_name#10853, c_last_name#10854], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=81185]


==== q39 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   *(11) Sort [w_warehouse_sk#7976 ASC NULLS FIRST, i_item_sk#437 ASC NULLS FIRST, d_moy#32 ASC NULLS FIRST, mean#10872 ASC NULLS FIRST, cov#10873 ASC NULLS FIRST, d_moy#11058 ASC NULLS FIRST, mean#10905 ASC NULLS FIRST, cov#10906 ASC NULLS FIRST], true, 0
   +- ShuffleQueryStage 11
      +- Exchange rangepartitioning(w_warehouse_sk#7976 ASC NULLS FIRST, i_item_sk#437 ASC NULLS FIRST, d_moy#32 ASC NULLS FIRST, mean#10872 ASC NULLS FIRST, cov#10873 ASC NULLS FIRST, d_moy#11058 ASC NULLS FIRST, mean#10905 ASC NULLS FIRST, cov#10906 ASC NULLS FIRST, 20), ENSURE_REQUIREMENTS, [plan_id=83412]
         +- *(10) BroadcastHashJoin [i_item_sk#437, w_warehouse_sk#7976], [i_item_sk#11014, w_warehouse_sk#11036], Inner, BuildLeft, false
            :- BroadcastQueryStage 10
            :  +- BroadcastExchange HashedRelationBroadcastMode(List((shiftleft(cast(input[1, int, true] as bigint), 32) | (cast(input[0, int, true] as bigint) & 4294967295))),false), [plan_id=83353]
            :     +- *(9) Project [w_warehouse_sk#7976, i_item_sk#437, d_moy#32, mean#10872, CASE WHEN (mean#10872 = 0.0) THEN null ELSE (stdev#10871 / mean#10872) END AS cov#10873]
            :        +- *(9) Filter CASE WHEN (mean#10872 = 0.0) THEN false ELSE ((stdev#10871 / mean#10872) > 1.0) END
            :           +- *(9) HashAggregate(keys=[w_warehouse_name#7978, w_warehouse_sk#7976, i_item_sk#437, d_moy#32], functions=[stddev_samp(cast(inv_quantity_on_hand#7975 as double)), avg(inv_quantity_on_hand#7975)], output=[w_warehouse_sk#7976, i_item_sk#437, d_moy#32, stdev#10871, mean#10872])
            :              +- ShuffleQueryStage 8
            :                 +- Exchange hashpartitioning(w_warehouse_name#7978, w_warehouse_sk#7976, i_item_sk#437, d_moy#32, 20), ENSURE_REQUIREMENTS, [plan_id=83122]
            :                    +- *(7) HashAggregate(keys=[w_warehouse_name#7978, w_warehouse_sk#7976, i_item_sk#437, d_moy#32], functions=[partial_stddev_samp(cast(inv_quantity_on_hand#7975 as double)), partial_avg(inv_quantity_on_hand#7975)], output=[w_warehouse_name#7978, w_warehouse_sk#7976, i_item_sk#437, d_moy#32, n#10897, avg#10898, m2#10899, sum#11097, count#11098L])
            :                       +- *(7) Project [inv_quantity_on_hand#7975, i_item_sk#437, w_warehouse_sk#7976, w_warehouse_name#7978, d_moy#32]
            :                          +- *(7) BroadcastHashJoin [inv_date_sk#7972], [d_date_sk#24], Inner, BuildRight, false
            :                             :- *(7) Project [inv_date_sk#7972, inv_quantity_on_hand#7975, i_item_sk#437, w_warehouse_sk#7976, w_warehouse_name#7978]
            :                             :  +- *(7) BroadcastHashJoin [inv_warehouse_sk#7974], [w_warehouse_sk#7976], Inner, BuildRight, false
            :                             :     :- *(7) Project [inv_date_sk#7972, inv_warehouse_sk#7974, inv_quantity_on_hand#7975, i_item_sk#437]
            :                             :     :  +- *(7) BroadcastHashJoin [inv_item_sk#7973], [i_item_sk#437], Inner, BuildRight, false
            :                             :     :     :- *(7) Filter ((isnotnull(inv_item_sk#7973) AND isnotnull(inv_warehouse_sk#7974)) AND isnotnull(inv_date_sk#7972))
            :                             :     :     :  +- *(7) ColumnarToRow
            :                             :     :     :     +- FileScan parquet default.inventory[inv_date_sk#7972,inv_item_sk#7973,inv_warehouse_sk#7974,inv_quantity_on_hand#7975] Batched: true, DataFilters: [isnotnull(inv_item_sk#7973), isnotnull(inv_warehouse_sk#7974), isnotnull(inv_date_sk#7972)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/inventory], PartitionFilters: [], PushedFilters: [IsNotNull(inv_item_sk), IsNotNull(inv_warehouse_sk), IsNotNull(inv_date_sk)], ReadSchema: struct<inv_date_sk:int,inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>
            :                             :     :     +- BroadcastQueryStage 0
            :                             :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=82543]
            :                             :     :           +- *(1) Filter isnotnull(i_item_sk#437)
            :                             :     :              +- *(1) ColumnarToRow
            :                             :     :                 +- FileScan parquet default.item[i_item_sk#437] Batched: true, DataFilters: [isnotnull(i_item_sk#437)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int>
            :                             :     +- BroadcastQueryStage 1
            :                             :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=82560]
            :                             :           +- *(2) Filter isnotnull(w_warehouse_sk#7976)
            :                             :              +- *(2) ColumnarToRow
            :                             :                 +- FileScan parquet default.warehouse[w_warehouse_sk#7976,w_warehouse_name#7978] Batched: true, DataFilters: [isnotnull(w_warehouse_sk#7976)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/warehouse], PartitionFilters: [], PushedFilters: [IsNotNull(w_warehouse_sk)], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string>
            :                             +- BroadcastQueryStage 2
            :                                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=82579]
            :                                   +- *(3) Project [d_date_sk#24, d_moy#32]
            :                                      +- *(3) Filter ((((isnotnull(d_year#30) AND isnotnull(d_moy#32)) AND (d_year#30 = 2001)) AND (d_moy#32 = 1)) AND isnotnull(d_date_sk#24))
            :                                         +- *(3) ColumnarToRow
            :                                            +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30,d_moy#32] Batched: true, DataFilters: [isnotnull(d_year#30), isnotnull(d_moy#32), (d_year#30 = 2001), (d_moy#32 = 1), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2001), EqualTo(d_moy,1), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
            +- *(10) Project [w_warehouse_sk#11036, i_item_sk#11014, d_moy#11058, mean#10872 AS mean#10905, CASE WHEN (mean#10872 = 0.0) THEN null ELSE (stdev#10871 / mean#10872) END AS cov#10906]
               +- *(10) Filter CASE WHEN (mean#10872 = 0.0) THEN false ELSE ((stdev#10871 / mean#10872) > 1.0) END
                  +- *(10) HashAggregate(keys=[w_warehouse_name#11038, w_warehouse_sk#11036, i_item_sk#11014, d_moy#11058], functions=[stddev_samp(cast(inv_quantity_on_hand#11013 as double)), avg(inv_quantity_on_hand#11013)], output=[w_warehouse_sk#11036, i_item_sk#11014, d_moy#11058, stdev#10871, mean#10872])
                     +- ShuffleQueryStage 9
                        +- Exchange hashpartitioning(w_warehouse_name#11038, w_warehouse_sk#11036, i_item_sk#11014, d_moy#11058, 20), ENSURE_REQUIREMENTS, [plan_id=83273]
                           +- *(8) HashAggregate(keys=[w_warehouse_name#11038, w_warehouse_sk#11036, i_item_sk#11014, d_moy#11058], functions=[partial_stddev_samp(cast(inv_quantity_on_hand#11013 as double)), partial_avg(inv_quantity_on_hand#11013)], output=[w_warehouse_name#11038, w_warehouse_sk#11036, i_item_sk#11014, d_moy#11058, n#11083, avg#11084, m2#11085, sum#11101, count#11102L])
                              +- *(8) Project [inv_quantity_on_hand#11013, i_item_sk#11014, w_warehouse_sk#11036, w_warehouse_name#11038, d_moy#11058]
                                 +- *(8) BroadcastHashJoin [inv_date_sk#11010], [d_date_sk#11050], Inner, BuildRight, false
                                    :- *(8) Project [inv_date_sk#11010, inv_quantity_on_hand#11013, i_item_sk#11014, w_warehouse_sk#11036, w_warehouse_name#11038]
                                    :  +- *(8) BroadcastHashJoin [inv_warehouse_sk#11012], [w_warehouse_sk#11036], Inner, BuildRight, false
                                    :     :- *(8) Project [inv_date_sk#11010, inv_warehouse_sk#11012, inv_quantity_on_hand#11013, i_item_sk#11014]
                                    :     :  +- *(8) BroadcastHashJoin [inv_item_sk#11011], [i_item_sk#11014], Inner, BuildRight, false
                                    :     :     :- *(8) Filter ((isnotnull(inv_item_sk#11011) AND isnotnull(inv_warehouse_sk#11012)) AND isnotnull(inv_date_sk#11010))
                                    :     :     :  +- *(8) ColumnarToRow
                                    :     :     :     +- FileScan parquet default.inventory[inv_date_sk#11010,inv_item_sk#11011,inv_warehouse_sk#11012,inv_quantity_on_hand#11013] Batched: true, DataFilters: [isnotnull(inv_item_sk#11011), isnotnull(inv_warehouse_sk#11012), isnotnull(inv_date_sk#11010)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/inventory], PartitionFilters: [], PushedFilters: [IsNotNull(inv_item_sk), IsNotNull(inv_warehouse_sk), IsNotNull(inv_date_sk)], ReadSchema: struct<inv_date_sk:int,inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>
                                    :     :     +- BroadcastQueryStage 4
                                    :     :        +- ReusedExchange [i_item_sk#11014], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=82543]
                                    :     +- BroadcastQueryStage 6
                                    :        +- ReusedExchange [w_warehouse_sk#11036, w_warehouse_name#11038], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=82560]
                                    +- BroadcastQueryStage 7
                                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=82645]
                                          +- *(6) Project [d_date_sk#11050, d_moy#11058]
                                             +- *(6) Filter ((((isnotnull(d_year#11056) AND isnotnull(d_moy#11058)) AND (d_year#11056 = 2001)) AND (d_moy#11058 = 2)) AND isnotnull(d_date_sk#11050))
                                                +- *(6) ColumnarToRow
                                                   +- FileScan parquet default.date_dim[d_date_sk#11050,d_year#11056,d_moy#11058] Batched: true, DataFilters: [isnotnull(d_year#11056), isnotnull(d_moy#11058), (d_year#11056 = 2001), (d_moy#11058 = 2), isnot..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2001), EqualTo(d_moy,2), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>

==== q40 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[w_state#7986 ASC NULLS FIRST,i_item_id#438 ASC NULLS FIRST], output=[w_state#7986,i_item_id#438,sales_before#11631,sales_after#11632])
   +- *(6) HashAggregate(keys=[w_state#7986, i_item_id#438], functions=[sum(CASE WHEN (d_date#26 < 2000-03-11) THEN CheckOverflow((promote_precision(cast(cs_sales_price#218 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_refunded_cash#3314 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2)) ELSE 0.00 END), sum(CASE WHEN (d_date#26 >= 2000-03-11) THEN CheckOverflow((promote_precision(cast(cs_sales_price#218 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_refunded_cash#3314 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2)) ELSE 0.00 END)], output=[w_state#7986, i_item_id#438, sales_before#11631, sales_after#11632])
      +- ShuffleQueryStage 4
         +- Exchange hashpartitioning(w_state#7986, i_item_id#438, 20), ENSURE_REQUIREMENTS, [plan_id=85147]
            +- *(5) HashAggregate(keys=[w_state#7986, i_item_id#438], functions=[partial_sum(CASE WHEN (d_date#26 < 2000-03-11) THEN CheckOverflow((promote_precision(cast(cs_sales_price#218 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_refunded_cash#3314 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_date#26 >= 2000-03-11) THEN CheckOverflow((promote_precision(cast(cs_sales_price#218 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_refunded_cash#3314 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2)) ELSE 0.00 END)], output=[w_state#7986, i_item_id#438, sum#11643, isEmpty#11644, sum#11645, isEmpty#11646])
               +- *(5) Project [cs_sales_price#218, cr_refunded_cash#3314, w_state#7986, i_item_id#438, d_date#26]
                  +- *(5) BroadcastHashJoin [cs_sold_date_sk#197], [d_date_sk#24], Inner, BuildRight, false
                     :- *(5) Project [cs_sold_date_sk#197, cs_sales_price#218, cr_refunded_cash#3314, w_state#7986, i_item_id#438]
                     :  +- *(5) BroadcastHashJoin [cs_item_sk#212], [i_item_sk#437], Inner, BuildRight, false
                     :     :- *(5) Project [cs_sold_date_sk#197, cs_item_sk#212, cs_sales_price#218, cr_refunded_cash#3314, w_state#7986]
                     :     :  +- *(5) BroadcastHashJoin [cs_warehouse_sk#211], [w_warehouse_sk#7976], Inner, BuildRight, false
                     :     :     :- *(5) Project [cs_sold_date_sk#197, cs_warehouse_sk#211, cs_item_sk#212, cs_sales_price#218, cr_refunded_cash#3314]
                     :     :     :  +- *(5) BroadcastHashJoin [cs_order_number#214, cs_item_sk#212], [cr_order_number#3307, cr_item_sk#3293], LeftOuter, BuildRight, false
                     :     :     :     :- *(5) Filter ((isnotnull(cs_warehouse_sk#211) AND isnotnull(cs_item_sk#212)) AND isnotnull(cs_sold_date_sk#197))
                     :     :     :     :  +- *(5) ColumnarToRow
                     :     :     :     :     +- FileScan parquet default.catalog_sales[cs_sold_date_sk#197,cs_warehouse_sk#211,cs_item_sk#212,cs_order_number#214,cs_sales_price#218] Batched: true, DataFilters: [isnotnull(cs_warehouse_sk#211), isnotnull(cs_item_sk#212), isnotnull(cs_sold_date_sk#197)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_warehouse_sk), IsNotNull(cs_item_sk), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_warehouse_sk:int,cs_item_sk:int,cs_order_number:int,cs_sales_price:...
                     :     :     :     +- BroadcastQueryStage 0
                     :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List((shiftleft(cast(input[1, int, false] as bigint), 32) | (cast(input[0, int, false] as bigint) & 4294967295))),false), [plan_id=84801]
                     :     :     :           +- *(1) Filter (isnotnull(cr_order_number#3307) AND isnotnull(cr_item_sk#3293))
                     :     :     :              +- *(1) ColumnarToRow
                     :     :     :                 +- FileScan parquet default.catalog_returns[cr_item_sk#3293,cr_order_number#3307,cr_refunded_cash#3314] Batched: true, DataFilters: [isnotnull(cr_order_number#3307), isnotnull(cr_item_sk#3293)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_returns], PartitionFilters: [], PushedFilters: [IsNotNull(cr_order_number), IsNotNull(cr_item_sk)], ReadSchema: struct<cr_item_sk:int,cr_order_number:int,cr_refunded_cash:decimal(7,2)>
                     :     :     +- BroadcastQueryStage 1
                     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=84818]
                     :     :           +- *(2) Filter isnotnull(w_warehouse_sk#7976)
                     :     :              +- *(2) ColumnarToRow
                     :     :                 +- FileScan parquet default.warehouse[w_warehouse_sk#7976,w_state#7986] Batched: true, DataFilters: [isnotnull(w_warehouse_sk#7976)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/warehouse], PartitionFilters: [], PushedFilters: [IsNotNull(w_warehouse_sk)], ReadSchema: struct<w_warehouse_sk:int,w_state:string>
                     :     +- BroadcastQueryStage 2
                     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=84837]
                     :           +- *(3) Project [i_item_sk#437, i_item_id#438]
                     :              +- *(3) Filter (((isnotnull(i_current_price#442) AND (i_current_price#442 >= 0.99)) AND (i_current_price#442 <= 1.49)) AND isnotnull(i_item_sk#437))
                     :                 +- *(3) ColumnarToRow
                     :                    +- FileScan parquet default.item[i_item_sk#437,i_item_id#438,i_current_price#442] Batched: true, DataFilters: [isnotnull(i_current_price#442), (i_current_price#442 >= 0.99), (i_current_price#442 <= 1.49), is..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_current_price), GreaterThanOrEqual(i_current_price,0.99), LessThanOrEqual(i_current_..., ReadSchema: struct<i_item_sk:int,i_item_id:string,i_current_price:decimal(7,2)>
                     +- BroadcastQueryStage 3
                        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=84856]
                           +- *(4) Filter (((isnotnull(d_date#26) AND (d_date#26 >= 2000-02-10)) AND (d_date#26 <= 2000-04-10)) AND isnotnull(d_date_sk#24))
                              +- *(4) ColumnarToRow
                                 +- FileScan parquet default.date_dim[d_date_sk#24,d_date#26] Batched: true, DataFilters: [isnotnull(d_date#26), (d_date#26 >= 2000-02-10), (d_date#26 <= 2000-04-10), isnotnull(d_date_sk#..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2000-02-10), LessThanOrEqual(d_date,2000-04-10), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>


==== q41 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[i_product_name#458 ASC NULLS FIRST], output=[i_product_name#458])
   +- *(4) HashAggregate(keys=[i_product_name#458], functions=[], output=[i_product_name#458])
      +- ShuffleQueryStage 2
         +- Exchange hashpartitioning(i_product_name#458, 20), ENSURE_REQUIREMENTS, [plan_id=85428]
            +- *(3) HashAggregate(keys=[i_product_name#458], functions=[], output=[i_product_name#458])
               +- *(3) Project [i_product_name#458]
                  +- *(3) BroadcastHashJoin [i_manufact#451], [i_manufact#11676], Inner, BuildRight, false
                     :- *(3) Project [i_manufact#451, i_product_name#458]
                     :  +- *(3) Filter (((isnotnull(i_manufact_id#450) AND (i_manufact_id#450 >= 738)) AND (i_manufact_id#450 <= 778)) AND isnotnull(i_manufact#451))
                     :     +- *(3) ColumnarToRow
                     :        +- FileScan parquet default.item[i_manufact_id#450,i_manufact#451,i_product_name#458] Batched: true, DataFilters: [isnotnull(i_manufact_id#450), (i_manufact_id#450 >= 738), (i_manufact_id#450 <= 778), isnotnull(..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_manufact_id), GreaterThanOrEqual(i_manufact_id,738), LessThanOrEqual(i_manufact_id,7..., ReadSchema: struct<i_manufact_id:int,i_manufact:string,i_product_name:string>
                     +- BroadcastQueryStage 1
                        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=85365]
                           +- *(2) Project [i_manufact#11676]
                              +- *(2) Filter (item_cnt#11659L > 0)
                                 +- *(2) HashAggregate(keys=[i_manufact#11676], functions=[count(1)], output=[item_cnt#11659L, i_manufact#11676])
                                    +- ShuffleQueryStage 0
                                       +- Exchange hashpartitioning(i_manufact#11676, 20), ENSURE_REQUIREMENTS, [plan_id=85289]
                                          +- *(1) HashAggregate(keys=[i_manufact#11676], functions=[partial_count(1)], output=[i_manufact#11676, count#11688L])
                                             +- *(1) Project [i_manufact#11676]
                                                +- *(1) Filter (((((i_category#11674 = Women                                             ) AND (((((i_color#11679 = powder              ) OR (i_color#11679 = khaki               )) AND ((i_units#11680 = Ounce     ) OR (i_units#11680 = Oz        ))) AND ((i_size#11677 = medium              ) OR (i_size#11677 = extra large         ))) OR ((((i_color#11679 = brown               ) OR (i_color#11679 = honeydew            )) AND ((i_units#11680 = Bunch     ) OR (i_units#11680 = Ton       ))) AND ((i_size#11677 = N/A                 ) OR (i_size#11677 = small               ))))) OR ((i_category#11674 = Men                                               ) AND (((((i_color#11679 = floral              ) OR (i_color#11679 = deep                )) AND ((i_units#11680 = N/A       ) OR (i_units#11680 = Dozen     ))) AND ((i_size#11677 = petite              ) OR (i_size#11677 = large               ))) OR ((((i_color#11679 = light               ) OR (i_color#11679 = cornflower          )) AND ((i_units#11680 = Box       ) OR (i_units#11680 = Pound     ))) AND ((i_size#11677 = medium              ) OR (i_size#11677 = extra large         )))))) OR (((i_category#11674 = Women                                             ) AND (((((i_color#11679 = midnight            ) OR (i_color#11679 = snow                )) AND ((i_units#11680 = Pallet    ) OR (i_units#11680 = Gross     ))) AND ((i_size#11677 = medium              ) OR (i_size#11677 = extra large         ))) OR ((((i_color#11679 = cyan                ) OR (i_color#11679 = papaya              )) AND ((i_units#11680 = Cup       ) OR (i_units#11680 = Dram      ))) AND ((i_size#11677 = N/A                 ) OR (i_size#11677 = small               ))))) OR ((i_category#11674 = Men                                               ) AND (((((i_color#11679 = orange              ) OR (i_color#11679 = frosted             )) AND ((i_units#11680 = Each      ) OR (i_units#11680 = Tbl       ))) AND ((i_size#11677 = petite              ) OR (i_size#11677 = large               ))) OR ((((i_color#11679 = forest              ) OR (i_color#11679 = ghost               )) AND ((i_units#11680 = Lb        ) OR (i_units#11680 = Bundle    ))) AND ((i_size#11677 = medium              ) OR (i_size#11677 = extra large         ))))))) AND isnotnull(i_manufact#11676))
                                                   +- *(1) ColumnarToRow
                                                      +- FileScan parquet default.item[i_category#11674,i_manufact#11676,i_size#11677,i_color#11679,i_units#11680] Batched: true, DataFilters: [((((i_category#11674 = Women                                             ) AND (((((i_color#1167..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [Or(Or(And(EqualTo(i_category,Women                                             ),Or(And(And(Or(E..., ReadSchema: struct<i_category:string,i_manufact:string,i_size:string,i_color:string,i_units:string>

==== q42 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[sum(ss_ext_sales_price)#11690 DESC NULLS LAST,d_year#30 ASC NULLS FIRST,i_category_id#448 ASC NULLS FIRST,i_category#449 ASC NULLS FIRST], output=[d_year#30,i_category_id#448,i_category#449,sum(ss_ext_sales_price)#11690])
   +- *(4) HashAggregate(keys=[d_year#30, i_category_id#448, i_category#449], functions=[sum(UnscaledValue(ss_ext_sales_price#429))], output=[d_year#30, i_category_id#448, i_category#449, sum(ss_ext_sales_price)#11690])
      +- ShuffleQueryStage 2
         +- Exchange hashpartitioning(d_year#30, i_category_id#448, i_category#449, 20), ENSURE_REQUIREMENTS, [plan_id=85705]
            +- *(3) HashAggregate(keys=[d_year#30, i_category_id#448, i_category#449], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#429))], output=[d_year#30, i_category_id#448, i_category#449, sum#11697L])
               +- *(3) Project [d_year#30, ss_ext_sales_price#429, i_category_id#448, i_category#449]
                  +- *(3) BroadcastHashJoin [ss_item_sk#416], [i_item_sk#437], Inner, BuildRight, false
                     :- *(3) Project [d_year#30, ss_item_sk#416, ss_ext_sales_price#429]
                     :  +- *(3) BroadcastHashJoin [d_date_sk#24], [ss_sold_date_sk#414], Inner, BuildLeft, false
                     :     :- BroadcastQueryStage 0
                     :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=85563]
                     :     :     +- *(1) Project [d_date_sk#24, d_year#30]
                     :     :        +- *(1) Filter ((((isnotnull(d_moy#32) AND isnotnull(d_year#30)) AND (d_moy#32 = 11)) AND (d_year#30 = 2000)) AND isnotnull(d_date_sk#24))
                     :     :           +- *(1) ColumnarToRow
                     :     :              +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30,d_moy#32] Batched: true, DataFilters: [isnotnull(d_moy#32), isnotnull(d_year#30), (d_moy#32 = 11), (d_year#30 = 2000), isnotnull(d_date..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_moy), IsNotNull(d_year), EqualTo(d_moy,11), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                     :     +- *(3) Filter (isnotnull(ss_sold_date_sk#414) AND isnotnull(ss_item_sk#416))
                     :        +- *(3) ColumnarToRow
                     :           +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_item_sk#416,ss_ext_sales_price#429] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#414), isnotnull(ss_item_sk#416)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_ext_sales_price:decimal(7,2)>
                     +- BroadcastQueryStage 1
                        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=85584]
                           +- *(2) Project [i_item_sk#437, i_category_id#448, i_category#449]
                              +- *(2) Filter ((isnotnull(i_manager_id#457) AND (i_manager_id#457 = 1)) AND isnotnull(i_item_sk#437))
                                 +- *(2) ColumnarToRow
                                    +- FileScan parquet default.item[i_item_sk#437,i_category_id#448,i_category#449,i_manager_id#457] Batched: true, DataFilters: [isnotnull(i_manager_id#457), (i_manager_id#457 = 1), isnotnull(i_item_sk#437)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_manager_id), EqualTo(i_manager_id,1), IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_category_id:int,i_category:string,i_manager_id:int>

==== q43 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[s_store_name#57 ASC NULLS FIRST,s_store_id#53 ASC NULLS FIRST,sun_sales#11701 ASC NULLS FIRST,mon_sales#11702 ASC NULLS FIRST,tue_sales#11703 ASC NULLS FIRST,wed_sales#11704 ASC NULLS FIRST,thu_sales#11705 ASC NULLS FIRST,fri_sales#11706 ASC NULLS FIRST,sat_sales#11707 ASC NULLS FIRST], output=[s_store_name#57,s_store_id#53,sun_sales#11701,mon_sales#11702,tue_sales#11703,wed_sales#11704,thu_sales#11705,fri_sales#11706,sat_sales#11707])
   +- *(4) HashAggregate(keys=[s_store_name#57, s_store_id#53], functions=[sum(UnscaledValue(CASE WHEN (d_day_name#38 = Sunday   ) THEN ss_sales_price#427 END)), sum(UnscaledValue(CASE WHEN (d_day_name#38 = Monday   ) THEN ss_sales_price#427 END)), sum(UnscaledValue(CASE WHEN (d_day_name#38 = Tuesday  ) THEN ss_sales_price#427 END)), sum(UnscaledValue(CASE WHEN (d_day_name#38 = Wednesday) THEN ss_sales_price#427 END)), sum(UnscaledValue(CASE WHEN (d_day_name#38 = Thursday ) THEN ss_sales_price#427 END)), sum(UnscaledValue(CASE WHEN (d_day_name#38 = Friday   ) THEN ss_sales_price#427 END)), sum(UnscaledValue(CASE WHEN (d_day_name#38 = Saturday ) THEN ss_sales_price#427 END))], output=[s_store_name#57, s_store_id#53, sun_sales#11701, mon_sales#11702, tue_sales#11703, wed_sales#11704, thu_sales#11705, fri_sales#11706, sat_sales#11707])
      +- ShuffleQueryStage 2
         +- Exchange hashpartitioning(s_store_name#57, s_store_id#53, 20), ENSURE_REQUIREMENTS, [plan_id=85982]
            +- *(3) HashAggregate(keys=[s_store_name#57, s_store_id#53], functions=[partial_sum(UnscaledValue(CASE WHEN (d_day_name#38 = Sunday   ) THEN ss_sales_price#427 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#38 = Monday   ) THEN ss_sales_price#427 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#38 = Tuesday  ) THEN ss_sales_price#427 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#38 = Wednesday) THEN ss_sales_price#427 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#38 = Thursday ) THEN ss_sales_price#427 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#38 = Friday   ) THEN ss_sales_price#427 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#38 = Saturday ) THEN ss_sales_price#427 END))], output=[s_store_name#57, s_store_id#53, sum#11731L, sum#11732L, sum#11733L, sum#11734L, sum#11735L, sum#11736L, sum#11737L])
               +- *(3) Project [d_day_name#38, ss_sales_price#427, s_store_id#53, s_store_name#57]
                  +- *(3) BroadcastHashJoin [ss_store_sk#421], [s_store_sk#52], Inner, BuildRight, false
                     :- *(3) Project [d_day_name#38, ss_store_sk#421, ss_sales_price#427]
                     :  +- *(3) BroadcastHashJoin [d_date_sk#24], [ss_sold_date_sk#414], Inner, BuildLeft, false
                     :     :- BroadcastQueryStage 0
                     :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=85840]
                     :     :     +- *(1) Project [d_date_sk#24, d_day_name#38]
                     :     :        +- *(1) Filter ((isnotnull(d_year#30) AND (d_year#30 = 2000)) AND isnotnull(d_date_sk#24))
                     :     :           +- *(1) ColumnarToRow
                     :     :              +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30,d_day_name#38] Batched: true, DataFilters: [isnotnull(d_year#30), (d_year#30 = 2000), isnotnull(d_date_sk#24)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_day_name:string>
                     :     +- *(3) Filter (isnotnull(ss_sold_date_sk#414) AND isnotnull(ss_store_sk#421))
                     :        +- *(3) ColumnarToRow
                     :           +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_store_sk#421,ss_sales_price#427] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#414), isnotnull(ss_store_sk#421)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
                     +- BroadcastQueryStage 1
                        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=85861]
                           +- *(2) Project [s_store_sk#52, s_store_id#53, s_store_name#57]
                              +- *(2) Filter ((isnotnull(s_gmt_offset#79) AND (s_gmt_offset#79 = -5.00)) AND isnotnull(s_store_sk#52))
                                 +- *(2) ColumnarToRow
                                    +- FileScan parquet default.store[s_store_sk#52,s_store_id#53,s_store_name#57,s_gmt_offset#79] Batched: true, DataFilters: [isnotnull(s_gmt_offset#79), (s_gmt_offset#79 = -5.00), isnotnull(s_store_sk#52)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_gmt_offset), EqualTo(s_gmt_offset,-5.00), IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_id:string,s_store_name:string,s_gmt_offset:decimal(5,2)>

==== q44 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[rnk#11763 ASC NULLS FIRST], output=[rnk#11763,best_performing#11769,worst_performing#11770])
   +- *(10) Project [rnk#11763, i_product_name#458 AS best_performing#11769, i_product_name#11819 AS worst_performing#11770]
      +- *(10) BroadcastHashJoin [item_sk#11764], [i_item_sk#11798], Inner, BuildRight, false
         :- *(10) Project [rnk#11763, item_sk#11764, i_product_name#458]
         :  +- *(10) BroadcastHashJoin [item_sk#11759], [i_item_sk#437], Inner, BuildRight, false
         :     :- *(10) Project [item_sk#11759, rnk#11763, item_sk#11764]
         :     :  +- *(10) BroadcastHashJoin [rnk#11763], [rnk#11768], Inner, BuildRight, false
         :     :     :- *(10) Project [item_sk#11759, rnk#11763]
         :     :     :  +- *(10) Filter ((rnk#11763 < 11) AND isnotnull(item_sk#11759))
         :     :     :     +- Window [rank(rank_col#11760) windowspecdefinition(rank_col#11760 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rnk#11763], [rank_col#11760 ASC NULLS FIRST]
         :     :     :        +- *(9) Sort [rank_col#11760 ASC NULLS FIRST], false, 0
         :     :     :           +- ShuffleQueryStage 6
         :     :     :              +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=86546]
         :     :     :                 +- *(5) Filter (isnotnull(rank_col#11760) AND (cast(rank_col#11760 as decimal(13,7)) > CheckOverflow((0.900000 * promote_precision(Subquery subquery#11762, [id=#86128])), DecimalType(13,7))))
         :     :     :                    :  +- Subquery subquery#11762, [id=#86128]
         :     :     :                    :     +- AdaptiveSparkPlan isFinalPlan=true
                                                +- == Final Plan ==
                                                   *(2) HashAggregate(keys=[ss_store_sk#11834], functions=[avg(UnscaledValue(ss_net_profit#11849))], output=[rank_col#11761])
                                                   +- ShuffleQueryStage 0
                                                      +- Exchange hashpartitioning(ss_store_sk#11834, 20), ENSURE_REQUIREMENTS, [plan_id=86614]
                                                         +- *(1) HashAggregate(keys=[ss_store_sk#11834], functions=[partial_avg(UnscaledValue(ss_net_profit#11849))], output=[ss_store_sk#11834, sum#11907, count#11908L])
                                                            +- *(1) Project [ss_store_sk#11834, ss_net_profit#11849]
                                                               +- *(1) Filter ((isnotnull(ss_store_sk#11834) AND (ss_store_sk#11834 = 4)) AND isnull(ss_addr_sk#11833))
                                                                  +- *(1) ColumnarToRow
                                                                     +- FileScan parquet default.store_sales[ss_addr_sk#11833,ss_store_sk#11834,ss_net_profit#11849] Batched: true, DataFilters: [isnotnull(ss_store_sk#11834), (ss_store_sk#11834 = 4), isnull(ss_addr_sk#11833)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_store_sk), EqualTo(ss_store_sk,4), IsNull(ss_addr_sk)], ReadSchema: struct<ss_addr_sk:int,ss_store_sk:int,ss_net_profit:decimal(7,2)>
                                                +- == Initial Plan ==
                                                   HashAggregate(keys=[ss_store_sk#11834], functions=[avg(UnscaledValue(ss_net_profit#11849))], output=[rank_col#11761])
                                                   +- Exchange hashpartitioning(ss_store_sk#11834, 20), ENSURE_REQUIREMENTS, [plan_id=86126]
                                                      +- HashAggregate(keys=[ss_store_sk#11834], functions=[partial_avg(UnscaledValue(ss_net_profit#11849))], output=[ss_store_sk#11834, sum#11907, count#11908L])
                                                         +- Project [ss_store_sk#11834, ss_net_profit#11849]
                                                            +- Filter ((isnotnull(ss_store_sk#11834) AND (ss_store_sk#11834 = 4)) AND isnull(ss_addr_sk#11833))
                                                               +- FileScan parquet default.store_sales[ss_addr_sk#11833,ss_store_sk#11834,ss_net_profit#11849] Batched: true, DataFilters: [isnotnull(ss_store_sk#11834), (ss_store_sk#11834 = 4), isnull(ss_addr_sk#11833)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_store_sk), EqualTo(ss_store_sk,4), IsNull(ss_addr_sk)], ReadSchema: struct<ss_addr_sk:int,ss_store_sk:int,ss_net_profit:decimal(7,2)>
         :     :     :                    +- *(5) HashAggregate(keys=[ss_item_sk#416], functions=[avg(UnscaledValue(ss_net_profit#436))], output=[item_sk#11759, rank_col#11760])
         :     :     :                       +- ShuffleQueryStage 0
         :     :     :                          +- Exchange hashpartitioning(ss_item_sk#416, 20), ENSURE_REQUIREMENTS, [plan_id=86231]
         :     :     :                             +- *(1) HashAggregate(keys=[ss_item_sk#416], functions=[partial_avg(UnscaledValue(ss_net_profit#436))], output=[ss_item_sk#416, sum#11899, count#11900L])
         :     :     :                                +- *(1) Project [ss_item_sk#416, ss_net_profit#436]
         :     :     :                                   +- *(1) Filter (isnotnull(ss_store_sk#421) AND (ss_store_sk#421 = 4))
         :     :     :                                      +- *(1) ColumnarToRow
         :     :     :                                         +- FileScan parquet default.store_sales[ss_item_sk#416,ss_store_sk#421,ss_net_profit#436] Batched: true, DataFilters: [isnotnull(ss_store_sk#421), (ss_store_sk#421 = 4)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_store_sk), EqualTo(ss_store_sk,4)], ReadSchema: struct<ss_item_sk:int,ss_store_sk:int,ss_net_profit:decimal(7,2)>
         :     :     +- BroadcastQueryStage 9
         :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[1, int, false] as bigint)),false), [plan_id=86711]
         :     :           +- *(8) Project [item_sk#11764, rnk#11768]
         :     :              +- *(8) Filter ((rnk#11768 < 11) AND isnotnull(item_sk#11764))
         :     :                 +- Window [rank(rank_col#11765) windowspecdefinition(rank_col#11765 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rnk#11768], [rank_col#11765 DESC NULLS LAST]
         :     :                    +- *(7) Sort [rank_col#11765 DESC NULLS LAST], false, 0
         :     :                       +- ShuffleQueryStage 8
         :     :                          +- ReusedExchange [item_sk#11764, rank_col#11765], Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=86546]
         :     +- BroadcastQueryStage 3
         :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=86323]
         :           +- *(3) Filter isnotnull(i_item_sk#437)
         :              +- *(3) ColumnarToRow
         :                 +- FileScan parquet default.item[i_item_sk#437,i_product_name#458] Batched: true, DataFilters: [isnotnull(i_item_sk#437)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_product_name:string>
         +- BroadcastQueryStage 5
            +- ReusedExchange [i_item_sk#11798, i_product_name#11819], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=86323]

==== q45 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[ca_zip#3726 ASC NULLS FIRST,ca_city#3723 ASC NULLS FIRST], output=[ca_zip#3726,ca_city#3723,sum(ws_sales_price)#11981])
   +- *(7) HashAggregate(keys=[ca_zip#3726, ca_city#3723], functions=[sum(UnscaledValue(ws_sales_price#184))], output=[ca_zip#3726, ca_city#3723, sum(ws_sales_price)#11981])
      +- ShuffleQueryStage 5
         +- Exchange hashpartitioning(ca_zip#3726, ca_city#3723, 20), ENSURE_REQUIREMENTS, [plan_id=87554]
            +- *(6) HashAggregate(keys=[ca_zip#3726, ca_city#3723], functions=[partial_sum(UnscaledValue(ws_sales_price#184))], output=[ca_zip#3726, ca_city#3723, sum#11987L])
               +- *(6) Project [ws_sales_price#184, ca_city#3723, ca_zip#3726]
                  +- *(6) Filter (substr(ca_zip#3726, 1, 5) IN (85669,86197,88274,83405,86475,85392,85460,80348,81792) OR exists#11985)
                     +- *(6) BroadcastHashJoin [i_item_id#438], [i_item_id#11959], ExistenceJoin(exists#11985), BuildRight, false
                        :- *(6) Project [ws_sales_price#184, ca_city#3723, ca_zip#3726, i_item_id#438]
                        :  +- *(6) BroadcastHashJoin [ws_item_sk#166], [i_item_sk#437], Inner, BuildRight, false
                        :     :- *(6) Project [ws_item_sk#166, ws_sales_price#184, ca_city#3723, ca_zip#3726]
                        :     :  +- *(6) BroadcastHashJoin [ws_sold_date_sk#163], [d_date_sk#24], Inner, BuildRight, false
                        :     :     :- *(6) Project [ws_sold_date_sk#163, ws_item_sk#166, ws_sales_price#184, ca_city#3723, ca_zip#3726]
                        :     :     :  +- *(6) BroadcastHashJoin [c_current_addr_sk#85], [ca_address_sk#3717], Inner, BuildRight, false
                        :     :     :     :- *(6) Project [ws_sold_date_sk#163, ws_item_sk#166, ws_sales_price#184, c_current_addr_sk#85]
                        :     :     :     :  +- *(6) BroadcastHashJoin [ws_bill_customer_sk#167], [c_customer_sk#81], Inner, BuildRight, false
                        :     :     :     :     :- *(6) Filter ((isnotnull(ws_bill_customer_sk#167) AND isnotnull(ws_sold_date_sk#163)) AND isnotnull(ws_item_sk#166))
                        :     :     :     :     :  +- *(6) ColumnarToRow
                        :     :     :     :     :     +- FileScan parquet default.web_sales[ws_sold_date_sk#163,ws_item_sk#166,ws_bill_customer_sk#167,ws_sales_price#184] Batched: true, DataFilters: [isnotnull(ws_bill_customer_sk#167), isnotnull(ws_sold_date_sk#163), isnotnull(ws_item_sk#166)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_bill_customer_sk), IsNotNull(ws_sold_date_sk), IsNotNull(ws_item_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_bill_customer_sk:int,ws_sales_price:decimal(7,2)>
                        :     :     :     :     +- BroadcastQueryStage 0
                        :     :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=87046]
                        :     :     :     :           +- *(1) Filter (isnotnull(c_customer_sk#81) AND isnotnull(c_current_addr_sk#85))
                        :     :     :     :              +- *(1) ColumnarToRow
                        :     :     :     :                 +- FileScan parquet default.customer[c_customer_sk#81,c_current_addr_sk#85] Batched: true, DataFilters: [isnotnull(c_customer_sk#81), isnotnull(c_current_addr_sk#85)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int>
                        :     :     :     +- BroadcastQueryStage 1
                        :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=87063]
                        :     :     :           +- *(2) Filter isnotnull(ca_address_sk#3717)
                        :     :     :              +- *(2) ColumnarToRow
                        :     :     :                 +- FileScan parquet default.customer_address[ca_address_sk#3717,ca_city#3723,ca_zip#3726] Batched: true, DataFilters: [isnotnull(ca_address_sk#3717)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_city:string,ca_zip:string>
                        :     :     +- BroadcastQueryStage 2
                        :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=87082]
                        :     :           +- *(3) Project [d_date_sk#24]
                        :     :              +- *(3) Filter ((((isnotnull(d_qoy#34) AND isnotnull(d_year#30)) AND (d_qoy#34 = 2)) AND (d_year#30 = 2001)) AND isnotnull(d_date_sk#24))
                        :     :                 +- *(3) ColumnarToRow
                        :     :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30,d_qoy#34] Batched: true, DataFilters: [isnotnull(d_qoy#34), isnotnull(d_year#30), (d_qoy#34 = 2), (d_year#30 = 2001), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_qoy), IsNotNull(d_year), EqualTo(d_qoy,2), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>
                        :     +- BroadcastQueryStage 3
                        :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=87101]
                        :           +- *(4) Filter isnotnull(i_item_sk#437)
                        :              +- *(4) ColumnarToRow
                        :                 +- FileScan parquet default.item[i_item_sk#437,i_item_id#438] Batched: true, DataFilters: [isnotnull(i_item_sk#437)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string>
                        +- BroadcastQueryStage 4
                           +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=87120]
                              +- *(5) Project [i_item_id#11959]
                                 +- *(5) Filter i_item_sk#11958 IN (2,3,5,7,11,13,17,19,23,29)
                                    +- *(5) ColumnarToRow
                                       +- FileScan parquet default.item[i_item_sk#11958,i_item_id#11959] Batched: true, DataFilters: [i_item_sk#11958 IN (2,3,5,7,11,13,17,19,23,29)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [In(i_item_sk, [11,13,17,19,2,23,29,3,5,7])], ReadSchema: struct<i_item_sk:int,i_item_id:string>

==== q46 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[c_last_name#90 ASC NULLS FIRST,c_first_name#89 ASC NULLS FIRST,ca_city#12000 ASC NULLS FIRST,bought_city#11991 ASC NULLS FIRST,ss_ticket_number#423 ASC NULLS FIRST], output=[c_last_name#90,c_first_name#89,ca_city#12000,bought_city#11991,ss_ticket_number#423,amt#11992,profit#11993])
   +- *(8) Project [c_last_name#90, c_first_name#89, ca_city#12000, bought_city#11991, ss_ticket_number#423, amt#11992, profit#11993]
      +- *(8) BroadcastHashJoin [c_current_addr_sk#85], [ca_address_sk#11994], Inner, BuildRight, NOT (ca_city#12000 = bought_city#11991), false
         :- *(8) Project [ss_ticket_number#423, bought_city#11991, amt#11992, profit#11993, c_current_addr_sk#85, c_first_name#89, c_last_name#90]
         :  +- *(8) BroadcastHashJoin [ss_customer_sk#417], [c_customer_sk#81], Inner, BuildRight, false
         :     :- *(8) HashAggregate(keys=[ss_ticket_number#423, ss_customer_sk#417, ss_addr_sk#420, ca_city#3723], functions=[sum(UnscaledValue(ss_coupon_amt#433)), sum(UnscaledValue(ss_net_profit#436))], output=[ss_ticket_number#423, ss_customer_sk#417, bought_city#11991, amt#11992, profit#11993])
         :     :  +- ShuffleQueryStage 7
         :     :     +- Exchange hashpartitioning(ss_ticket_number#423, ss_customer_sk#417, ss_addr_sk#420, ca_city#3723, 20), ENSURE_REQUIREMENTS, [plan_id=88307]
         :     :        +- *(7) HashAggregate(keys=[ss_ticket_number#423, ss_customer_sk#417, ss_addr_sk#420, ca_city#3723], functions=[partial_sum(UnscaledValue(ss_coupon_amt#433)), partial_sum(UnscaledValue(ss_net_profit#436))], output=[ss_ticket_number#423, ss_customer_sk#417, ss_addr_sk#420, ca_city#3723, sum#12019L, sum#12020L])
         :     :           +- *(7) Project [ss_customer_sk#417, ss_addr_sk#420, ss_ticket_number#423, ss_coupon_amt#433, ss_net_profit#436, ca_city#3723]
         :     :              +- *(7) BroadcastHashJoin [ss_addr_sk#420], [ca_address_sk#3717], Inner, BuildRight, false
         :     :                 :- *(7) Project [ss_customer_sk#417, ss_addr_sk#420, ss_ticket_number#423, ss_coupon_amt#433, ss_net_profit#436]
         :     :                 :  +- *(7) BroadcastHashJoin [ss_hdemo_sk#419], [hd_demo_sk#5552], Inner, BuildRight, false
         :     :                 :     :- *(7) Project [ss_customer_sk#417, ss_hdemo_sk#419, ss_addr_sk#420, ss_ticket_number#423, ss_coupon_amt#433, ss_net_profit#436]
         :     :                 :     :  +- *(7) BroadcastHashJoin [ss_store_sk#421], [s_store_sk#52], Inner, BuildRight, false
         :     :                 :     :     :- *(7) Project [ss_customer_sk#417, ss_hdemo_sk#419, ss_addr_sk#420, ss_store_sk#421, ss_ticket_number#423, ss_coupon_amt#433, ss_net_profit#436]
         :     :                 :     :     :  +- *(7) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#24], Inner, BuildRight, false
         :     :                 :     :     :     :- *(7) Filter ((((isnotnull(ss_sold_date_sk#414) AND isnotnull(ss_store_sk#421)) AND isnotnull(ss_hdemo_sk#419)) AND isnotnull(ss_addr_sk#420)) AND isnotnull(ss_customer_sk#417))
         :     :                 :     :     :     :  +- *(7) ColumnarToRow
         :     :                 :     :     :     :     +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_customer_sk#417,ss_hdemo_sk#419,ss_addr_sk#420,ss_store_sk#421,ss_ticket_number#423,ss_coupon_amt#433,ss_net_profit#436] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#414), isnotnull(ss_store_sk#421), isnotnull(ss_hdemo_sk#419), isnotnul..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk), IsNotNull(ss_hdemo_sk), IsNotNull(ss_addr_sk..., ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_hdemo_sk:int,ss_addr_sk:int,ss_store_sk:int,ss_t...
         :     :                 :     :     :     +- BroadcastQueryStage 0
         :     :                 :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=87815]
         :     :                 :     :     :           +- *(1) Project [d_date_sk#24]
         :     :                 :     :     :              +- *(1) Filter ((d_dow#31 IN (6,0) AND d_year#30 IN (1999,2000,2001)) AND isnotnull(d_date_sk#24))
         :     :                 :     :     :                 +- *(1) ColumnarToRow
         :     :                 :     :     :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30,d_dow#31] Batched: true, DataFilters: [d_dow#31 IN (6,0), d_year#30 IN (1999,2000,2001), isnotnull(d_date_sk#24)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [In(d_dow, [0,6]), In(d_year, [1999,2000,2001]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_dow:int>
         :     :                 :     :     +- BroadcastQueryStage 1
         :     :                 :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=87836]
         :     :                 :     :           +- *(2) Project [s_store_sk#52]
         :     :                 :     :              +- *(2) Filter (s_city#74 IN (Fairview,Midway) AND isnotnull(s_store_sk#52))
         :     :                 :     :                 +- *(2) ColumnarToRow
         :     :                 :     :                    +- FileScan parquet default.store[s_store_sk#52,s_city#74] Batched: true, DataFilters: [s_city#74 IN (Fairview,Midway), isnotnull(s_store_sk#52)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store], PartitionFilters: [], PushedFilters: [In(s_city, [Fairview,Midway]), IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_city:string>
         :     :                 :     +- BroadcastQueryStage 2
         :     :                 :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=87857]
         :     :                 :           +- *(3) Project [hd_demo_sk#5552]
         :     :                 :              +- *(3) Filter (((hd_dep_count#5555 = 4) OR (hd_vehicle_count#5556 = 3)) AND isnotnull(hd_demo_sk#5552))
         :     :                 :                 +- *(3) ColumnarToRow
         :     :                 :                    +- FileScan parquet default.household_demographics[hd_demo_sk#5552,hd_dep_count#5555,hd_vehicle_count#5556] Batched: true, DataFilters: [((hd_dep_count#5555 = 4) OR (hd_vehicle_count#5556 = 3)), isnotnull(hd_demo_sk#5552)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/household_demographics], PartitionFilters: [], PushedFilters: [Or(EqualTo(hd_dep_count,4),EqualTo(hd_vehicle_count,3)), IsNotNull(hd_demo_sk)], ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int,hd_vehicle_count:int>
         :     :                 +- BroadcastQueryStage 3
         :     :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=87876]
         :     :                       +- *(4) Filter (isnotnull(ca_address_sk#3717) AND isnotnull(ca_city#3723))
         :     :                          +- *(4) ColumnarToRow
         :     :                             +- FileScan parquet default.customer_address[ca_address_sk#3717,ca_city#3723] Batched: true, DataFilters: [isnotnull(ca_address_sk#3717), isnotnull(ca_city#3723)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_city)], ReadSchema: struct<ca_address_sk:int,ca_city:string>
         :     +- BroadcastQueryStage 4
         :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=87900]
         :           +- *(5) Filter (isnotnull(c_customer_sk#81) AND isnotnull(c_current_addr_sk#85))
         :              +- *(5) ColumnarToRow
         :                 +- FileScan parquet default.customer[c_customer_sk#81,c_current_addr_sk#85,c_first_name#89,c_last_name#90] Batched: true, DataFilters: [isnotnull(c_customer_sk#81), isnotnull(c_current_addr_sk#85)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int,c_first_name:string,c_last_name:string>
         +- BroadcastQueryStage 6
            +- ReusedExchange [ca_address_sk#11994, ca_city#12000], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=87876]

==== q47 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[CheckOverflow((promote_precision(cast(sum_sales#12027 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#12028 as decimal(22,6)))), DecimalType(22,6)) ASC NULLS FIRST,s_store_name#57 ASC NULLS FIRST], output=[i_category#449,i_brand#445,s_store_name#57,s_company_name#69,d_year#30,d_moy#32,avg_monthly_sales#12028,sum_sales#12027,psum#12030,nsum#12031])
   +- *(26) Project [i_category#449, i_brand#445, s_store_name#57, s_company_name#69, d_year#30, d_moy#32, avg_monthly_sales#12028, sum_sales#12027, sum_sales#12052 AS psum#12030, sum_sales#12061 AS nsum#12031]
      +- *(26) ShuffledHashJoin [i_category#449, i_brand#445, s_store_name#57, s_company_name#69, rn#12029], [i_category#12407, i_brand#12403, s_store_name#12473, s_company_name#12485, (rn#12501 - 1)], Inner, BuildRight
         :- *(25) Project [i_category#449, i_brand#445, s_store_name#57, s_company_name#69, d_year#30, d_moy#32, sum_sales#12027, avg_monthly_sales#12028, rn#12029, sum_sales#12052]
         :  +- *(25) SortMergeJoin [i_category#449, i_brand#445, s_store_name#57, s_company_name#69, rn#12029], [i_category#12300, i_brand#12296, s_store_name#12366, s_company_name#12378, (rn#12394 + 1)], Inner
         :     :- *(23) Sort [i_category#449 ASC NULLS FIRST, i_brand#445 ASC NULLS FIRST, s_store_name#57 ASC NULLS FIRST, s_company_name#69 ASC NULLS FIRST, rn#12029 ASC NULLS FIRST], false, 0
         :     :  +- ShuffleQueryStage 24
         :     :     +- Exchange hashpartitioning(i_category#449, i_brand#445, s_store_name#57, s_company_name#69, rn#12029, 20), ENSURE_REQUIREMENTS, [plan_id=90287]
         :     :        +- *(18) Project [i_category#449, i_brand#445, s_store_name#57, s_company_name#69, d_year#30, d_moy#32, sum_sales#12027, avg_monthly_sales#12028, rn#12029]
         :     :           +- *(18) Filter ((isnotnull(avg_monthly_sales#12028) AND (avg_monthly_sales#12028 > 0.000000)) AND CASE WHEN (avg_monthly_sales#12028 > 0.000000) THEN (CheckOverflow((promote_precision(abs(CheckOverflow((promote_precision(cast(sum_sales#12027 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#12028 as decimal(22,6)))), DecimalType(22,6)))) / promote_precision(cast(avg_monthly_sales#12028 as decimal(22,6)))), DecimalType(38,16)) > 0.1000000000000000) END)
         :     :              +- Window [avg(_w0#12045) windowspecdefinition(i_category#449, i_brand#445, s_store_name#57, s_company_name#69, d_year#30, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#12028], [i_category#449, i_brand#445, s_store_name#57, s_company_name#69, d_year#30]
         :     :                 +- *(17) Filter (isnotnull(d_year#30) AND (d_year#30 = 1999))
         :     :                    +- Window [rank(d_year#30, d_moy#32) windowspecdefinition(i_category#449, i_brand#445, s_store_name#57, s_company_name#69, d_year#30 ASC NULLS FIRST, d_moy#32 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#12029], [i_category#449, i_brand#445, s_store_name#57, s_company_name#69], [d_year#30 ASC NULLS FIRST, d_moy#32 ASC NULLS FIRST]
         :     :                       +- *(16) Sort [i_category#449 ASC NULLS FIRST, i_brand#445 ASC NULLS FIRST, s_store_name#57 ASC NULLS FIRST, s_company_name#69 ASC NULLS FIRST, d_year#30 ASC NULLS FIRST, d_moy#32 ASC NULLS FIRST], false, 0
         :     :                          +- ShuffleQueryStage 20
         :     :                             +- Exchange hashpartitioning(i_category#449, i_brand#445, s_store_name#57, s_company_name#69, 20), ENSURE_REQUIREMENTS, [plan_id=90113]
         :     :                                +- *(13) HashAggregate(keys=[i_category#449, i_brand#445, s_store_name#57, s_company_name#69, d_year#30, d_moy#32], functions=[sum(UnscaledValue(ss_sales_price#427))], output=[i_category#449, i_brand#445, s_store_name#57, s_company_name#69, d_year#30, d_moy#32, sum_sales#12027, _w0#12045])
         :     :                                   +- ShuffleQueryStage 15
         :     :                                      +- Exchange hashpartitioning(i_category#449, i_brand#445, s_store_name#57, s_company_name#69, d_year#30, d_moy#32, 20), ENSURE_REQUIREMENTS, [plan_id=89858]
         :     :                                         +- *(10) HashAggregate(keys=[i_category#449, i_brand#445, s_store_name#57, s_company_name#69, d_year#30, d_moy#32], functions=[partial_sum(UnscaledValue(ss_sales_price#427))], output=[i_category#449, i_brand#445, s_store_name#57, s_company_name#69, d_year#30, d_moy#32, sum#12503L])
         :     :                                            +- *(10) Project [i_brand#445, i_category#449, ss_sales_price#427, d_year#30, d_moy#32, s_store_name#57, s_company_name#69]
         :     :                                               +- *(10) BroadcastHashJoin [ss_store_sk#421], [s_store_sk#52], Inner, BuildRight, false
         :     :                                                  :- *(10) Project [i_brand#445, i_category#449, ss_store_sk#421, ss_sales_price#427, d_year#30, d_moy#32]
         :     :                                                  :  +- *(10) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#24], Inner, BuildRight, false
         :     :                                                  :     :- *(10) Project [i_brand#445, i_category#449, ss_sold_date_sk#414, ss_store_sk#421, ss_sales_price#427]
         :     :                                                  :     :  +- *(10) BroadcastHashJoin [i_item_sk#437], [ss_item_sk#416], Inner, BuildLeft, false
         :     :                                                  :     :     :- BroadcastQueryStage 0
         :     :                                                  :     :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=88808]
         :     :                                                  :     :     :     +- *(1) Filter ((isnotnull(i_item_sk#437) AND isnotnull(i_category#449)) AND isnotnull(i_brand#445))
         :     :                                                  :     :     :        +- *(1) ColumnarToRow
         :     :                                                  :     :     :           +- FileScan parquet default.item[i_item_sk#437,i_brand#445,i_category#449] Batched: true, DataFilters: [isnotnull(i_item_sk#437), isnotnull(i_category#449), isnotnull(i_brand#445)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_category), IsNotNull(i_brand)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_category:string>
         :     :                                                  :     :     +- *(10) Filter ((isnotnull(ss_item_sk#416) AND isnotnull(ss_sold_date_sk#414)) AND isnotnull(ss_store_sk#421))
         :     :                                                  :     :        +- *(10) ColumnarToRow
         :     :                                                  :     :           +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_item_sk#416,ss_store_sk#421,ss_sales_price#427] Batched: true, DataFilters: [isnotnull(ss_item_sk#416), isnotnull(ss_sold_date_sk#414), isnotnull(ss_store_sk#421)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
         :     :                                                  :     +- BroadcastQueryStage 1
         :     :                                                  :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=88825]
         :     :                                                  :           +- *(2) Filter ((((d_year#30 = 1999) OR ((d_year#30 = 1998) AND (d_moy#32 = 12))) OR ((d_year#30 = 2000) AND (d_moy#32 = 1))) AND isnotnull(d_date_sk#24))
         :     :                                                  :              +- *(2) ColumnarToRow
         :     :                                                  :                 +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30,d_moy#32] Batched: true, DataFilters: [(((d_year#30 = 1999) OR ((d_year#30 = 1998) AND (d_moy#32 = 12))) OR ((d_year#30 = 2000) AND (d_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [Or(Or(EqualTo(d_year,1999),And(EqualTo(d_year,1998),EqualTo(d_moy,12))),And(EqualTo(d_year,2000)..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
         :     :                                                  +- BroadcastQueryStage 2
         :     :                                                     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=88842]
         :     :                                                        +- *(3) Filter ((isnotnull(s_store_sk#52) AND isnotnull(s_store_name#57)) AND isnotnull(s_company_name#69))
         :     :                                                           +- *(3) ColumnarToRow
         :     :                                                              +- FileScan parquet default.store[s_store_sk#52,s_store_name#57,s_company_name#69] Batched: true, DataFilters: [isnotnull(s_store_sk#52), isnotnull(s_store_name#57), isnotnull(s_company_name#69)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk), IsNotNull(s_store_name), IsNotNull(s_company_name)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_name:string>
         :     +- *(24) Sort [i_category#12300 ASC NULLS FIRST, i_brand#12296 ASC NULLS FIRST, s_store_name#12366 ASC NULLS FIRST, s_company_name#12378 ASC NULLS FIRST, (rn#12394 + 1) ASC NULLS FIRST], false, 0
         :        +- ShuffleQueryStage 25
         :           +- Exchange hashpartitioning(i_category#12300, i_brand#12296, s_store_name#12366, s_company_name#12378, (rn#12394 + 1), 20), ENSURE_REQUIREMENTS, [plan_id=90395]
         :              +- *(20) Project [i_category#12300, i_brand#12296, s_store_name#12366, s_company_name#12378, sum_sales#12027 AS sum_sales#12052, rn#12394]
         :                 +- Window [rank(d_year#12339, d_moy#12341) windowspecdefinition(i_category#12300, i_brand#12296, s_store_name#12366, s_company_name#12378, d_year#12339 ASC NULLS FIRST, d_moy#12341 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#12394], [i_category#12300, i_brand#12296, s_store_name#12366, s_company_name#12378], [d_year#12339 ASC NULLS FIRST, d_moy#12341 ASC NULLS FIRST]
         :                    +- *(19) Sort [i_category#12300 ASC NULLS FIRST, i_brand#12296 ASC NULLS FIRST, s_store_name#12366 ASC NULLS FIRST, s_company_name#12378 ASC NULLS FIRST, d_year#12339 ASC NULLS FIRST, d_moy#12341 ASC NULLS FIRST], false, 0
         :                       +- ShuffleQueryStage 21
         :                          +- Exchange hashpartitioning(i_category#12300, i_brand#12296, s_store_name#12366, s_company_name#12378, 20), ENSURE_REQUIREMENTS, [plan_id=90144]
         :                             +- *(14) HashAggregate(keys=[i_category#12300, i_brand#12296, s_store_name#12366, s_company_name#12378, d_year#12339, d_moy#12341], functions=[sum(UnscaledValue(ss_sales_price#12323))], output=[i_category#12300, i_brand#12296, s_store_name#12366, s_company_name#12378, d_year#12339, d_moy#12341, sum_sales#12027])
         :                                +- ShuffleQueryStage 17
         :                                   +- ReusedExchange [i_category#12300, i_brand#12296, s_store_name#12366, s_company_name#12378, d_year#12339, d_moy#12341, sum#12505L], Exchange hashpartitioning(i_category#449, i_brand#445, s_store_name#57, s_company_name#69, d_year#30, d_moy#32, 20), ENSURE_REQUIREMENTS, [plan_id=89858]
         +- ShuffleQueryStage 26
            +- Exchange hashpartitioning(i_category#12407, i_brand#12403, s_store_name#12473, s_company_name#12485, (rn#12501 - 1), 20), ENSURE_REQUIREMENTS, [plan_id=90427]
               +- *(22) Project [i_category#12407, i_brand#12403, s_store_name#12473, s_company_name#12485, sum_sales#12027 AS sum_sales#12061, rn#12501]
                  +- Window [rank(d_year#12446, d_moy#12448) windowspecdefinition(i_category#12407, i_brand#12403, s_store_name#12473, s_company_name#12485, d_year#12446 ASC NULLS FIRST, d_moy#12448 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#12501], [i_category#12407, i_brand#12403, s_store_name#12473, s_company_name#12485], [d_year#12446 ASC NULLS FIRST, d_moy#12448 ASC NULLS FIRST]
                     +- *(21) Sort [i_category#12407 ASC NULLS FIRST, i_brand#12403 ASC NULLS FIRST, s_store_name#12473 ASC NULLS FIRST, s_company_name#12485 ASC NULLS FIRST, d_year#12446 ASC NULLS FIRST, d_moy#12448 ASC NULLS FIRST], false, 0
                        +- ShuffleQueryStage 23
                           +- ReusedExchange [i_category#12407, i_brand#12403, s_store_name#12473, s_company_name#12485, d_year#12446, d_moy#12448, sum_sales#12027], Exchange hashpartitioning(i_category#12300, i_brand#12296, s_store_name#12366, s_company_name#12378, 20), ENSURE_REQUIREMENTS, [plan_id=90144]

==== q48 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   *(6) HashAggregate(keys=[], functions=[sum(ss_quantity#424)], output=[sum(ss_quantity)#12660L])
   +- ShuffleQueryStage 4
      +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=91034]
         +- *(5) HashAggregate(keys=[], functions=[partial_sum(ss_quantity#424)], output=[sum#12663L])
            +- *(5) Project [ss_quantity#424]
               +- *(5) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#24], Inner, BuildRight, false
                  :- *(5) Project [ss_sold_date_sk#414, ss_quantity#424]
                  :  +- *(5) BroadcastHashJoin [ss_addr_sk#420], [ca_address_sk#3717], Inner, BuildRight, ((((ca_state#3725 IN (CO,OH,TX) AND (ss_net_profit#436 >= 0.00)) AND (ss_net_profit#436 <= 2000.00)) OR ((ca_state#3725 IN (OR,MN,KY) AND (ss_net_profit#436 >= 150.00)) AND (ss_net_profit#436 <= 3000.00))) OR ((ca_state#3725 IN (VA,CA,MS) AND (ss_net_profit#436 >= 50.00)) AND (ss_net_profit#436 <= 25000.00))), false
                  :     :- *(5) Project [ss_sold_date_sk#414, ss_addr_sk#420, ss_quantity#424, ss_net_profit#436]
                  :     :  +- *(5) BroadcastHashJoin [ss_cdemo_sk#418], [cd_demo_sk#3633], Inner, BuildRight, ((((((cd_marital_status#3635 = M) AND (cd_education_status#3636 = 4 yr Degree         )) AND (ss_sales_price#427 >= 100.00)) AND (ss_sales_price#427 <= 150.00)) OR ((((cd_marital_status#3635 = D) AND (cd_education_status#3636 = 2 yr Degree         )) AND (ss_sales_price#427 >= 50.00)) AND (ss_sales_price#427 <= 100.00))) OR ((((cd_marital_status#3635 = S) AND (cd_education_status#3636 = College             )) AND (ss_sales_price#427 >= 150.00)) AND (ss_sales_price#427 <= 200.00))), false
                  :     :     :- *(5) Project [ss_sold_date_sk#414, ss_cdemo_sk#418, ss_addr_sk#420, ss_quantity#424, ss_sales_price#427, ss_net_profit#436]
                  :     :     :  +- *(5) BroadcastHashJoin [ss_store_sk#421], [s_store_sk#52], Inner, BuildRight, false
                  :     :     :     :- *(5) Filter (((((isnotnull(ss_store_sk#421) AND isnotnull(ss_cdemo_sk#418)) AND isnotnull(ss_addr_sk#420)) AND isnotnull(ss_sold_date_sk#414)) AND ((((ss_sales_price#427 >= 100.00) AND (ss_sales_price#427 <= 150.00)) OR ((ss_sales_price#427 >= 50.00) AND (ss_sales_price#427 <= 100.00))) OR ((ss_sales_price#427 >= 150.00) AND (ss_sales_price#427 <= 200.00)))) AND ((((ss_net_profit#436 >= 0.00) AND (ss_net_profit#436 <= 2000.00)) OR ((ss_net_profit#436 >= 150.00) AND (ss_net_profit#436 <= 3000.00))) OR ((ss_net_profit#436 >= 50.00) AND (ss_net_profit#436 <= 25000.00))))
                  :     :     :     :  +- *(5) ColumnarToRow
                  :     :     :     :     +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_cdemo_sk#418,ss_addr_sk#420,ss_store_sk#421,ss_quantity#424,ss_sales_price#427,ss_net_profit#436] Batched: true, DataFilters: [isnotnull(ss_store_sk#421), isnotnull(ss_cdemo_sk#418), isnotnull(ss_addr_sk#420), isnotnull(ss_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_store_sk), IsNotNull(ss_cdemo_sk), IsNotNull(ss_addr_sk), IsNotNull(ss_sold_date_sk..., ReadSchema: struct<ss_sold_date_sk:int,ss_cdemo_sk:int,ss_addr_sk:int,ss_store_sk:int,ss_quantity:int,ss_sale...
                  :     :     :     +- BroadcastQueryStage 0
                  :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=90702]
                  :     :     :           +- *(1) Filter isnotnull(s_store_sk#52)
                  :     :     :              +- *(1) ColumnarToRow
                  :     :     :                 +- FileScan parquet default.store[s_store_sk#52] Batched: true, DataFilters: [isnotnull(s_store_sk#52)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int>
                  :     :     +- BroadcastQueryStage 1
                  :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=90719]
                  :     :           +- *(2) Filter (isnotnull(cd_demo_sk#3633) AND ((((cd_marital_status#3635 = M) AND (cd_education_status#3636 = 4 yr Degree         )) OR ((cd_marital_status#3635 = D) AND (cd_education_status#3636 = 2 yr Degree         ))) OR ((cd_marital_status#3635 = S) AND (cd_education_status#3636 = College             ))))
                  :     :              +- *(2) ColumnarToRow
                  :     :                 +- FileScan parquet default.customer_demographics[cd_demo_sk#3633,cd_marital_status#3635,cd_education_status#3636] Batched: true, DataFilters: [isnotnull(cd_demo_sk#3633), ((((cd_marital_status#3635 = M) AND (cd_education_status#3636 = 4 yr..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer_demographics], PartitionFilters: [], PushedFilters: [IsNotNull(cd_demo_sk), Or(Or(And(EqualTo(cd_marital_status,M),EqualTo(cd_education_status,4 yr D..., ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string,cd_education_status:string>
                  :     +- BroadcastQueryStage 2
                  :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=90738]
                  :           +- *(3) Project [ca_address_sk#3717, ca_state#3725]
                  :              +- *(3) Filter (((isnotnull(ca_country#3727) AND (ca_country#3727 = United States)) AND isnotnull(ca_address_sk#3717)) AND ((ca_state#3725 IN (CO,OH,TX) OR ca_state#3725 IN (OR,MN,KY)) OR ca_state#3725 IN (VA,CA,MS)))
                  :                 +- *(3) ColumnarToRow
                  :                    +- FileScan parquet default.customer_address[ca_address_sk#3717,ca_state#3725,ca_country#3727] Batched: true, DataFilters: [isnotnull(ca_country#3727), (ca_country#3727 = United States), isnotnull(ca_address_sk#3717), ((..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_country), EqualTo(ca_country,United States), IsNotNull(ca_address_sk), Or(Or(In(ca_..., ReadSchema: struct<ca_address_sk:int,ca_state:string,ca_country:string>
                  +- BroadcastQueryStage 3
                     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=90759]
                        +- *(4) Project [d_date_sk#24]
                           +- *(4) Filter ((isnotnull(d_year#30) AND (d_year#30 = 2001)) AND isnotnull(d_date_sk#24))
                              +- *(4) ColumnarToRow
                                 +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30] Batched: true, DataFilters: [isnotnull(d_year#30), (d_year#30 = 2001), isnotnull(d_date_sk#24)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>

==== q49 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[channel#12672 ASC NULLS FIRST,return_rank#12670 ASC NULLS FIRST,currency_rank#12671 ASC NULLS FIRST], output=[channel#12672,item#12667,return_ratio#12668,return_rank#12670,currency_rank#12671])
   +- *(23) HashAggregate(keys=[channel#12672, item#12667, return_ratio#12668, return_rank#12670, currency_rank#12671], functions=[], output=[channel#12672, item#12667, return_ratio#12668, return_rank#12670, currency_rank#12671])
      +- ShuffleQueryStage 14
         +- Exchange hashpartitioning(channel#12672, item#12667, return_ratio#12668, return_rank#12670, currency_rank#12671, 20), ENSURE_REQUIREMENTS, [plan_id=93173]
            +- *(22) HashAggregate(keys=[channel#12672, item#12667, return_ratio#12668, return_rank#12670, currency_rank#12671], functions=[], output=[channel#12672, item#12667, return_ratio#12668, return_rank#12670, currency_rank#12671])
               +- Union
                  :- *(15) Project [web AS channel#12672, item#12667, return_ratio#12668, return_rank#12670, currency_rank#12671]
                  :  +- *(15) Filter ((return_rank#12670 <= 10) OR (currency_rank#12671 <= 10))
                  :     +- Window [rank(currency_ratio#12669) windowspecdefinition(currency_ratio#12669 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS currency_rank#12671], [currency_ratio#12669 ASC NULLS FIRST]
                  :        +- *(14) Sort [currency_ratio#12669 ASC NULLS FIRST], false, 0
                  :           +- Window [rank(return_ratio#12668) windowspecdefinition(return_ratio#12668 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS return_rank#12670], [return_ratio#12668 ASC NULLS FIRST]
                  :              +- *(13) Sort [return_ratio#12668 ASC NULLS FIRST], false, 0
                  :                 +- ShuffleQueryStage 11
                  :                    +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=92624]
                  :                       +- *(10) HashAggregate(keys=[ws_item_sk#166], functions=[sum(coalesce(wr_return_quantity#3341, 0)), sum(coalesce(ws_quantity#181, 0)), sum(coalesce(cast(wr_return_amt#3342 as decimal(12,2)), 0.00)), sum(coalesce(cast(ws_net_paid#192 as decimal(12,2)), 0.00))], output=[item#12667, return_ratio#12668, currency_ratio#12669])
                  :                          +- ShuffleQueryStage 8
                  :                             +- Exchange hashpartitioning(ws_item_sk#166, 20), ENSURE_REQUIREMENTS, [plan_id=92087]
                  :                                +- *(7) HashAggregate(keys=[ws_item_sk#166], functions=[partial_sum(coalesce(wr_return_quantity#3341, 0)), partial_sum(coalesce(ws_quantity#181, 0)), partial_sum(coalesce(cast(wr_return_amt#3342 as decimal(12,2)), 0.00)), partial_sum(coalesce(cast(ws_net_paid#192 as decimal(12,2)), 0.00))], output=[ws_item_sk#166, sum#12850L, sum#12851L, sum#12852, isEmpty#12853, sum#12854, isEmpty#12855])
                  :                                   +- *(7) Project [ws_item_sk#166, ws_quantity#181, ws_net_paid#192, wr_return_quantity#3341, wr_return_amt#3342]
                  :                                      +- *(7) BroadcastHashJoin [ws_sold_date_sk#163], [d_date_sk#24], Inner, BuildRight, false
                  :                                         :- *(7) Project [ws_sold_date_sk#163, ws_item_sk#166, ws_quantity#181, ws_net_paid#192, wr_return_quantity#3341, wr_return_amt#3342]
                  :                                         :  +- *(7) BroadcastHashJoin [ws_order_number#180, ws_item_sk#166], [wr_order_number#3340, wr_item_sk#3329], Inner, BuildRight, false
                  :                                         :     :- *(7) Project [ws_sold_date_sk#163, ws_item_sk#166, ws_order_number#180, ws_quantity#181, ws_net_paid#192]
                  :                                         :     :  +- *(7) Filter ((((((((isnotnull(ws_net_profit#196) AND isnotnull(ws_net_paid#192)) AND isnotnull(ws_quantity#181)) AND (ws_net_profit#196 > 1.00)) AND (ws_net_paid#192 > 0.00)) AND (ws_quantity#181 > 0)) AND isnotnull(ws_order_number#180)) AND isnotnull(ws_item_sk#166)) AND isnotnull(ws_sold_date_sk#163))
                  :                                         :     :     +- *(7) ColumnarToRow
                  :                                         :     :        +- FileScan parquet default.web_sales[ws_sold_date_sk#163,ws_item_sk#166,ws_order_number#180,ws_quantity#181,ws_net_paid#192,ws_net_profit#196] Batched: true, DataFilters: [isnotnull(ws_net_profit#196), isnotnull(ws_net_paid#192), isnotnull(ws_quantity#181), (ws_net_pr..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_net_profit), IsNotNull(ws_net_paid), IsNotNull(ws_quantity), GreaterThan(ws_net_pro..., ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_order_number:int,ws_quantity:int,ws_net_paid:decimal...
                  :                                         :     +- BroadcastQueryStage 0
                  :                                         :        +- BroadcastExchange HashedRelationBroadcastMode(List((shiftleft(cast(input[1, int, false] as bigint), 32) | (cast(input[0, int, false] as bigint) & 4294967295))),false), [plan_id=91510]
                  :                                         :           +- *(1) Filter (((isnotnull(wr_return_amt#3342) AND (wr_return_amt#3342 > 10000.00)) AND isnotnull(wr_order_number#3340)) AND isnotnull(wr_item_sk#3329))
                  :                                         :              +- *(1) ColumnarToRow
                  :                                         :                 +- FileScan parquet default.web_returns[wr_item_sk#3329,wr_order_number#3340,wr_return_quantity#3341,wr_return_amt#3342] Batched: true, DataFilters: [isnotnull(wr_return_amt#3342), (wr_return_amt#3342 > 10000.00), isnotnull(wr_order_number#3340),..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_returns], PartitionFilters: [], PushedFilters: [IsNotNull(wr_return_amt), GreaterThan(wr_return_amt,10000.00), IsNotNull(wr_order_number), IsNot..., ReadSchema: struct<wr_item_sk:int,wr_order_number:int,wr_return_quantity:int,wr_return_amt:decimal(7,2)>
                  :                                         +- BroadcastQueryStage 1
                  :                                            +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=91529]
                  :                                               +- *(2) Project [d_date_sk#24]
                  :                                                  +- *(2) Filter ((((isnotnull(d_year#30) AND isnotnull(d_moy#32)) AND (d_year#30 = 2001)) AND (d_moy#32 = 12)) AND isnotnull(d_date_sk#24))
                  :                                                     +- *(2) ColumnarToRow
                  :                                                        +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30,d_moy#32] Batched: true, DataFilters: [isnotnull(d_year#30), isnotnull(d_moy#32), (d_year#30 = 2001), (d_moy#32 = 12), isnotnull(d_date..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2001), EqualTo(d_moy,12), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                  :- *(18) Project [catalog AS channel#12678, item#12673, return_ratio#12674, return_rank#12676, currency_rank#12677]
                  :  +- *(18) Filter ((return_rank#12676 <= 10) OR (currency_rank#12677 <= 10))
                  :     +- Window [rank(currency_ratio#12675) windowspecdefinition(currency_ratio#12675 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS currency_rank#12677], [currency_ratio#12675 ASC NULLS FIRST]
                  :        +- *(17) Sort [currency_ratio#12675 ASC NULLS FIRST], false, 0
                  :           +- Window [rank(return_ratio#12674) windowspecdefinition(return_ratio#12674 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS return_rank#12676], [return_ratio#12674 ASC NULLS FIRST]
                  :              +- *(16) Sort [return_ratio#12674 ASC NULLS FIRST], false, 0
                  :                 +- ShuffleQueryStage 13
                  :                    +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=92939]
                  :                       +- *(12) HashAggregate(keys=[cs_item_sk#212], functions=[sum(coalesce(cr_return_quantity#3308, 0)), sum(coalesce(cs_quantity#215, 0)), sum(coalesce(cast(cr_return_amount#3309 as decimal(12,2)), 0.00)), sum(coalesce(cast(cs_net_paid#226 as decimal(12,2)), 0.00))], output=[item#12673, return_ratio#12674, currency_ratio#12675])
                  :                          +- ShuffleQueryStage 10
                  :                             +- Exchange hashpartitioning(cs_item_sk#212, 20), ENSURE_REQUIREMENTS, [plan_id=92484]
                  :                                +- *(9) HashAggregate(keys=[cs_item_sk#212], functions=[partial_sum(coalesce(cr_return_quantity#3308, 0)), partial_sum(coalesce(cs_quantity#215, 0)), partial_sum(coalesce(cast(cr_return_amount#3309 as decimal(12,2)), 0.00)), partial_sum(coalesce(cast(cs_net_paid#226 as decimal(12,2)), 0.00))], output=[cs_item_sk#212, sum#12862L, sum#12863L, sum#12864, isEmpty#12865, sum#12866, isEmpty#12867])
                  :                                   +- *(9) Project [cs_item_sk#212, cs_quantity#215, cs_net_paid#226, cr_return_quantity#3308, cr_return_amount#3309]
                  :                                      +- *(9) BroadcastHashJoin [cs_sold_date_sk#197], [d_date_sk#12697], Inner, BuildRight, false
                  :                                         :- *(9) Project [cs_sold_date_sk#197, cs_item_sk#212, cs_quantity#215, cs_net_paid#226, cr_return_quantity#3308, cr_return_amount#3309]
                  :                                         :  +- *(9) BroadcastHashJoin [cs_order_number#214, cs_item_sk#212], [cr_order_number#3307, cr_item_sk#3293], Inner, BuildRight, false
                  :                                         :     :- *(9) Project [cs_sold_date_sk#197, cs_item_sk#212, cs_order_number#214, cs_quantity#215, cs_net_paid#226]
                  :                                         :     :  +- *(9) Filter ((((((((isnotnull(cs_net_profit#230) AND isnotnull(cs_net_paid#226)) AND isnotnull(cs_quantity#215)) AND (cs_net_profit#230 > 1.00)) AND (cs_net_paid#226 > 0.00)) AND (cs_quantity#215 > 0)) AND isnotnull(cs_order_number#214)) AND isnotnull(cs_item_sk#212)) AND isnotnull(cs_sold_date_sk#197))
                  :                                         :     :     +- *(9) ColumnarToRow
                  :                                         :     :        +- FileScan parquet default.catalog_sales[cs_sold_date_sk#197,cs_item_sk#212,cs_order_number#214,cs_quantity#215,cs_net_paid#226,cs_net_profit#230] Batched: true, DataFilters: [isnotnull(cs_net_profit#230), isnotnull(cs_net_paid#226), isnotnull(cs_quantity#215), (cs_net_pr..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_net_profit), IsNotNull(cs_net_paid), IsNotNull(cs_quantity), GreaterThan(cs_net_pro..., ReadSchema: struct<cs_sold_date_sk:int,cs_item_sk:int,cs_order_number:int,cs_quantity:int,cs_net_paid:decimal...
                  :                                         :     +- BroadcastQueryStage 2
                  :                                         :        +- BroadcastExchange HashedRelationBroadcastMode(List((shiftleft(cast(input[1, int, false] as bigint), 32) | (cast(input[0, int, false] as bigint) & 4294967295))),false), [plan_id=91558]
                  :                                         :           +- *(3) Filter (((isnotnull(cr_return_amount#3309) AND (cr_return_amount#3309 > 10000.00)) AND isnotnull(cr_order_number#3307)) AND isnotnull(cr_item_sk#3293))
                  :                                         :              +- *(3) ColumnarToRow
                  :                                         :                 +- FileScan parquet default.catalog_returns[cr_item_sk#3293,cr_order_number#3307,cr_return_quantity#3308,cr_return_amount#3309] Batched: true, DataFilters: [isnotnull(cr_return_amount#3309), (cr_return_amount#3309 > 10000.00), isnotnull(cr_order_number#..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_returns], PartitionFilters: [], PushedFilters: [IsNotNull(cr_return_amount), GreaterThan(cr_return_amount,10000.00), IsNotNull(cr_order_number),..., ReadSchema: struct<cr_item_sk:int,cr_order_number:int,cr_return_quantity:int,cr_return_amount:decimal(7,2)>
                  :                                         +- BroadcastQueryStage 4
                  :                                            +- ReusedExchange [d_date_sk#12697], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=91529]
                  +- *(21) Project [store AS channel#12684, item#12679, return_ratio#12680, return_rank#12682, currency_rank#12683]
                     +- *(21) Filter ((return_rank#12682 <= 10) OR (currency_rank#12683 <= 10))
                        +- Window [rank(currency_ratio#12681) windowspecdefinition(currency_ratio#12681 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS currency_rank#12683], [currency_ratio#12681 ASC NULLS FIRST]
                           +- *(20) Sort [currency_ratio#12681 ASC NULLS FIRST], false, 0
                              +- Window [rank(return_ratio#12680) windowspecdefinition(return_ratio#12680 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS return_rank#12682], [return_ratio#12680 ASC NULLS FIRST]
                                 +- *(19) Sort [return_ratio#12680 ASC NULLS FIRST], false, 0
                                    +- ShuffleQueryStage 12
                                       +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=92822]
                                          +- *(11) HashAggregate(keys=[ss_item_sk#416], functions=[sum(coalesce(sr_return_quantity#14, 0)), sum(coalesce(ss_quantity#424, 0)), sum(coalesce(cast(sr_return_amt#15 as decimal(12,2)), 0.00)), sum(coalesce(cast(ss_net_paid#434 as decimal(12,2)), 0.00))], output=[item#12679, return_ratio#12680, currency_ratio#12681])
                                             +- ShuffleQueryStage 9
                                                +- Exchange hashpartitioning(ss_item_sk#416, 20), ENSURE_REQUIREMENTS, [plan_id=92299]
                                                   +- *(8) HashAggregate(keys=[ss_item_sk#416], functions=[partial_sum(coalesce(sr_return_quantity#14, 0)), partial_sum(coalesce(ss_quantity#424, 0)), partial_sum(coalesce(cast(sr_return_amt#15 as decimal(12,2)), 0.00)), partial_sum(coalesce(cast(ss_net_paid#434 as decimal(12,2)), 0.00))], output=[ss_item_sk#416, sum#12874L, sum#12875L, sum#12876, isEmpty#12877, sum#12878, isEmpty#12879])
                                                      +- *(8) Project [ss_item_sk#416, ss_quantity#424, ss_net_paid#434, sr_return_quantity#14, sr_return_amt#15]
                                                         +- *(8) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#12725], Inner, BuildRight, false
                                                            :- *(8) Project [ss_sold_date_sk#414, ss_item_sk#416, ss_quantity#424, ss_net_paid#434, sr_return_quantity#14, sr_return_amt#15]
                                                            :  +- *(8) BroadcastHashJoin [ss_ticket_number#423, ss_item_sk#416], [sr_ticket_number#13, sr_item_sk#6], Inner, BuildRight, false
                                                            :     :- *(8) Project [ss_sold_date_sk#414, ss_item_sk#416, ss_ticket_number#423, ss_quantity#424, ss_net_paid#434]
                                                            :     :  +- *(8) Filter ((((((((isnotnull(ss_net_profit#436) AND isnotnull(ss_net_paid#434)) AND isnotnull(ss_quantity#424)) AND (ss_net_profit#436 > 1.00)) AND (ss_net_paid#434 > 0.00)) AND (ss_quantity#424 > 0)) AND isnotnull(ss_ticket_number#423)) AND isnotnull(ss_item_sk#416)) AND isnotnull(ss_sold_date_sk#414))
                                                            :     :     +- *(8) ColumnarToRow
                                                            :     :        +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_item_sk#416,ss_ticket_number#423,ss_quantity#424,ss_net_paid#434,ss_net_profit#436] Batched: true, DataFilters: [isnotnull(ss_net_profit#436), isnotnull(ss_net_paid#434), isnotnull(ss_quantity#424), (ss_net_pr..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_net_profit), IsNotNull(ss_net_paid), IsNotNull(ss_quantity), GreaterThan(ss_net_pro..., ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_ticket_number:int,ss_quantity:int,ss_net_paid:decima...
                                                            :     +- BroadcastQueryStage 5
                                                            :        +- BroadcastExchange HashedRelationBroadcastMode(List((shiftleft(cast(input[1, int, false] as bigint), 32) | (cast(input[0, int, false] as bigint) & 4294967295))),false), [plan_id=91608]
                                                            :           +- *(5) Filter (((isnotnull(sr_return_amt#15) AND (sr_return_amt#15 > 10000.00)) AND isnotnull(sr_ticket_number#13)) AND isnotnull(sr_item_sk#6))
                                                            :              +- *(5) ColumnarToRow
                                                            :                 +- FileScan parquet default.store_returns[sr_item_sk#6,sr_ticket_number#13,sr_return_quantity#14,sr_return_amt#15] Batched: true, DataFilters: [isnotnull(sr_return_amt#15), (sr_return_amt#15 > 10000.00), isnotnull(sr_ticket_number#13), isno..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_returns], PartitionFilters: [], PushedFilters: [IsNotNull(sr_return_amt), GreaterThan(sr_return_amt,10000.00), IsNotNull(sr_ticket_number), IsNo..., ReadSchema: struct<sr_item_sk:int,sr_ticket_number:int,sr_return_quantity:int,sr_return_amt:decimal(7,2)>
                                                            +- BroadcastQueryStage 7
                                                               +- ReusedExchange [d_date_sk#12725], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=91529]

==== q50 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[s_store_name#57 ASC NULLS FIRST,s_company_id#68 ASC NULLS FIRST,s_street_number#70 ASC NULLS FIRST,s_street_name#71 ASC NULLS FIRST,s_street_type#72 ASC NULLS FIRST,s_suite_number#73 ASC NULLS FIRST,s_city#74 ASC NULLS FIRST,s_county#75 ASC NULLS FIRST,s_state#76 ASC NULLS FIRST,s_zip#77 ASC NULLS FIRST], output=[s_store_name#57,s_company_id#68,s_street_number#70,s_street_name#71,s_street_type#72,s_suite_number#73,s_city#74,s_county#75,s_state#76,s_zip#77,30 days #13150L,31 - 60 days #13151L,61 - 90 days #13152L,91 - 120 days #13153L,>120 days #13154L])
   +- *(6) HashAggregate(keys=[s_store_name#57, s_company_id#68, s_street_number#70, s_street_name#71, s_street_type#72, s_suite_number#73, s_city#74, s_county#75, s_state#76, s_zip#77], functions=[sum(CASE WHEN ((sr_returned_date_sk#4 - ss_sold_date_sk#414) <= 30) THEN 1 ELSE 0 END), sum(CASE WHEN (((sr_returned_date_sk#4 - ss_sold_date_sk#414) > 30) AND ((sr_returned_date_sk#4 - ss_sold_date_sk#414) <= 60)) THEN 1 ELSE 0 END), sum(CASE WHEN (((sr_returned_date_sk#4 - ss_sold_date_sk#414) > 60) AND ((sr_returned_date_sk#4 - ss_sold_date_sk#414) <= 90)) THEN 1 ELSE 0 END), sum(CASE WHEN (((sr_returned_date_sk#4 - ss_sold_date_sk#414) > 90) AND ((sr_returned_date_sk#4 - ss_sold_date_sk#414) <= 120)) THEN 1 ELSE 0 END), sum(CASE WHEN ((sr_returned_date_sk#4 - ss_sold_date_sk#414) > 120) THEN 1 ELSE 0 END)], output=[s_store_name#57, s_company_id#68, s_street_number#70, s_street_name#71, s_street_type#72, s_suite_number#73, s_city#74, s_county#75, s_state#76, s_zip#77, 30 days #13150L, 31 - 60 days #13151L, 61 - 90 days #13152L, 91 - 120 days #13153L, >120 days #13154L])
      +- ShuffleQueryStage 4
         +- Exchange hashpartitioning(s_store_name#57, s_company_id#68, s_street_number#70, s_street_name#71, s_street_type#72, s_suite_number#73, s_city#74, s_county#75, s_state#76, s_zip#77, 20), ENSURE_REQUIREMENTS, [plan_id=93755]
            +- *(5) HashAggregate(keys=[s_store_name#57, s_company_id#68, s_street_number#70, s_street_name#71, s_street_type#72, s_suite_number#73, s_city#74, s_county#75, s_state#76, s_zip#77], functions=[partial_sum(CASE WHEN ((sr_returned_date_sk#4 - ss_sold_date_sk#414) <= 30) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (((sr_returned_date_sk#4 - ss_sold_date_sk#414) > 30) AND ((sr_returned_date_sk#4 - ss_sold_date_sk#414) <= 60)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (((sr_returned_date_sk#4 - ss_sold_date_sk#414) > 60) AND ((sr_returned_date_sk#4 - ss_sold_date_sk#414) <= 90)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (((sr_returned_date_sk#4 - ss_sold_date_sk#414) > 90) AND ((sr_returned_date_sk#4 - ss_sold_date_sk#414) <= 120)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN ((sr_returned_date_sk#4 - ss_sold_date_sk#414) > 120) THEN 1 ELSE 0 END)], output=[s_store_name#57, s_company_id#68, s_street_number#70, s_street_name#71, s_street_type#72, s_suite_number#73, s_city#74, s_county#75, s_state#76, s_zip#77, sum#13209L, sum#13210L, sum#13211L, sum#13212L, sum#13213L])
               +- *(5) Project [ss_sold_date_sk#414, sr_returned_date_sk#4, s_store_name#57, s_company_id#68, s_street_number#70, s_street_name#71, s_street_type#72, s_suite_number#73, s_city#74, s_county#75, s_state#76, s_zip#77]
                  +- *(5) BroadcastHashJoin [sr_returned_date_sk#4], [d_date_sk#13155], Inner, BuildRight, false
                     :- *(5) Project [ss_sold_date_sk#414, sr_returned_date_sk#4, s_store_name#57, s_company_id#68, s_street_number#70, s_street_name#71, s_street_type#72, s_suite_number#73, s_city#74, s_county#75, s_state#76, s_zip#77]
                     :  +- *(5) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#24], Inner, BuildRight, false
                     :     :- *(5) Project [ss_sold_date_sk#414, sr_returned_date_sk#4, s_store_name#57, s_company_id#68, s_street_number#70, s_street_name#71, s_street_type#72, s_suite_number#73, s_city#74, s_county#75, s_state#76, s_zip#77]
                     :     :  +- *(5) BroadcastHashJoin [ss_store_sk#421], [s_store_sk#52], Inner, BuildRight, false
                     :     :     :- *(5) Project [ss_sold_date_sk#414, ss_store_sk#421, sr_returned_date_sk#4]
                     :     :     :  +- *(5) BroadcastHashJoin [ss_ticket_number#423, ss_item_sk#416, ss_customer_sk#417], [sr_ticket_number#13, sr_item_sk#6, sr_customer_sk#7], Inner, BuildRight, false
                     :     :     :     :- *(5) Filter ((((isnotnull(ss_ticket_number#423) AND isnotnull(ss_item_sk#416)) AND isnotnull(ss_customer_sk#417)) AND isnotnull(ss_store_sk#421)) AND isnotnull(ss_sold_date_sk#414))
                     :     :     :     :  +- *(5) ColumnarToRow
                     :     :     :     :     +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_item_sk#416,ss_customer_sk#417,ss_store_sk#421,ss_ticket_number#423] Batched: true, DataFilters: [isnotnull(ss_ticket_number#423), isnotnull(ss_item_sk#416), isnotnull(ss_customer_sk#417), isnot..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_ticket_number), IsNotNull(ss_item_sk), IsNotNull(ss_customer_sk), IsNotNull(ss_stor..., ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:int>
                     :     :     :     +- BroadcastQueryStage 0
                     :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[3, int, false], input[1, int, false], input[2, int, false]),false), [plan_id=93409]
                     :     :     :           +- *(1) Filter (((isnotnull(sr_ticket_number#13) AND isnotnull(sr_item_sk#6)) AND isnotnull(sr_customer_sk#7)) AND isnotnull(sr_returned_date_sk#4))
                     :     :     :              +- *(1) ColumnarToRow
                     :     :     :                 +- FileScan parquet default.store_returns[sr_returned_date_sk#4,sr_item_sk#6,sr_customer_sk#7,sr_ticket_number#13] Batched: true, DataFilters: [isnotnull(sr_ticket_number#13), isnotnull(sr_item_sk#6), isnotnull(sr_customer_sk#7), isnotnull(..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_returns], PartitionFilters: [], PushedFilters: [IsNotNull(sr_ticket_number), IsNotNull(sr_item_sk), IsNotNull(sr_customer_sk), IsNotNull(sr_retu..., ReadSchema: struct<sr_returned_date_sk:int,sr_item_sk:int,sr_customer_sk:int,sr_ticket_number:int>
                     :     :     +- BroadcastQueryStage 1
                     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=93426]
                     :     :           +- *(2) Filter isnotnull(s_store_sk#52)
                     :     :              +- *(2) ColumnarToRow
                     :     :                 +- FileScan parquet default.store[s_store_sk#52,s_store_name#57,s_company_id#68,s_street_number#70,s_street_name#71,s_street_type#72,s_suite_number#73,s_city#74,s_county#75,s_state#76,s_zip#77] Batched: true, DataFilters: [isnotnull(s_store_sk#52)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_id:int,s_street_number:string,s_street_name:s...
                     :     +- BroadcastQueryStage 2
                     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=93443]
                     :           +- *(3) Filter isnotnull(d_date_sk#24)
                     :              +- *(3) ColumnarToRow
                     :                 +- FileScan parquet default.date_dim[d_date_sk#24] Batched: true, DataFilters: [isnotnull(d_date_sk#24)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int>
                     +- BroadcastQueryStage 3
                        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=93462]
                           +- *(4) Project [d_date_sk#13155]
                              +- *(4) Filter ((((isnotnull(d_year#13161) AND isnotnull(d_moy#13163)) AND (d_year#13161 = 2001)) AND (d_moy#13163 = 8)) AND isnotnull(d_date_sk#13155))
                                 +- *(4) ColumnarToRow
                                    +- FileScan parquet default.date_dim[d_date_sk#13155,d_year#13161,d_moy#13163] Batched: true, DataFilters: [isnotnull(d_year#13161), isnotnull(d_moy#13163), (d_year#13161 = 2001), (d_moy#13163 = 8), isnot..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2001), EqualTo(d_moy,8), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>


==== q51 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[item_sk#13229 ASC NULLS FIRST,d_date#13230 ASC NULLS FIRST], output=[item_sk#13229,d_date#13230,web_sales#13231,store_sales#13232,web_cumulative#13233,store_cumulative#13234])
   +- *(13) Filter ((isnotnull(web_cumulative#13233) AND isnotnull(store_cumulative#13234)) AND (web_cumulative#13233 > store_cumulative#13234))
      +- Window [max(web_sales#13231) windowspecdefinition(item_sk#13229, d_date#13230 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS web_cumulative#13233, max(store_sales#13232) windowspecdefinition(item_sk#13229, d_date#13230 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS store_cumulative#13234], [item_sk#13229], [d_date#13230 ASC NULLS FIRST]
         +- *(12) Sort [item_sk#13229 ASC NULLS FIRST, d_date#13230 ASC NULLS FIRST], false, 0
            +- ShuffleQueryStage 9
               +- Exchange hashpartitioning(item_sk#13229, 20), ENSURE_REQUIREMENTS, [plan_id=94728]
                  +- *(11) Project [CASE WHEN isnotnull(item_sk#13235) THEN item_sk#13235 ELSE item_sk#13237 END AS item_sk#13229, CASE WHEN isnotnull(d_date#26) THEN d_date#26 ELSE d_date#13241 END AS d_date#13230, cume_sales#13236 AS web_sales#13231, cume_sales#13238 AS store_sales#13232]
                     +- *(11) ShuffledHashJoin [item_sk#13235, d_date#26], [item_sk#13237, d_date#13241], FullOuter, BuildLeft
                        :- ShuffleQueryStage 6
                        :  +- Exchange hashpartitioning(item_sk#13235, d_date#26, 20), ENSURE_REQUIREMENTS, [plan_id=94491]
                        :     +- *(7) Project [item_sk#13235, d_date#26, cume_sales#13236]
                        :        +- Window [sum(_w0#13272) windowspecdefinition(ws_item_sk#166, d_date#26 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS cume_sales#13236], [ws_item_sk#166], [d_date#26 ASC NULLS FIRST]
                        :           +- *(6) Sort [ws_item_sk#166 ASC NULLS FIRST, d_date#26 ASC NULLS FIRST], false, 0
                        :              +- ShuffleQueryStage 5
                        :                 +- Exchange hashpartitioning(ws_item_sk#166, 20), ENSURE_REQUIREMENTS, [plan_id=94403]
                        :                    +- *(5) HashAggregate(keys=[ws_item_sk#166, d_date#26], functions=[sum(UnscaledValue(ws_sales_price#184))], output=[item_sk#13235, d_date#26, _w0#13272, ws_item_sk#166])
                        :                       +- ShuffleQueryStage 3
                        :                          +- Exchange hashpartitioning(ws_item_sk#166, d_date#26, 20), ENSURE_REQUIREMENTS, [plan_id=94254]
                        :                             +- *(3) HashAggregate(keys=[ws_item_sk#166, d_date#26], functions=[partial_sum(UnscaledValue(ws_sales_price#184))], output=[ws_item_sk#166, d_date#26, sum#13283L])
                        :                                +- *(3) Project [ws_item_sk#166, ws_sales_price#184, d_date#26]
                        :                                   +- *(3) BroadcastHashJoin [ws_sold_date_sk#163], [d_date_sk#24], Inner, BuildRight, false
                        :                                      :- *(3) Filter (isnotnull(ws_item_sk#166) AND isnotnull(ws_sold_date_sk#163))
                        :                                      :  +- *(3) ColumnarToRow
                        :                                      :     +- FileScan parquet default.web_sales[ws_sold_date_sk#163,ws_item_sk#166,ws_sales_price#184] Batched: true, DataFilters: [isnotnull(ws_item_sk#166), isnotnull(ws_sold_date_sk#163)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_item_sk), IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_sales_price:decimal(7,2)>
                        :                                      +- BroadcastQueryStage 0
                        :                                         +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=94024]
                        :                                            +- *(1) Project [d_date_sk#24, d_date#26]
                        :                                               +- *(1) Filter (((isnotnull(d_month_seq#27) AND (d_month_seq#27 >= 1200)) AND (d_month_seq#27 <= 1211)) AND isnotnull(d_date_sk#24))
                        :                                                  +- *(1) ColumnarToRow
                        :                                                     +- FileScan parquet default.date_dim[d_date_sk#24,d_date#26,d_month_seq#27] Batched: true, DataFilters: [isnotnull(d_month_seq#27), (d_month_seq#27 >= 1200), (d_month_seq#27 <= 1211), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1200), LessThanOrEqual(d_month_seq,1211),..., ReadSchema: struct<d_date_sk:int,d_date:date,d_month_seq:int>
                        +- ShuffleQueryStage 8
                           +- Exchange hashpartitioning(item_sk#13237, d_date#13241, 20), ENSURE_REQUIREMENTS, [plan_id=94673]
                              +- *(10) Project [item_sk#13237, d_date#13241, cume_sales#13238]
                                 +- Window [sum(_w0#13273) windowspecdefinition(ss_item_sk#416, d_date#13241 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS cume_sales#13238], [ss_item_sk#416], [d_date#13241 ASC NULLS FIRST]
                                    +- *(9) Sort [ss_item_sk#416 ASC NULLS FIRST, d_date#13241 ASC NULLS FIRST], false, 0
                                       +- ShuffleQueryStage 7
                                          +- Exchange hashpartitioning(ss_item_sk#416, 20), ENSURE_REQUIREMENTS, [plan_id=94559]
                                             +- *(8) HashAggregate(keys=[ss_item_sk#416, d_date#13241], functions=[sum(UnscaledValue(ss_sales_price#427))], output=[item_sk#13237, d_date#13241, _w0#13273, ss_item_sk#416])
                                                +- ShuffleQueryStage 4
                                                   +- Exchange hashpartitioning(ss_item_sk#416, d_date#13241, 20), ENSURE_REQUIREMENTS, [plan_id=94291]
                                                      +- *(4) HashAggregate(keys=[ss_item_sk#416, d_date#13241], functions=[partial_sum(UnscaledValue(ss_sales_price#427))], output=[ss_item_sk#416, d_date#13241, sum#13285L])
                                                         +- *(4) Project [ss_item_sk#416, ss_sales_price#427, d_date#13241]
                                                            +- *(4) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#13239], Inner, BuildRight, false
                                                               :- *(4) Filter (isnotnull(ss_item_sk#416) AND isnotnull(ss_sold_date_sk#414))
                                                               :  +- *(4) ColumnarToRow
                                                               :     +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_item_sk#416,ss_sales_price#427] Batched: true, DataFilters: [isnotnull(ss_item_sk#416), isnotnull(ss_sold_date_sk#414)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_sales_price:decimal(7,2)>
                                                               +- BroadcastQueryStage 2
                                                                  +- ReusedExchange [d_date_sk#13239, d_date#13241], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=94024]


==== q52 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[d_year#30 ASC NULLS FIRST,ext_price#13298 DESC NULLS LAST,brand_id#13296 ASC NULLS FIRST], output=[d_year#30,brand_id#13296,brand#13297,ext_price#13298])
   +- *(4) HashAggregate(keys=[d_year#30, i_brand#445, i_brand_id#444], functions=[sum(UnscaledValue(ss_ext_sales_price#429))], output=[d_year#30, brand_id#13296, brand#13297, ext_price#13298])
      +- ShuffleQueryStage 2
         +- Exchange hashpartitioning(d_year#30, i_brand#445, i_brand_id#444, 20), ENSURE_REQUIREMENTS, [plan_id=95011]
            +- *(3) HashAggregate(keys=[d_year#30, i_brand#445, i_brand_id#444], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#429))], output=[d_year#30, i_brand#445, i_brand_id#444, sum#13305L])
               +- *(3) Project [d_year#30, ss_ext_sales_price#429, i_brand_id#444, i_brand#445]
                  +- *(3) BroadcastHashJoin [ss_item_sk#416], [i_item_sk#437], Inner, BuildRight, false
                     :- *(3) Project [d_year#30, ss_item_sk#416, ss_ext_sales_price#429]
                     :  +- *(3) BroadcastHashJoin [d_date_sk#24], [ss_sold_date_sk#414], Inner, BuildLeft, false
                     :     :- BroadcastQueryStage 0
                     :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=94869]
                     :     :     +- *(1) Project [d_date_sk#24, d_year#30]
                     :     :        +- *(1) Filter ((((isnotnull(d_moy#32) AND isnotnull(d_year#30)) AND (d_moy#32 = 11)) AND (d_year#30 = 2000)) AND isnotnull(d_date_sk#24))
                     :     :           +- *(1) ColumnarToRow
                     :     :              +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30,d_moy#32] Batched: true, DataFilters: [isnotnull(d_moy#32), isnotnull(d_year#30), (d_moy#32 = 11), (d_year#30 = 2000), isnotnull(d_date..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_moy), IsNotNull(d_year), EqualTo(d_moy,11), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                     :     +- *(3) Filter (isnotnull(ss_sold_date_sk#414) AND isnotnull(ss_item_sk#416))
                     :        +- *(3) ColumnarToRow
                     :           +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_item_sk#416,ss_ext_sales_price#429] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#414), isnotnull(ss_item_sk#416)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_ext_sales_price:decimal(7,2)>
                     +- BroadcastQueryStage 1
                        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=94890]
                           +- *(2) Project [i_item_sk#437, i_brand_id#444, i_brand#445]
                              +- *(2) Filter ((isnotnull(i_manager_id#457) AND (i_manager_id#457 = 1)) AND isnotnull(i_item_sk#437))
                                 +- *(2) ColumnarToRow
                                    +- FileScan parquet default.item[i_item_sk#437,i_brand_id#444,i_brand#445,i_manager_id#457] Batched: true, DataFilters: [isnotnull(i_manager_id#457), (i_manager_id#457 = 1), isnotnull(i_item_sk#437)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_manager_id), EqualTo(i_manager_id,1), IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_brand:string,i_manager_id:int>


==== q53 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[avg_quarterly_sales#13310 ASC NULLS FIRST,sum_sales#13309 ASC NULLS FIRST,i_manufact_id#450 ASC NULLS FIRST], output=[i_manufact_id#450,sum_sales#13309,avg_quarterly_sales#13310])
   +- *(7) Project [i_manufact_id#450, sum_sales#13309, avg_quarterly_sales#13310]
      +- *(7) Filter CASE WHEN (avg_quarterly_sales#13310 > 0.000000) THEN (CheckOverflow((promote_precision(abs(CheckOverflow((promote_precision(cast(sum_sales#13309 as decimal(22,6))) - promote_precision(cast(avg_quarterly_sales#13310 as decimal(22,6)))), DecimalType(22,6)))) / promote_precision(cast(avg_quarterly_sales#13310 as decimal(22,6)))), DecimalType(38,16)) > 0.1000000000000000) ELSE false END
         +- Window [avg(_w0#13314) windowspecdefinition(i_manufact_id#450, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_quarterly_sales#13310], [i_manufact_id#450]
            +- *(6) Sort [i_manufact_id#450 ASC NULLS FIRST], false, 0
               +- ShuffleQueryStage 4
                  +- Exchange hashpartitioning(i_manufact_id#450, 20), ENSURE_REQUIREMENTS, [plan_id=95557]
                     +- *(5) HashAggregate(keys=[i_manufact_id#450, d_qoy#34], functions=[sum(UnscaledValue(ss_sales_price#427))], output=[i_manufact_id#450, sum_sales#13309, _w0#13314])
                        +- ShuffleQueryStage 3
                           +- Exchange hashpartitioning(i_manufact_id#450, d_qoy#34, 20), ENSURE_REQUIREMENTS, [plan_id=95499]
                              +- *(4) HashAggregate(keys=[i_manufact_id#450, d_qoy#34], functions=[partial_sum(UnscaledValue(ss_sales_price#427))], output=[i_manufact_id#450, d_qoy#34, sum#13319L])
                                 +- *(4) Project [i_manufact_id#450, ss_sales_price#427, d_qoy#34]
                                    +- *(4) BroadcastHashJoin [ss_store_sk#421], [s_store_sk#52], Inner, BuildRight, false
                                       :- *(4) Project [i_manufact_id#450, ss_store_sk#421, ss_sales_price#427, d_qoy#34]
                                       :  +- *(4) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#24], Inner, BuildRight, false
                                       :     :- *(4) Project [i_manufact_id#450, ss_sold_date_sk#414, ss_store_sk#421, ss_sales_price#427]
                                       :     :  +- *(4) BroadcastHashJoin [i_item_sk#437], [ss_item_sk#416], Inner, BuildLeft, false
                                       :     :     :- BroadcastQueryStage 0
                                       :     :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=95201]
                                       :     :     :     +- *(1) Project [i_item_sk#437, i_manufact_id#450]
                                       :     :     :        +- *(1) Filter ((((i_category#449 IN (Books                                             ,Children                                          ,Electronics                                       ) AND i_class#447 IN (personal                                          ,portable                                          ,reference                                         ,self-help                                         )) AND i_brand#445 IN (scholaramalgamalg #14                             ,scholaramalgamalg #7                              ,exportiunivamalg #9                               ,scholaramalgamalg #9                              )) OR ((i_category#449 IN (Women                                             ,Music                                             ,Men                                               ) AND i_class#447 IN (accessories                                       ,classical                                         ,fragrances                                        ,pants                                             )) AND i_brand#445 IN (amalgimporto #1                                   ,edu packscholar #1                                ,exportiimporto #1                                 ,importoamalg #1                                   ))) AND isnotnull(i_item_sk#437))
                                       :     :     :           +- *(1) ColumnarToRow
                                       :     :     :              +- FileScan parquet default.item[i_item_sk#437,i_brand#445,i_class#447,i_category#449,i_manufact_id#450] Batched: true, DataFilters: [(((i_category#449 IN (Books                                             ,Children               ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [Or(And(And(In(i_category, [Books                                             ,Children          ..., ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_manufact_id:int>
                                       :     :     +- *(4) Filter ((isnotnull(ss_item_sk#416) AND isnotnull(ss_sold_date_sk#414)) AND isnotnull(ss_store_sk#421))
                                       :     :        +- *(4) ColumnarToRow
                                       :     :           +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_item_sk#416,ss_store_sk#421,ss_sales_price#427] Batched: true, DataFilters: [isnotnull(ss_item_sk#416), isnotnull(ss_sold_date_sk#414), isnotnull(ss_store_sk#421)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
                                       :     +- BroadcastQueryStage 1
                                       :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=95222]
                                       :           +- *(2) Project [d_date_sk#24, d_qoy#34]
                                       :              +- *(2) Filter (d_month_seq#27 INSET 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211 AND isnotnull(d_date_sk#24))
                                       :                 +- *(2) ColumnarToRow
                                       :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_month_seq#27,d_qoy#34] Batched: true, DataFilters: [d_month_seq#27 INSET 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, isn..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [In(d_month_seq, [1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211]), IsNotNull(d_date..., ReadSchema: struct<d_date_sk:int,d_month_seq:int,d_qoy:int>
                                       +- BroadcastQueryStage 2
                                          +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=95241]
                                             +- *(3) Filter isnotnull(s_store_sk#52)
                                                +- *(3) ColumnarToRow
                                                   +- FileScan parquet default.store[s_store_sk#52] Batched: true, DataFilters: [isnotnull(s_store_sk#52)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int>


==== q54 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   *(13) HashAggregate(keys=[segment#13336], functions=[count(1)], output=[segment#13336, num_customers#13325L, segment_base#13326])
   +- ShuffleQueryStage 9
      +- Exchange hashpartitioning(segment#13336, 20), ENSURE_REQUIREMENTS, [plan_id=97185]
         +- *(12) HashAggregate(keys=[segment#13336], functions=[partial_count(1)], output=[segment#13336, count#13430L])
            +- *(12) HashAggregate(keys=[c_customer_sk#81], functions=[sum(UnscaledValue(ss_ext_sales_price#429))], output=[segment#13336])
               +- *(12) HashAggregate(keys=[c_customer_sk#81], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#429))], output=[c_customer_sk#81, sum#13432L])
                  +- *(12) Project [c_customer_sk#81, ss_ext_sales_price#429]
                     +- *(12) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#13338], Inner, BuildRight, false
                        :- *(12) Project [c_customer_sk#81, ss_sold_date_sk#414, ss_ext_sales_price#429]
                        :  +- *(12) BroadcastHashJoin [ca_county#3724, ca_state#3725], [s_county#75, s_state#76], Inner, BuildRight, false
                        :     :- *(12) Project [c_customer_sk#81, ss_sold_date_sk#414, ss_ext_sales_price#429, ca_county#3724, ca_state#3725]
                        :     :  +- *(12) BroadcastHashJoin [c_current_addr_sk#85], [ca_address_sk#3717], Inner, BuildRight, false
                        :     :     :- *(12) Project [c_customer_sk#81, c_current_addr_sk#85, ss_sold_date_sk#414, ss_ext_sales_price#429]
                        :     :     :  +- *(12) BroadcastHashJoin [c_customer_sk#81], [ss_customer_sk#417], Inner, BuildLeft, false
                        :     :     :     :- BroadcastQueryStage 8
                        :     :     :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=97015]
                        :     :     :     :     +- *(11) HashAggregate(keys=[c_customer_sk#81, c_current_addr_sk#85], functions=[], output=[c_customer_sk#81, c_current_addr_sk#85])
                        :     :     :     :        +- ShuffleQueryStage 7
                        :     :     :     :           +- Exchange hashpartitioning(c_customer_sk#81, c_current_addr_sk#85, 20), ENSURE_REQUIREMENTS, [plan_id=96862]
                        :     :     :     :              +- *(10) HashAggregate(keys=[c_customer_sk#81, c_current_addr_sk#85], functions=[], output=[c_customer_sk#81, c_current_addr_sk#85])
                        :     :     :     :                 +- *(10) Project [c_customer_sk#81, c_current_addr_sk#85]
                        :     :     :     :                    +- *(10) BroadcastHashJoin [customer_sk#13328], [c_customer_sk#81], Inner, BuildRight, false
                        :     :     :     :                       :- *(10) Project [customer_sk#13328]
                        :     :     :     :                       :  +- *(10) BroadcastHashJoin [sold_date_sk#13327], [d_date_sk#24], Inner, BuildRight, false
                        :     :     :     :                       :     :- *(10) Project [sold_date_sk#13327, customer_sk#13328]
                        :     :     :     :                       :     :  +- *(10) BroadcastHashJoin [item_sk#13329], [i_item_sk#437], Inner, BuildRight, false
                        :     :     :     :                       :     :     :- Union
                        :     :     :     :                       :     :     :  :- *(8) Project [cs_sold_date_sk#197 AS sold_date_sk#13327, cs_bill_customer_sk#200 AS customer_sk#13328, cs_item_sk#212 AS item_sk#13329]
                        :     :     :     :                       :     :     :  :  +- *(8) Filter ((isnotnull(cs_item_sk#212) AND isnotnull(cs_sold_date_sk#197)) AND isnotnull(cs_bill_customer_sk#200))
                        :     :     :     :                       :     :     :  :     +- *(8) ColumnarToRow
                        :     :     :     :                       :     :     :  :        +- FileScan parquet default.catalog_sales[cs_sold_date_sk#197,cs_bill_customer_sk#200,cs_item_sk#212] Batched: true, DataFilters: [isnotnull(cs_item_sk#212), isnotnull(cs_sold_date_sk#197), isnotnull(cs_bill_customer_sk#200)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_item_sk), IsNotNull(cs_sold_date_sk), IsNotNull(cs_bill_customer_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_bill_customer_sk:int,cs_item_sk:int>
                        :     :     :     :                       :     :     :  +- *(9) Project [ws_sold_date_sk#163 AS sold_date_sk#13330, ws_bill_customer_sk#167 AS customer_sk#13331, ws_item_sk#166 AS item_sk#13332]
                        :     :     :     :                       :     :     :     +- *(9) Filter ((isnotnull(ws_item_sk#166) AND isnotnull(ws_sold_date_sk#163)) AND isnotnull(ws_bill_customer_sk#167))
                        :     :     :     :                       :     :     :        +- *(9) ColumnarToRow
                        :     :     :     :                       :     :     :           +- FileScan parquet default.web_sales[ws_sold_date_sk#163,ws_item_sk#166,ws_bill_customer_sk#167] Batched: true, DataFilters: [isnotnull(ws_item_sk#166), isnotnull(ws_sold_date_sk#163), isnotnull(ws_bill_customer_sk#167)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_item_sk), IsNotNull(ws_sold_date_sk), IsNotNull(ws_bill_customer_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_bill_customer_sk:int>
                        :     :     :     :                       :     :     +- BroadcastQueryStage 0
                        :     :     :     :                       :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=95963]
                        :     :     :     :                       :     :           +- *(1) Project [i_item_sk#437]
                        :     :     :     :                       :     :              +- *(1) Filter ((((isnotnull(i_category#449) AND isnotnull(i_class#447)) AND (i_category#449 = Women                                             )) AND (i_class#447 = maternity                                         )) AND isnotnull(i_item_sk#437))
                        :     :     :     :                       :     :                 +- *(1) ColumnarToRow
                        :     :     :     :                       :     :                    +- FileScan parquet default.item[i_item_sk#437,i_class#447,i_category#449] Batched: true, DataFilters: [isnotnull(i_category#449), isnotnull(i_class#447), (i_category#449 = Women                      ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), IsNotNull(i_class), EqualTo(i_category,Women                             ..., ReadSchema: struct<i_item_sk:int,i_class:string,i_category:string>
                        :     :     :     :                       :     +- BroadcastQueryStage 1
                        :     :     :     :                       :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=95984]
                        :     :     :     :                       :           +- *(2) Project [d_date_sk#24]
                        :     :     :     :                       :              +- *(2) Filter ((((isnotnull(d_moy#32) AND isnotnull(d_year#30)) AND (d_moy#32 = 12)) AND (d_year#30 = 1998)) AND isnotnull(d_date_sk#24))
                        :     :     :     :                       :                 +- *(2) ColumnarToRow
                        :     :     :     :                       :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30,d_moy#32] Batched: true, DataFilters: [isnotnull(d_moy#32), isnotnull(d_year#30), (d_moy#32 = 12), (d_year#30 = 1998), isnotnull(d_date..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_moy), IsNotNull(d_year), EqualTo(d_moy,12), EqualTo(d_year,1998), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                        :     :     :     :                       +- BroadcastQueryStage 2
                        :     :     :     :                          +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=96003]
                        :     :     :     :                             +- *(3) Filter (isnotnull(c_customer_sk#81) AND isnotnull(c_current_addr_sk#85))
                        :     :     :     :                                +- *(3) ColumnarToRow
                        :     :     :     :                                   +- FileScan parquet default.customer[c_customer_sk#81,c_current_addr_sk#85] Batched: true, DataFilters: [isnotnull(c_customer_sk#81), isnotnull(c_current_addr_sk#85)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int>
                        :     :     :     +- ShuffleQueryStage 3
                        :     :     :        +- Exchange hashpartitioning(ss_customer_sk#417, 20), ENSURE_REQUIREMENTS, [plan_id=96024]
                        :     :     :           +- *(4) Filter (isnotnull(ss_customer_sk#417) AND isnotnull(ss_sold_date_sk#414))
                        :     :     :              +- *(4) ColumnarToRow
                        :     :     :                 +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_customer_sk#417,ss_ext_sales_price#429] Batched: true, DataFilters: [isnotnull(ss_customer_sk#417), isnotnull(ss_sold_date_sk#414)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_customer_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_ext_sales_price:decimal(7,2)>
                        :     :     +- BroadcastQueryStage 4
                        :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=96042]
                        :     :           +- *(5) Filter ((isnotnull(ca_address_sk#3717) AND isnotnull(ca_county#3724)) AND isnotnull(ca_state#3725))
                        :     :              +- *(5) ColumnarToRow
                        :     :                 +- FileScan parquet default.customer_address[ca_address_sk#3717,ca_county#3724,ca_state#3725] Batched: true, DataFilters: [isnotnull(ca_address_sk#3717), isnotnull(ca_county#3724), isnotnull(ca_state#3725)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_county), IsNotNull(ca_state)], ReadSchema: struct<ca_address_sk:int,ca_county:string,ca_state:string>
                        :     +- BroadcastQueryStage 5
                        :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, false], input[1, string, false]),false), [plan_id=96059]
                        :           +- *(6) Filter (isnotnull(s_county#75) AND isnotnull(s_state#76))
                        :              +- *(6) ColumnarToRow
                        :                 +- FileScan parquet default.store[s_county#75,s_state#76] Batched: true, DataFilters: [isnotnull(s_county#75), isnotnull(s_state#76)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_county), IsNotNull(s_state)], ReadSchema: struct<s_county:string,s_state:string>
                        +- BroadcastQueryStage 6
                           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=96078]
                              +- *(7) Project [d_date_sk#13338]
                                 +- *(7) Filter (((isnotnull(d_month_seq#13341) AND (d_month_seq#13341 >= Subquery subquery#13334, [id=#95763])) AND (d_month_seq#13341 <= Subquery subquery#13335, [id=#95776])) AND isnotnull(d_date_sk#13338))
                                    :  :- Subquery subquery#13334, [id=#95763]
                                    :  :  +- AdaptiveSparkPlan isFinalPlan=true
                                          +- == Final Plan ==
                                             *(2) HashAggregate(keys=[(d_month_seq + 1)#13366], functions=[], output=[(d_month_seq + 1)#13366])
                                             +- ShuffleQueryStage 0
                                                +- Exchange hashpartitioning((d_month_seq + 1)#13366, 20), ENSURE_REQUIREMENTS, [plan_id=96116]
                                                   +- *(1) HashAggregate(keys=[(d_month_seq + 1)#13366], functions=[], output=[(d_month_seq + 1)#13366])
                                                      +- *(1) Project [(d_month_seq#13372 + 1) AS (d_month_seq + 1)#13366]
                                                         +- *(1) Filter (((isnotnull(d_year#13375) AND isnotnull(d_moy#13377)) AND (d_year#13375 = 1998)) AND (d_moy#13377 = 12))
                                                            +- *(1) ColumnarToRow
                                                               +- FileScan parquet default.date_dim[d_month_seq#13372,d_year#13375,d_moy#13377] Batched: true, DataFilters: [isnotnull(d_year#13375), isnotnull(d_moy#13377), (d_year#13375 = 1998), (d_moy#13377 = 12)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1998), EqualTo(d_moy,12)], ReadSchema: struct<d_month_seq:int,d_year:int,d_moy:int>
                                          +- == Initial Plan ==
                                             HashAggregate(keys=[(d_month_seq + 1)#13366], functions=[], output=[(d_month_seq + 1)#13366])
                                             +- Exchange hashpartitioning((d_month_seq + 1)#13366, 20), ENSURE_REQUIREMENTS, [plan_id=95761]
                                                +- HashAggregate(keys=[(d_month_seq + 1)#13366], functions=[], output=[(d_month_seq + 1)#13366])
                                                   +- Project [(d_month_seq#13372 + 1) AS (d_month_seq + 1)#13366]
                                                      +- Filter (((isnotnull(d_year#13375) AND isnotnull(d_moy#13377)) AND (d_year#13375 = 1998)) AND (d_moy#13377 = 12))
                                                         +- FileScan parquet default.date_dim[d_month_seq#13372,d_year#13375,d_moy#13377] Batched: true, DataFilters: [isnotnull(d_year#13375), isnotnull(d_moy#13377), (d_year#13375 = 1998), (d_moy#13377 = 12)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1998), EqualTo(d_moy,12)], ReadSchema: struct<d_month_seq:int,d_year:int,d_moy:int>
                                    :  +- Subquery subquery#13335, [id=#95776]
                                    :     +- AdaptiveSparkPlan isFinalPlan=true
                                          +- == Final Plan ==
                                             *(2) HashAggregate(keys=[(d_month_seq + 3)#13367], functions=[], output=[(d_month_seq + 3)#13367])
                                             +- ShuffleQueryStage 0
                                                +- Exchange hashpartitioning((d_month_seq + 3)#13367, 20), ENSURE_REQUIREMENTS, [plan_id=96126]
                                                   +- *(1) HashAggregate(keys=[(d_month_seq + 3)#13367], functions=[], output=[(d_month_seq + 3)#13367])
                                                      +- *(1) Project [(d_month_seq#13400 + 3) AS (d_month_seq + 3)#13367]
                                                         +- *(1) Filter (((isnotnull(d_year#13403) AND isnotnull(d_moy#13405)) AND (d_year#13403 = 1998)) AND (d_moy#13405 = 12))
                                                            +- *(1) ColumnarToRow
                                                               +- FileScan parquet default.date_dim[d_month_seq#13400,d_year#13403,d_moy#13405] Batched: true, DataFilters: [isnotnull(d_year#13403), isnotnull(d_moy#13405), (d_year#13403 = 1998), (d_moy#13405 = 12)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1998), EqualTo(d_moy,12)], ReadSchema: struct<d_month_seq:int,d_year:int,d_moy:int>
                                          +- == Initial Plan ==
                                             HashAggregate(keys=[(d_month_seq + 3)#13367], functions=[], output=[(d_month_seq + 3)#13367])
                                             +- Exchange hashpartitioning((d_month_seq + 3)#13367, 20), ENSURE_REQUIREMENTS, [plan_id=95774]
                                                +- HashAggregate(keys=[(d_month_seq + 3)#13367], functions=[], output=[(d_month_seq + 3)#13367])
                                                   +- Project [(d_month_seq#13400 + 3) AS (d_month_seq + 3)#13367]
                                                      +- Filter (((isnotnull(d_year#13403) AND isnotnull(d_moy#13405)) AND (d_year#13403 = 1998)) AND (d_moy#13405 = 12))
                                                         +- FileScan parquet default.date_dim[d_month_seq#13400,d_year#13403,d_moy#13405] Batched: true, DataFilters: [isnotnull(d_year#13403), isnotnull(d_moy#13405), (d_year#13403 = 1998), (d_moy#13405 = 12)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1998), EqualTo(d_moy,12)], ReadSchema: struct<d_month_seq:int,d_year:int,d_moy:int>
                                    +- *(7) ColumnarToRow
                                       +- FileScan parquet default.date_dim[d_date_sk#13338,d_month_seq#13341] Batched: true, DataFilters: [isnotnull(d_month_seq#13341), isnotnull(d_date_sk#13338)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_month_seq:int>


==== q55 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[ext_price#13444 DESC NULLS LAST,brand_id#13442 ASC NULLS FIRST], output=[brand_id#13442,brand#13443,ext_price#13444])
   +- *(4) HashAggregate(keys=[i_brand#445, i_brand_id#444], functions=[sum(UnscaledValue(ss_ext_sales_price#429))], output=[brand_id#13442, brand#13443, ext_price#13444])
      +- ShuffleQueryStage 2
         +- Exchange hashpartitioning(i_brand#445, i_brand_id#444, 20), ENSURE_REQUIREMENTS, [plan_id=97470]
            +- *(3) HashAggregate(keys=[i_brand#445, i_brand_id#444], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#429))], output=[i_brand#445, i_brand_id#444, sum#13450L])
               +- *(3) Project [ss_ext_sales_price#429, i_brand_id#444, i_brand#445]
                  +- *(3) BroadcastHashJoin [ss_item_sk#416], [i_item_sk#437], Inner, BuildRight, false
                     :- *(3) Project [ss_item_sk#416, ss_ext_sales_price#429]
                     :  +- *(3) BroadcastHashJoin [d_date_sk#24], [ss_sold_date_sk#414], Inner, BuildLeft, false
                     :     :- BroadcastQueryStage 0
                     :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=97328]
                     :     :     +- *(1) Project [d_date_sk#24]
                     :     :        +- *(1) Filter ((((isnotnull(d_moy#32) AND isnotnull(d_year#30)) AND (d_moy#32 = 11)) AND (d_year#30 = 1999)) AND isnotnull(d_date_sk#24))
                     :     :           +- *(1) ColumnarToRow
                     :     :              +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30,d_moy#32] Batched: true, DataFilters: [isnotnull(d_moy#32), isnotnull(d_year#30), (d_moy#32 = 11), (d_year#30 = 1999), isnotnull(d_date..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_moy), IsNotNull(d_year), EqualTo(d_moy,11), EqualTo(d_year,1999), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                     :     +- *(3) Filter (isnotnull(ss_sold_date_sk#414) AND isnotnull(ss_item_sk#416))
                     :        +- *(3) ColumnarToRow
                     :           +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_item_sk#416,ss_ext_sales_price#429] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#414), isnotnull(ss_item_sk#416)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_ext_sales_price:decimal(7,2)>
                     +- BroadcastQueryStage 1
                        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=97349]
                           +- *(2) Project [i_item_sk#437, i_brand_id#444, i_brand#445]
                              +- *(2) Filter ((isnotnull(i_manager_id#457) AND (i_manager_id#457 = 28)) AND isnotnull(i_item_sk#437))
                                 +- *(2) ColumnarToRow
                                    +- FileScan parquet default.item[i_item_sk#437,i_brand_id#444,i_brand#445,i_manager_id#457] Batched: true, DataFilters: [isnotnull(i_manager_id#457), (i_manager_id#457 = 28), isnotnull(i_item_sk#437)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_manager_id), EqualTo(i_manager_id,28), IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_brand:string,i_manager_id:int>


==== q56 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[total_sales#13454 ASC NULLS FIRST], output=[i_item_id#438,total_sales#13454])
   +- *(20) HashAggregate(keys=[i_item_id#438], functions=[sum(total_sales#13455)], output=[i_item_id#438, total_sales#13454])
      +- ShuffleQueryStage 23
         +- Exchange hashpartitioning(i_item_id#438, 20), ENSURE_REQUIREMENTS, [plan_id=99344]
            +- *(19) HashAggregate(keys=[i_item_id#438], functions=[partial_sum(total_sales#13455)], output=[i_item_id#438, sum#13667, isEmpty#13668])
               +- Union
                  :- *(16) HashAggregate(keys=[i_item_id#438], functions=[sum(UnscaledValue(ss_ext_sales_price#429))], output=[i_item_id#438, total_sales#13455])
                  :  +- ShuffleQueryStage 20
                  :     +- Exchange hashpartitioning(i_item_id#438, 20), ENSURE_REQUIREMENTS, [plan_id=99132]
                  :        +- *(13) HashAggregate(keys=[i_item_id#438], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#429))], output=[i_item_id#438, sum#13670L])
                  :           +- *(13) Project [ss_ext_sales_price#429, i_item_id#438]
                  :              +- *(13) BroadcastHashJoin [ss_item_sk#416], [i_item_sk#437], Inner, BuildRight, false
                  :                 :- *(13) Project [ss_item_sk#416, ss_ext_sales_price#429]
                  :                 :  +- *(13) BroadcastHashJoin [ss_addr_sk#420], [ca_address_sk#3717], Inner, BuildRight, false
                  :                 :     :- *(13) Project [ss_item_sk#416, ss_addr_sk#420, ss_ext_sales_price#429]
                  :                 :     :  +- *(13) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#24], Inner, BuildRight, false
                  :                 :     :     :- *(13) Filter ((isnotnull(ss_sold_date_sk#414) AND isnotnull(ss_addr_sk#420)) AND isnotnull(ss_item_sk#416))
                  :                 :     :     :  +- *(13) ColumnarToRow
                  :                 :     :     :     +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_item_sk#416,ss_addr_sk#420,ss_ext_sales_price#429] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#414), isnotnull(ss_addr_sk#420), isnotnull(ss_item_sk#416)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_addr_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>
                  :                 :     :     +- BroadcastQueryStage 0
                  :                 :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=97976]
                  :                 :     :           +- *(1) Project [d_date_sk#24]
                  :                 :     :              +- *(1) Filter ((((isnotnull(d_year#30) AND isnotnull(d_moy#32)) AND (d_year#30 = 2001)) AND (d_moy#32 = 2)) AND isnotnull(d_date_sk#24))
                  :                 :     :                 +- *(1) ColumnarToRow
                  :                 :     :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30,d_moy#32] Batched: true, DataFilters: [isnotnull(d_year#30), isnotnull(d_moy#32), (d_year#30 = 2001), (d_moy#32 = 2), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,2001), EqualTo(d_moy,2), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                  :                 :     +- BroadcastQueryStage 1
                  :                 :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=97997]
                  :                 :           +- *(2) Project [ca_address_sk#3717]
                  :                 :              +- *(2) Filter ((isnotnull(ca_gmt_offset#3728) AND (ca_gmt_offset#3728 = -5.00)) AND isnotnull(ca_address_sk#3717))
                  :                 :                 +- *(2) ColumnarToRow
                  :                 :                    +- FileScan parquet default.customer_address[ca_address_sk#3717,ca_gmt_offset#3728] Batched: true, DataFilters: [isnotnull(ca_gmt_offset#3728), (ca_gmt_offset#3728 = -5.00), isnotnull(ca_address_sk#3717)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_gmt_offset), EqualTo(ca_gmt_offset,-5.00), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>
                  :                 +- BroadcastQueryStage 15
                  :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=98845]
                  :                       +- *(10) BroadcastHashJoin [i_item_id#438], [i_item_id#13588], LeftSemi, BuildRight, false
                  :                          :- *(10) Filter isnotnull(i_item_sk#437)
                  :                          :  +- *(10) ColumnarToRow
                  :                          :     +- FileScan parquet default.item[i_item_sk#437,i_item_id#438] Batched: true, DataFilters: [isnotnull(i_item_sk#437)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string>
                  :                          +- BroadcastQueryStage 2
                  :                             +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=98018]
                  :                                +- *(3) Project [i_item_id#13588]
                  :                                   +- *(3) Filter i_color#13604 IN (slate               ,blanched            ,burnished           )
                  :                                      +- *(3) ColumnarToRow
                  :                                         +- FileScan parquet default.item[i_item_id#13588,i_color#13604] Batched: true, DataFilters: [i_color#13604 IN (slate               ,blanched            ,burnished           )], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [In(i_color, [blanched            ,burnished           ,slate               ])], ReadSchema: struct<i_item_id:string,i_color:string>
                  :- *(17) HashAggregate(keys=[i_item_id#13503], functions=[sum(UnscaledValue(cs_ext_sales_price#220))], output=[i_item_id#13503, total_sales#13457])
                  :  +- ShuffleQueryStage 21
                  :     +- Exchange hashpartitioning(i_item_id#13503, 20), ENSURE_REQUIREMENTS, [plan_id=99183]
                  :        +- *(14) HashAggregate(keys=[i_item_id#13503], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#220))], output=[i_item_id#13503, sum#13672L])
                  :           +- *(14) Project [cs_ext_sales_price#220, i_item_id#13503]
                  :              +- *(14) BroadcastHashJoin [cs_item_sk#212], [i_item_sk#13502], Inner, BuildRight, false
                  :                 :- *(14) Project [cs_item_sk#212, cs_ext_sales_price#220]
                  :                 :  +- *(14) BroadcastHashJoin [cs_bill_addr_sk#203], [ca_address_sk#13489], Inner, BuildRight, false
                  :                 :     :- *(14) Project [cs_bill_addr_sk#203, cs_item_sk#212, cs_ext_sales_price#220]
                  :                 :     :  +- *(14) BroadcastHashJoin [cs_sold_date_sk#197], [d_date_sk#13461], Inner, BuildRight, false
                  :                 :     :     :- *(14) Filter ((isnotnull(cs_sold_date_sk#197) AND isnotnull(cs_bill_addr_sk#203)) AND isnotnull(cs_item_sk#212))
                  :                 :     :     :  +- *(14) ColumnarToRow
                  :                 :     :     :     +- FileScan parquet default.catalog_sales[cs_sold_date_sk#197,cs_bill_addr_sk#203,cs_item_sk#212,cs_ext_sales_price#220] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#197), isnotnull(cs_bill_addr_sk#203), isnotnull(cs_item_sk#212)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk), IsNotNull(cs_bill_addr_sk), IsNotNull(cs_item_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_bill_addr_sk:int,cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>
                  :                 :     :     +- BroadcastQueryStage 4
                  :                 :     :        +- ReusedExchange [d_date_sk#13461], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=97976]
                  :                 :     +- BroadcastQueryStage 6
                  :                 :        +- ReusedExchange [ca_address_sk#13489], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=97997]
                  :                 +- BroadcastQueryStage 17
                  :                    +- ReusedExchange [i_item_sk#13502, i_item_id#13503], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=98845]
                  +- *(18) HashAggregate(keys=[i_item_id#13566], functions=[sum(UnscaledValue(ws_ext_sales_price#186))], output=[i_item_id#13566, total_sales#13459])
                     +- ShuffleQueryStage 22
                        +- Exchange hashpartitioning(i_item_id#13566, 20), ENSURE_REQUIREMENTS, [plan_id=99234]
                           +- *(15) HashAggregate(keys=[i_item_id#13566], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#186))], output=[i_item_id#13566, sum#13674L])
                              +- *(15) Project [ws_ext_sales_price#186, i_item_id#13566]
                                 +- *(15) BroadcastHashJoin [ws_item_sk#166], [i_item_sk#13565], Inner, BuildRight, false
                                    :- *(15) Project [ws_item_sk#166, ws_ext_sales_price#186]
                                    :  +- *(15) BroadcastHashJoin [ws_bill_addr_sk#170], [ca_address_sk#13552], Inner, BuildRight, false
                                    :     :- *(15) Project [ws_item_sk#166, ws_bill_addr_sk#170, ws_ext_sales_price#186]
                                    :     :  +- *(15) BroadcastHashJoin [ws_sold_date_sk#163], [d_date_sk#13524], Inner, BuildRight, false
                                    :     :     :- *(15) Filter ((isnotnull(ws_sold_date_sk#163) AND isnotnull(ws_bill_addr_sk#170)) AND isnotnull(ws_item_sk#166))
                                    :     :     :  +- *(15) ColumnarToRow
                                    :     :     :     +- FileScan parquet default.web_sales[ws_sold_date_sk#163,ws_item_sk#166,ws_bill_addr_sk#170,ws_ext_sales_price#186] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#163), isnotnull(ws_bill_addr_sk#170), isnotnull(ws_item_sk#166)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_bill_addr_sk), IsNotNull(ws_item_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>
                                    :     :     +- BroadcastQueryStage 10
                                    :     :        +- ReusedExchange [d_date_sk#13524], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=97976]
                                    :     +- BroadcastQueryStage 12
                                    :        +- ReusedExchange [ca_address_sk#13552], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=97997]
                                    +- BroadcastQueryStage 19
                                       +- ReusedExchange [i_item_sk#13565, i_item_id#13566], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=98845]


==== q57 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[CheckOverflow((promote_precision(cast(sum_sales#13703 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#13704 as decimal(22,6)))), DecimalType(22,6)) ASC NULLS FIRST,cc_name#7126 ASC NULLS FIRST], output=[i_category#449,i_brand#445,cc_name#7126,d_year#30,d_moy#32,avg_monthly_sales#13704,sum_sales#13703,psum#13706,nsum#13707])
   +- *(22) Project [i_category#449, i_brand#445, cc_name#7126, d_year#30, d_moy#32, avg_monthly_sales#13704, sum_sales#13703, sum_sales#13727 AS psum#13706, sum_sales#13735 AS nsum#13707]
      +- *(22) BroadcastHashJoin [i_category#449, i_brand#445, cc_name#7126, rn#13705], [i_category#14119, i_brand#14115, cc_name#14197, (rn#14226 - 1)], Inner, BuildRight, false
         :- *(22) Project [i_category#449, i_brand#445, cc_name#7126, d_year#30, d_moy#32, sum_sales#13703, avg_monthly_sales#13704, rn#13705, sum_sales#13727]
         :  +- *(22) BroadcastHashJoin [i_category#449, i_brand#445, cc_name#7126, rn#13705], [i_category#13999, i_brand#13995, cc_name#14077, (rn#14106 + 1)], Inner, BuildLeft, false
         :     :- BroadcastQueryStage 24
         :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true], input[1, string, true], input[2, string, true], input[7, int, false]),false), [plan_id=101712]
         :     :     +- *(18) Project [i_category#449, i_brand#445, cc_name#7126, d_year#30, d_moy#32, sum_sales#13703, avg_monthly_sales#13704, rn#13705]
         :     :        +- *(18) Filter ((isnotnull(avg_monthly_sales#13704) AND (avg_monthly_sales#13704 > 0.000000)) AND CASE WHEN (avg_monthly_sales#13704 > 0.000000) THEN (CheckOverflow((promote_precision(abs(CheckOverflow((promote_precision(cast(sum_sales#13703 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#13704 as decimal(22,6)))), DecimalType(22,6)))) / promote_precision(cast(avg_monthly_sales#13704 as decimal(22,6)))), DecimalType(38,16)) > 0.1000000000000000) END)
         :     :           +- Window [avg(_w0#13721) windowspecdefinition(i_category#449, i_brand#445, cc_name#7126, d_year#30, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#13704], [i_category#449, i_brand#445, cc_name#7126, d_year#30]
         :     :              +- *(17) Filter (isnotnull(d_year#30) AND (d_year#30 = 1999))
         :     :                 +- Window [rank(d_year#30, d_moy#32) windowspecdefinition(i_category#449, i_brand#445, cc_name#7126, d_year#30 ASC NULLS FIRST, d_moy#32 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#13705], [i_category#449, i_brand#445, cc_name#7126], [d_year#30 ASC NULLS FIRST, d_moy#32 ASC NULLS FIRST]
         :     :                    +- *(16) Sort [i_category#449 ASC NULLS FIRST, i_brand#445 ASC NULLS FIRST, cc_name#7126 ASC NULLS FIRST, d_year#30 ASC NULLS FIRST, d_moy#32 ASC NULLS FIRST], false, 0
         :     :                       +- ShuffleQueryStage 20
         :     :                          +- Exchange hashpartitioning(i_category#449, i_brand#445, cc_name#7126, 20), ENSURE_REQUIREMENTS, [plan_id=101430]
         :     :                             +- *(13) HashAggregate(keys=[i_category#449, i_brand#445, cc_name#7126, d_year#30, d_moy#32], functions=[sum(UnscaledValue(cs_sales_price#218))], output=[i_category#449, i_brand#445, cc_name#7126, d_year#30, d_moy#32, sum_sales#13703, _w0#13721])
         :     :                                +- ShuffleQueryStage 15
         :     :                                   +- Exchange hashpartitioning(i_category#449, i_brand#445, cc_name#7126, d_year#30, d_moy#32, 20), ENSURE_REQUIREMENTS, [plan_id=101059]
         :     :                                      +- *(10) HashAggregate(keys=[i_category#449, i_brand#445, cc_name#7126, d_year#30, d_moy#32], functions=[partial_sum(UnscaledValue(cs_sales_price#218))], output=[i_category#449, i_brand#445, cc_name#7126, d_year#30, d_moy#32, sum#14228L])
         :     :                                         +- *(10) Project [i_brand#445, i_category#449, cs_sales_price#218, d_year#30, d_moy#32, cc_name#7126]
         :     :                                            +- *(10) BroadcastHashJoin [cs_call_center_sk#208], [cc_call_center_sk#7120], Inner, BuildRight, false
         :     :                                               :- *(10) Project [i_brand#445, i_category#449, cs_call_center_sk#208, cs_sales_price#218, d_year#30, d_moy#32]
         :     :                                               :  +- *(10) BroadcastHashJoin [cs_sold_date_sk#197], [d_date_sk#24], Inner, BuildRight, false
         :     :                                               :     :- *(10) Project [i_brand#445, i_category#449, cs_sold_date_sk#197, cs_call_center_sk#208, cs_sales_price#218]
         :     :                                               :     :  +- *(10) BroadcastHashJoin [i_item_sk#437], [cs_item_sk#212], Inner, BuildLeft, false
         :     :                                               :     :     :- BroadcastQueryStage 0
         :     :                                               :     :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=99790]
         :     :                                               :     :     :     +- *(1) Filter ((isnotnull(i_item_sk#437) AND isnotnull(i_category#449)) AND isnotnull(i_brand#445))
         :     :                                               :     :     :        +- *(1) ColumnarToRow
         :     :                                               :     :     :           +- FileScan parquet default.item[i_item_sk#437,i_brand#445,i_category#449] Batched: true, DataFilters: [isnotnull(i_item_sk#437), isnotnull(i_category#449), isnotnull(i_brand#445)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_category), IsNotNull(i_brand)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_category:string>
         :     :                                               :     :     +- *(10) Filter ((isnotnull(cs_item_sk#212) AND isnotnull(cs_sold_date_sk#197)) AND isnotnull(cs_call_center_sk#208))
         :     :                                               :     :        +- *(10) ColumnarToRow
         :     :                                               :     :           +- FileScan parquet default.catalog_sales[cs_sold_date_sk#197,cs_call_center_sk#208,cs_item_sk#212,cs_sales_price#218] Batched: true, DataFilters: [isnotnull(cs_item_sk#212), isnotnull(cs_sold_date_sk#197), isnotnull(cs_call_center_sk#208)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_item_sk), IsNotNull(cs_sold_date_sk), IsNotNull(cs_call_center_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_call_center_sk:int,cs_item_sk:int,cs_sales_price:decimal(7,2)>
         :     :                                               :     +- BroadcastQueryStage 1
         :     :                                               :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=99807]
         :     :                                               :           +- *(2) Filter ((((d_year#30 = 1999) OR ((d_year#30 = 1998) AND (d_moy#32 = 12))) OR ((d_year#30 = 2000) AND (d_moy#32 = 1))) AND isnotnull(d_date_sk#24))
         :     :                                               :              +- *(2) ColumnarToRow
         :     :                                               :                 +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30,d_moy#32] Batched: true, DataFilters: [(((d_year#30 = 1999) OR ((d_year#30 = 1998) AND (d_moy#32 = 12))) OR ((d_year#30 = 2000) AND (d_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [Or(Or(EqualTo(d_year,1999),And(EqualTo(d_year,1998),EqualTo(d_moy,12))),And(EqualTo(d_year,2000)..., ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
         :     :                                               +- BroadcastQueryStage 2
         :     :                                                  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=99824]
         :     :                                                     +- *(3) Filter (isnotnull(cc_call_center_sk#7120) AND isnotnull(cc_name#7126))
         :     :                                                        +- *(3) ColumnarToRow
         :     :                                                           +- FileScan parquet default.call_center[cc_call_center_sk#7120,cc_name#7126] Batched: true, DataFilters: [isnotnull(cc_call_center_sk#7120), isnotnull(cc_name#7126)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/call_center], PartitionFilters: [], PushedFilters: [IsNotNull(cc_call_center_sk), IsNotNull(cc_name)], ReadSchema: struct<cc_call_center_sk:int,cc_name:string>
         :     +- *(22) Project [i_category#13999, i_brand#13995, cc_name#14077, sum_sales#13703 AS sum_sales#13727, rn#14106]
         :        +- Window [rank(d_year#14049, d_moy#14051) windowspecdefinition(i_category#13999, i_brand#13995, cc_name#14077, d_year#14049 ASC NULLS FIRST, d_moy#14051 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#14106], [i_category#13999, i_brand#13995, cc_name#14077], [d_year#14049 ASC NULLS FIRST, d_moy#14051 ASC NULLS FIRST]
         :           +- *(21) Sort [i_category#13999 ASC NULLS FIRST, i_brand#13995 ASC NULLS FIRST, cc_name#14077 ASC NULLS FIRST, d_year#14049 ASC NULLS FIRST, d_moy#14051 ASC NULLS FIRST], false, 0
         :              +- ShuffleQueryStage 21
         :                 +- Exchange hashpartitioning(i_category#13999, i_brand#13995, cc_name#14077, 20), ENSURE_REQUIREMENTS, [plan_id=101459]
         :                    +- *(14) HashAggregate(keys=[i_category#13999, i_brand#13995, cc_name#14077, d_year#14049, d_moy#14051], functions=[sum(UnscaledValue(cs_sales_price#14030))], output=[i_category#13999, i_brand#13995, cc_name#14077, d_year#14049, d_moy#14051, sum_sales#13703])
         :                       +- ShuffleQueryStage 17
         :                          +- ReusedExchange [i_category#13999, i_brand#13995, cc_name#14077, d_year#14049, d_moy#14051, sum#14230L], Exchange hashpartitioning(i_category#449, i_brand#445, cc_name#7126, d_year#30, d_moy#32, 20), ENSURE_REQUIREMENTS, [plan_id=101059]
         +- BroadcastQueryStage 25
            +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true], input[1, string, true], input[2, string, true], (input[4, int, false] - 1)),false), [plan_id=101805]
               +- *(20) Project [i_category#14119, i_brand#14115, cc_name#14197, sum_sales#13703 AS sum_sales#13735, rn#14226]
                  +- Window [rank(d_year#14169, d_moy#14171) windowspecdefinition(i_category#14119, i_brand#14115, cc_name#14197, d_year#14169 ASC NULLS FIRST, d_moy#14171 ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rn#14226], [i_category#14119, i_brand#14115, cc_name#14197], [d_year#14169 ASC NULLS FIRST, d_moy#14171 ASC NULLS FIRST]
                     +- *(19) Sort [i_category#14119 ASC NULLS FIRST, i_brand#14115 ASC NULLS FIRST, cc_name#14197 ASC NULLS FIRST, d_year#14169 ASC NULLS FIRST, d_moy#14171 ASC NULLS FIRST], false, 0
                        +- ShuffleQueryStage 23
                           +- ReusedExchange [i_category#14119, i_brand#14115, cc_name#14197, d_year#14169, d_moy#14171, sum_sales#13703], Exchange hashpartitioning(i_category#13999, i_brand#13995, cc_name#14077, 20), ENSURE_REQUIREMENTS, [plan_id=101459]


==== q58 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[item_id#14420 ASC NULLS FIRST,ss_item_rev#14421 ASC NULLS FIRST], output=[item_id#14420,ss_item_rev#14421,ss_dev#14416,cs_item_rev#14425,cs_dev#14417,ws_item_rev#14429,ws_dev#14418,average#14419])
   +- *(15) Project [item_id#14420, ss_item_rev#14421, CheckOverflow((promote_precision(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(ss_item_rev#14421 as decimal(19,2))) / promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_item_rev#14421 as decimal(18,2))) + promote_precision(cast(cs_item_rev#14425 as decimal(18,2)))), DecimalType(18,2)) as decimal(19,2))) + promote_precision(cast(ws_item_rev#14429 as decimal(19,2)))), DecimalType(19,2)))), DecimalType(38,21))) / 3.000000000000000000000), DecimalType(38,21))) * 100.000000000000000000000), DecimalType(38,17)) AS ss_dev#14416, cs_item_rev#14425, CheckOverflow((promote_precision(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(cs_item_rev#14425 as decimal(19,2))) / promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_item_rev#14421 as decimal(18,2))) + promote_precision(cast(cs_item_rev#14425 as decimal(18,2)))), DecimalType(18,2)) as decimal(19,2))) + promote_precision(cast(ws_item_rev#14429 as decimal(19,2)))), DecimalType(19,2)))), DecimalType(38,21))) / 3.000000000000000000000), DecimalType(38,21))) * 100.000000000000000000000), DecimalType(38,17)) AS cs_dev#14417, ws_item_rev#14429, CheckOverflow((promote_precision(CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(ws_item_rev#14429 as decimal(19,2))) / promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_item_rev#14421 as decimal(18,2))) + promote_precision(cast(cs_item_rev#14425 as decimal(18,2)))), DecimalType(18,2)) as decimal(19,2))) + promote_precision(cast(ws_item_rev#14429 as decimal(19,2)))), DecimalType(19,2)))), DecimalType(38,21))) / 3.000000000000000000000), DecimalType(38,21))) * 100.000000000000000000000), DecimalType(38,17)) AS ws_dev#14418, CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(cast(ss_item_rev#14421 as decimal(18,2))) + promote_precision(cast(cs_item_rev#14425 as decimal(18,2)))), DecimalType(18,2)) as decimal(19,2))) + promote_precision(cast(ws_item_rev#14429 as decimal(19,2)))), DecimalType(19,2))) / 3.00), DecimalType(23,6)) AS average#14419]
      +- *(15) BroadcastHashJoin [item_id#14420], [item_id#14428], Inner, BuildRight, ((((((((cast(ss_item_rev#14421 as decimal(19,3)) >= CheckOverflow((0.90 * promote_precision(ws_item_rev#14429)), DecimalType(19,3))) AND (cast(ss_item_rev#14421 as decimal(20,3)) <= CheckOverflow((1.10 * promote_precision(ws_item_rev#14429)), DecimalType(20,3)))) AND (cast(cs_item_rev#14425 as decimal(19,3)) >= CheckOverflow((0.90 * promote_precision(ws_item_rev#14429)), DecimalType(19,3)))) AND (cast(cs_item_rev#14425 as decimal(20,3)) <= CheckOverflow((1.10 * promote_precision(ws_item_rev#14429)), DecimalType(20,3)))) AND (cast(ws_item_rev#14429 as decimal(19,3)) >= CheckOverflow((0.90 * promote_precision(ss_item_rev#14421)), DecimalType(19,3)))) AND (cast(ws_item_rev#14429 as decimal(20,3)) <= CheckOverflow((1.10 * promote_precision(ss_item_rev#14421)), DecimalType(20,3)))) AND (cast(ws_item_rev#14429 as decimal(19,3)) >= CheckOverflow((0.90 * promote_precision(cs_item_rev#14425)), DecimalType(19,3)))) AND (cast(ws_item_rev#14429 as decimal(20,3)) <= CheckOverflow((1.10 * promote_precision(cs_item_rev#14425)), DecimalType(20,3)))), false
         :- *(15) Project [item_id#14420, ss_item_rev#14421, cs_item_rev#14425]
         :  +- *(15) BroadcastHashJoin [item_id#14420], [item_id#14424], Inner, BuildLeft, ((((cast(ss_item_rev#14421 as decimal(19,3)) >= CheckOverflow((0.90 * promote_precision(cs_item_rev#14425)), DecimalType(19,3))) AND (cast(ss_item_rev#14421 as decimal(20,3)) <= CheckOverflow((1.10 * promote_precision(cs_item_rev#14425)), DecimalType(20,3)))) AND (cast(cs_item_rev#14425 as decimal(19,3)) >= CheckOverflow((0.90 * promote_precision(ss_item_rev#14421)), DecimalType(19,3)))) AND (cast(cs_item_rev#14425 as decimal(20,3)) <= CheckOverflow((1.10 * promote_precision(ss_item_rev#14421)), DecimalType(20,3)))), false
         :     :- BroadcastQueryStage 18
         :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=103454]
         :     :     +- *(13) Filter isnotnull(ss_item_rev#14421)
         :     :        +- *(13) HashAggregate(keys=[i_item_id#438], functions=[sum(UnscaledValue(ss_ext_sales_price#429))], output=[item_id#14420, ss_item_rev#14421])
         :     :           +- ShuffleQueryStage 15
         :     :              +- Exchange hashpartitioning(i_item_id#438, 20), ENSURE_REQUIREMENTS, [plan_id=103276]
         :     :                 +- *(10) HashAggregate(keys=[i_item_id#438], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#429))], output=[i_item_id#438, sum#14716L])
         :     :                    +- *(10) Project [ss_ext_sales_price#429, i_item_id#438]
         :     :                       +- *(10) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#24], Inner, BuildRight, false
         :     :                          :- *(10) Project [ss_sold_date_sk#414, ss_ext_sales_price#429, i_item_id#438]
         :     :                          :  +- *(10) BroadcastHashJoin [ss_item_sk#416], [i_item_sk#437], Inner, BuildRight, false
         :     :                          :     :- *(10) Filter (isnotnull(ss_item_sk#416) AND isnotnull(ss_sold_date_sk#414))
         :     :                          :     :  +- *(10) ColumnarToRow
         :     :                          :     :     +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_item_sk#416,ss_ext_sales_price#429] Batched: true, DataFilters: [isnotnull(ss_item_sk#416), isnotnull(ss_sold_date_sk#414)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_ext_sales_price:decimal(7,2)>
         :     :                          :     +- BroadcastQueryStage 0
         :     :                          :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=102306]
         :     :                          :           +- *(1) Filter (isnotnull(i_item_sk#437) AND isnotnull(i_item_id#438))
         :     :                          :              +- *(1) ColumnarToRow
         :     :                          :                 +- FileScan parquet default.item[i_item_sk#437,i_item_id#438] Batched: true, DataFilters: [isnotnull(i_item_sk#437), isnotnull(i_item_id#438)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_item_id)], ReadSchema: struct<i_item_sk:int,i_item_id:string>
         :     :                          +- BroadcastQueryStage 10
         :     :                             +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=103009]
         :     :                                +- *(7) Project [d_date_sk#24]
         :     :                                   +- *(7) BroadcastHashJoin [d_date#26], [d_date#14622], LeftSemi, BuildRight, false
         :     :                                      :- *(7) Filter isnotnull(d_date_sk#24)
         :     :                                      :  +- *(7) ColumnarToRow
         :     :                                      :     +- FileScan parquet default.date_dim[d_date_sk#24,d_date#26] Batched: true, DataFilters: [isnotnull(d_date_sk#24)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:date>
         :     :                                      +- BroadcastQueryStage 1
         :     :                                         +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, date, true]),false), [plan_id=102325]
         :     :                                            +- *(2) Project [d_date#14622]
         :     :                                               +- *(2) Filter (isnotnull(d_week_seq#14624) AND (d_week_seq#14624 = Subquery subquery#14422, [id=#102125]))
         :     :                                                  :  +- Subquery subquery#14422, [id=#102125]
         :     :                                                  :     +- AdaptiveSparkPlan isFinalPlan=true
                                                                        +- == Final Plan ==
                                                                           *(1) Project [d_week_seq#14536]
                                                                           +- *(1) Filter (isnotnull(d_date#14534) AND (d_date#14534 = 2000-01-03))
                                                                              +- *(1) ColumnarToRow
                                                                                 +- FileScan parquet default.date_dim[d_date#14534,d_week_seq#14536] Batched: true, DataFilters: [isnotnull(d_date#14534), (d_date#14534 = 2000-01-03)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), EqualTo(d_date,2000-01-03)], ReadSchema: struct<d_date:date,d_week_seq:int>
                                                                        +- == Initial Plan ==
                                                                           Project [d_week_seq#14536]
                                                                           +- Filter (isnotnull(d_date#14534) AND (d_date#14534 = 2000-01-03))
                                                                              +- FileScan parquet default.date_dim[d_date#14534,d_week_seq#14536] Batched: true, DataFilters: [isnotnull(d_date#14534), (d_date#14534 = 2000-01-03)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), EqualTo(d_date,2000-01-03)], ReadSchema: struct<d_date:date,d_week_seq:int>
         :     :                                                  +- *(2) ColumnarToRow
         :     :                                                     +- FileScan parquet default.date_dim[d_date#14622,d_week_seq#14624] Batched: true, DataFilters: [isnotnull(d_week_seq#14624)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_week_seq)], ReadSchema: struct<d_date:date,d_week_seq:int>
         :     +- *(15) Filter isnotnull(cs_item_rev#14425)
         :        +- *(15) HashAggregate(keys=[i_item_id#14433], functions=[sum(UnscaledValue(cs_ext_sales_price#220))], output=[item_id#14424, cs_item_rev#14425])
         :           +- ShuffleQueryStage 16
         :              +- Exchange hashpartitioning(i_item_id#14433, 20), ENSURE_REQUIREMENTS, [plan_id=103327]
         :                 +- *(11) HashAggregate(keys=[i_item_id#14433], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#220))], output=[i_item_id#14433, sum#14718L])
         :                    +- *(11) Project [cs_ext_sales_price#220, i_item_id#14433]
         :                       +- *(11) BroadcastHashJoin [cs_sold_date_sk#197], [d_date_sk#14454], Inner, BuildRight, false
         :                          :- *(11) Project [cs_sold_date_sk#197, cs_ext_sales_price#220, i_item_id#14433]
         :                          :  +- *(11) BroadcastHashJoin [cs_item_sk#212], [i_item_sk#14432], Inner, BuildRight, false
         :                          :     :- *(11) Filter (isnotnull(cs_item_sk#212) AND isnotnull(cs_sold_date_sk#197))
         :                          :     :  +- *(11) ColumnarToRow
         :                          :     :     +- FileScan parquet default.catalog_sales[cs_sold_date_sk#197,cs_item_sk#212,cs_ext_sales_price#220] Batched: true, DataFilters: [isnotnull(cs_item_sk#212), isnotnull(cs_sold_date_sk#197)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_item_sk), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>
         :                          :     +- BroadcastQueryStage 3
         :                          :        +- ReusedExchange [i_item_sk#14432, i_item_id#14433], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=102306]
         :                          +- BroadcastQueryStage 12
         :                             +- ReusedExchange [d_date_sk#14454], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=103009]
         +- BroadcastQueryStage 19
            +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=103569]
               +- *(14) Filter isnotnull(ws_item_rev#14429)
                  +- *(14) HashAggregate(keys=[i_item_id#14483], functions=[sum(UnscaledValue(ws_ext_sales_price#186))], output=[item_id#14428, ws_item_rev#14429])
                     +- ShuffleQueryStage 17
                        +- Exchange hashpartitioning(i_item_id#14483, 20), ENSURE_REQUIREMENTS, [plan_id=103380]
                           +- *(12) HashAggregate(keys=[i_item_id#14483], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#186))], output=[i_item_id#14483, sum#14720L])
                              +- *(12) Project [ws_ext_sales_price#186, i_item_id#14483]
                                 +- *(12) BroadcastHashJoin [ws_sold_date_sk#163], [d_date_sk#14504], Inner, BuildRight, false
                                    :- *(12) Project [ws_sold_date_sk#163, ws_ext_sales_price#186, i_item_id#14483]
                                    :  +- *(12) BroadcastHashJoin [ws_item_sk#166], [i_item_sk#14482], Inner, BuildRight, false
                                    :     :- *(12) Filter (isnotnull(ws_item_sk#166) AND isnotnull(ws_sold_date_sk#163))
                                    :     :  +- *(12) ColumnarToRow
                                    :     :     +- FileScan parquet default.web_sales[ws_sold_date_sk#163,ws_item_sk#166,ws_ext_sales_price#186] Batched: true, DataFilters: [isnotnull(ws_item_sk#166), isnotnull(ws_sold_date_sk#163)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_item_sk), IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_ext_sales_price:decimal(7,2)>
                                    :     +- BroadcastQueryStage 7
                                    :        +- ReusedExchange [i_item_sk#14482, i_item_id#14483], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=102306]
                                    +- BroadcastQueryStage 14
                                       +- ReusedExchange [d_date_sk#14504], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=103009]



==== q59 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[s_store_name1#14737 ASC NULLS FIRST,s_store_id1#14739 ASC NULLS FIRST,d_week_seq1#14738 ASC NULLS FIRST], output=[s_store_name1#14737,s_store_id1#14739,d_week_seq1#14738,(sun_sales1 / sun_sales2)#14856,(mon_sales1 / mon_sales2)#14857,(tue_sales1 / tue_sales2)#14858,(wed_sales1 / wed_sales2)#14859,(thu_sales1 / thu_sales2)#14860,(fri_sales1 / fri_sales2)#14861,(sat_sales1 / sat_sales2)#14862])
   +- *(11) Project [s_store_name1#14737, s_store_id1#14739, d_week_seq1#14738, CheckOverflow((promote_precision(sun_sales1#14740) / promote_precision(sun_sales2#14750)), DecimalType(37,20)) AS (sun_sales1 / sun_sales2)#14856, CheckOverflow((promote_precision(mon_sales1#14741) / promote_precision(mon_sales2#14751)), DecimalType(37,20)) AS (mon_sales1 / mon_sales2)#14857, CheckOverflow((promote_precision(tue_sales1#14742) / promote_precision(tue_sales2#14752)), DecimalType(37,20)) AS (tue_sales1 / tue_sales2)#14858, CheckOverflow((promote_precision(wed_sales1#14743) / promote_precision(wed_sales2#14753)), DecimalType(37,20)) AS (wed_sales1 / wed_sales2)#14859, CheckOverflow((promote_precision(thu_sales1#14744) / promote_precision(thu_sales2#14754)), DecimalType(37,20)) AS (thu_sales1 / thu_sales2)#14860, CheckOverflow((promote_precision(fri_sales1#14745) / promote_precision(fri_sales2#14755)), DecimalType(37,20)) AS (fri_sales1 / fri_sales2)#14861, CheckOverflow((promote_precision(sat_sales1#14746) / promote_precision(sat_sales2#14756)), DecimalType(37,20)) AS (sat_sales1 / sat_sales2)#14862]
      +- *(11) BroadcastHashJoin [s_store_id1#14739, d_week_seq1#14738], [s_store_id2#14749, (d_week_seq2#14748 - 52)], Inner, BuildLeft, false
         :- BroadcastQueryStage 12
         :  +- BroadcastExchange HashedRelationBroadcastMode(List(input[2, string, true], input[1, int, true]),false), [plan_id=104853]
         :     +- AQEShuffleRead local
         :        +- ShuffleQueryStage 10
         :           +- Exchange hashpartitioning(s_store_id1#14739, d_week_seq1#14738, 20), ENSURE_REQUIREMENTS, [plan_id=104774]
         :              +- *(9) Project [s_store_name#57 AS s_store_name1#14737, d_week_seq#28 AS d_week_seq1#14738, s_store_id#53 AS s_store_id1#14739, sun_sales#14757 AS sun_sales1#14740, mon_sales#14758 AS mon_sales1#14741, tue_sales#14759 AS tue_sales1#14742, wed_sales#14760 AS wed_sales1#14743, thu_sales#14761 AS thu_sales1#14744, fri_sales#14762 AS fri_sales1#14745, sat_sales#14763 AS sat_sales1#14746]
         :                 +- *(9) BroadcastHashJoin [d_week_seq#28], [d_week_seq#14768], Inner, BuildRight, false
         :                    :- *(9) Project [d_week_seq#28, sun_sales#14757, mon_sales#14758, tue_sales#14759, wed_sales#14760, thu_sales#14761, fri_sales#14762, sat_sales#14763, s_store_id#53, s_store_name#57]
         :                    :  +- *(9) BroadcastHashJoin [ss_store_sk#421], [s_store_sk#52], Inner, BuildRight, false
         :                    :     :- *(9) HashAggregate(keys=[d_week_seq#28, ss_store_sk#421], functions=[sum(UnscaledValue(CASE WHEN (d_day_name#38 = Sunday   ) THEN ss_sales_price#427 END)), sum(UnscaledValue(CASE WHEN (d_day_name#38 = Monday   ) THEN ss_sales_price#427 END)), sum(UnscaledValue(CASE WHEN (d_day_name#38 = Tuesday  ) THEN ss_sales_price#427 END)), sum(UnscaledValue(CASE WHEN (d_day_name#38 = Wednesday) THEN ss_sales_price#427 END)), sum(UnscaledValue(CASE WHEN (d_day_name#38 = Thursday ) THEN ss_sales_price#427 END)), sum(UnscaledValue(CASE WHEN (d_day_name#38 = Friday   ) THEN ss_sales_price#427 END)), sum(UnscaledValue(CASE WHEN (d_day_name#38 = Saturday ) THEN ss_sales_price#427 END))], output=[d_week_seq#28, ss_store_sk#421, sun_sales#14757, mon_sales#14758, tue_sales#14759, wed_sales#14760, thu_sales#14761, fri_sales#14762, sat_sales#14763])
         :                    :     :  +- ShuffleQueryStage 7
         :                    :     :     +- Exchange hashpartitioning(d_week_seq#28, ss_store_sk#421, 20), ENSURE_REQUIREMENTS, [plan_id=104637]
         :                    :     :        +- *(7) HashAggregate(keys=[d_week_seq#28, ss_store_sk#421], functions=[partial_sum(UnscaledValue(CASE WHEN (d_day_name#38 = Sunday   ) THEN ss_sales_price#427 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#38 = Monday   ) THEN ss_sales_price#427 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#38 = Tuesday  ) THEN ss_sales_price#427 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#38 = Wednesday) THEN ss_sales_price#427 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#38 = Thursday ) THEN ss_sales_price#427 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#38 = Friday   ) THEN ss_sales_price#427 END)), partial_sum(UnscaledValue(CASE WHEN (d_day_name#38 = Saturday ) THEN ss_sales_price#427 END))], output=[d_week_seq#28, ss_store_sk#421, sum#14883L, sum#14884L, sum#14885L, sum#14886L, sum#14887L, sum#14888L, sum#14889L])
         :                    :     :           +- *(7) Project [ss_store_sk#421, ss_sales_price#427, d_week_seq#28, d_day_name#38]
         :                    :     :              +- *(7) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#24], Inner, BuildRight, false
         :                    :     :                 :- *(7) Filter (isnotnull(ss_sold_date_sk#414) AND isnotnull(ss_store_sk#421))
         :                    :     :                 :  +- *(7) ColumnarToRow
         :                    :     :                 :     +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_store_sk#421,ss_sales_price#427] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#414), isnotnull(ss_store_sk#421)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
         :                    :     :                 +- BroadcastQueryStage 0
         :                    :     :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=103853]
         :                    :     :                       +- *(1) Filter (isnotnull(d_date_sk#24) AND isnotnull(d_week_seq#28))
         :                    :     :                          +- *(1) ColumnarToRow
         :                    :     :                             +- FileScan parquet default.date_dim[d_date_sk#24,d_week_seq#28,d_day_name#38] Batched: true, DataFilters: [isnotnull(d_date_sk#24), isnotnull(d_week_seq#28)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date_sk), IsNotNull(d_week_seq)], ReadSchema: struct<d_date_sk:int,d_week_seq:int,d_day_name:string>
         :                    :     +- BroadcastQueryStage 1
         :                    :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=103873]
         :                    :           +- *(2) Filter (isnotnull(s_store_sk#52) AND isnotnull(s_store_id#53))
         :                    :              +- *(2) ColumnarToRow
         :                    :                 +- FileScan parquet default.store[s_store_sk#52,s_store_id#53,s_store_name#57] Batched: true, DataFilters: [isnotnull(s_store_sk#52), isnotnull(s_store_id#53)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk), IsNotNull(s_store_id)], ReadSchema: struct<s_store_sk:int,s_store_id:string,s_store_name:string>
         :                    +- BroadcastQueryStage 2
         :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=103892]
         :                          +- *(3) Project [d_week_seq#14768]
         :                             +- *(3) Filter (((isnotnull(d_month_seq#14767) AND (d_month_seq#14767 >= 1212)) AND (d_month_seq#14767 <= 1223)) AND isnotnull(d_week_seq#14768))
         :                                +- *(3) ColumnarToRow
         :                                   +- FileScan parquet default.date_dim[d_month_seq#14767,d_week_seq#14768] Batched: true, DataFilters: [isnotnull(d_month_seq#14767), (d_month_seq#14767 >= 1212), (d_month_seq#14767 <= 1223), isnotnul..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1212), LessThanOrEqual(d_month_seq,1223),..., ReadSchema: struct<d_month_seq:int,d_week_seq:int>
         +- AQEShuffleRead local
            +- ShuffleQueryStage 11
               +- Exchange hashpartitioning(s_store_id2#14749, (d_week_seq2#14748 - 52), 20), ENSURE_REQUIREMENTS, [plan_id=104814]
                  +- *(10) Project [d_week_seq#28 AS d_week_seq2#14748, s_store_id#14793 AS s_store_id2#14749, sun_sales#14757 AS sun_sales2#14750, mon_sales#14758 AS mon_sales2#14751, tue_sales#14759 AS tue_sales2#14752, wed_sales#14760 AS wed_sales2#14753, thu_sales#14761 AS thu_sales2#14754, fri_sales#14762 AS fri_sales2#14755, sat_sales#14763 AS sat_sales2#14756]
                     +- *(10) BroadcastHashJoin [d_week_seq#28], [d_week_seq#14825], Inner, BuildRight, false
                        :- *(10) Project [d_week_seq#28, sun_sales#14757, mon_sales#14758, tue_sales#14759, wed_sales#14760, thu_sales#14761, fri_sales#14762, sat_sales#14763, s_store_id#14793]
                        :  +- *(10) BroadcastHashJoin [ss_store_sk#421], [s_store_sk#14792], Inner, BuildRight, false
                        :     :- *(10) HashAggregate(keys=[d_week_seq#28, ss_store_sk#421], functions=[sum(UnscaledValue(CASE WHEN (d_day_name#38 = Sunday   ) THEN ss_sales_price#427 END)), sum(UnscaledValue(CASE WHEN (d_day_name#38 = Monday   ) THEN ss_sales_price#427 END)), sum(UnscaledValue(CASE WHEN (d_day_name#38 = Tuesday  ) THEN ss_sales_price#427 END)), sum(UnscaledValue(CASE WHEN (d_day_name#38 = Wednesday) THEN ss_sales_price#427 END)), sum(UnscaledValue(CASE WHEN (d_day_name#38 = Thursday ) THEN ss_sales_price#427 END)), sum(UnscaledValue(CASE WHEN (d_day_name#38 = Friday   ) THEN ss_sales_price#427 END)), sum(UnscaledValue(CASE WHEN (d_day_name#38 = Saturday ) THEN ss_sales_price#427 END))], output=[d_week_seq#28, ss_store_sk#421, sun_sales#14757, mon_sales#14758, tue_sales#14759, wed_sales#14760, thu_sales#14761, fri_sales#14762, sat_sales#14763])
                        :     :  +- ShuffleQueryStage 9
                        :     :     +- ReusedExchange [d_week_seq#28, ss_store_sk#421, sum#14897L, sum#14898L, sum#14899L, sum#14900L, sum#14901L, sum#14902L, sum#14903L], Exchange hashpartitioning(d_week_seq#28, ss_store_sk#421, 20), ENSURE_REQUIREMENTS, [plan_id=104637]
                        :     +- BroadcastQueryStage 5
                        :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=103972]
                        :           +- *(5) Filter (isnotnull(s_store_sk#14792) AND isnotnull(s_store_id#14793))
                        :              +- *(5) ColumnarToRow
                        :                 +- FileScan parquet default.store[s_store_sk#14792,s_store_id#14793] Batched: true, DataFilters: [isnotnull(s_store_sk#14792), isnotnull(s_store_id#14793)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk), IsNotNull(s_store_id)], ReadSchema: struct<s_store_sk:int,s_store_id:string>
                        +- BroadcastQueryStage 6
                           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=103991]
                              +- *(6) Project [d_week_seq#14825]
                                 +- *(6) Filter (((isnotnull(d_month_seq#14824) AND (d_month_seq#14824 >= 1224)) AND (d_month_seq#14824 <= 1235)) AND isnotnull(d_week_seq#14825))
                                    +- *(6) ColumnarToRow
                                       +- FileScan parquet default.date_dim[d_month_seq#14824,d_week_seq#14825] Batched: true, DataFilters: [isnotnull(d_month_seq#14824), (d_month_seq#14824 >= 1224), (d_month_seq#14824 <= 1235), isnotnul..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1224), LessThanOrEqual(d_month_seq,1235),..., ReadSchema: struct<d_month_seq:int,d_week_seq:int>


==== q60 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[i_item_id#438 ASC NULLS FIRST,total_sales#14974 ASC NULLS FIRST], output=[i_item_id#438,total_sales#14974])
   +- *(20) HashAggregate(keys=[i_item_id#438], functions=[sum(total_sales#14975)], output=[i_item_id#438, total_sales#14974])
      +- ShuffleQueryStage 23
         +- Exchange hashpartitioning(i_item_id#438, 20), ENSURE_REQUIREMENTS, [plan_id=107080]
            +- *(19) HashAggregate(keys=[i_item_id#438], functions=[partial_sum(total_sales#14975)], output=[i_item_id#438, sum#15187, isEmpty#15188])
               +- Union
                  :- *(16) HashAggregate(keys=[i_item_id#438], functions=[sum(UnscaledValue(ss_ext_sales_price#429))], output=[i_item_id#438, total_sales#14975])
                  :  +- ShuffleQueryStage 20
                  :     +- Exchange hashpartitioning(i_item_id#438, 20), ENSURE_REQUIREMENTS, [plan_id=106868]
                  :        +- *(13) HashAggregate(keys=[i_item_id#438], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#429))], output=[i_item_id#438, sum#15190L])
                  :           +- *(13) Project [ss_ext_sales_price#429, i_item_id#438]
                  :              +- *(13) BroadcastHashJoin [ss_item_sk#416], [i_item_sk#437], Inner, BuildRight, false
                  :                 :- *(13) Project [ss_item_sk#416, ss_ext_sales_price#429]
                  :                 :  +- *(13) BroadcastHashJoin [ss_addr_sk#420], [ca_address_sk#3717], Inner, BuildRight, false
                  :                 :     :- *(13) Project [ss_item_sk#416, ss_addr_sk#420, ss_ext_sales_price#429]
                  :                 :     :  +- *(13) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#24], Inner, BuildRight, false
                  :                 :     :     :- *(13) Filter ((isnotnull(ss_sold_date_sk#414) AND isnotnull(ss_addr_sk#420)) AND isnotnull(ss_item_sk#416))
                  :                 :     :     :  +- *(13) ColumnarToRow
                  :                 :     :     :     +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_item_sk#416,ss_addr_sk#420,ss_ext_sales_price#429] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#414), isnotnull(ss_addr_sk#420), isnotnull(ss_item_sk#416)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_addr_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_addr_sk:int,ss_ext_sales_price:decimal(7,2)>
                  :                 :     :     +- BroadcastQueryStage 0
                  :                 :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=105368]
                  :                 :     :           +- *(1) Project [d_date_sk#24]
                  :                 :     :              +- *(1) Filter ((((isnotnull(d_year#30) AND isnotnull(d_moy#32)) AND (d_year#30 = 1998)) AND (d_moy#32 = 9)) AND isnotnull(d_date_sk#24))
                  :                 :     :                 +- *(1) ColumnarToRow
                  :                 :     :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30,d_moy#32] Batched: true, DataFilters: [isnotnull(d_year#30), isnotnull(d_moy#32), (d_year#30 = 1998), (d_moy#32 = 9), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1998), EqualTo(d_moy,9), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                  :                 :     +- BroadcastQueryStage 1
                  :                 :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=105389]
                  :                 :           +- *(2) Project [ca_address_sk#3717]
                  :                 :              +- *(2) Filter ((isnotnull(ca_gmt_offset#3728) AND (ca_gmt_offset#3728 = -5.00)) AND isnotnull(ca_address_sk#3717))
                  :                 :                 +- *(2) ColumnarToRow
                  :                 :                    +- FileScan parquet default.customer_address[ca_address_sk#3717,ca_gmt_offset#3728] Batched: true, DataFilters: [isnotnull(ca_gmt_offset#3728), (ca_gmt_offset#3728 = -5.00), isnotnull(ca_address_sk#3717)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_gmt_offset), EqualTo(ca_gmt_offset,-5.00), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>
                  :                 +- BroadcastQueryStage 15
                  :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=106430]
                  :                       +- *(10) BroadcastHashJoin [i_item_id#438], [i_item_id#15108], LeftSemi, BuildRight, false
                  :                          :- *(10) Filter isnotnull(i_item_sk#437)
                  :                          :  +- *(10) ColumnarToRow
                  :                          :     +- FileScan parquet default.item[i_item_sk#437,i_item_id#438] Batched: true, DataFilters: [isnotnull(i_item_sk#437)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_id:string>
                  :                          +- BroadcastQueryStage 2
                  :                             +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=105410]
                  :                                +- *(3) Project [i_item_id#15108]
                  :                                   +- *(3) Filter (isnotnull(i_category#15119) AND (i_category#15119 = Music                                             ))
                  :                                      +- *(3) ColumnarToRow
                  :                                         +- FileScan parquet default.item[i_item_id#15108,i_category#15119] Batched: true, DataFilters: [isnotnull(i_category#15119), (i_category#15119 = Music                                          ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Music                                             )], ReadSchema: struct<i_item_id:string,i_category:string>
                  :- *(17) HashAggregate(keys=[i_item_id#15023], functions=[sum(UnscaledValue(cs_ext_sales_price#220))], output=[i_item_id#15023, total_sales#14977])
                  :  +- ShuffleQueryStage 21
                  :     +- Exchange hashpartitioning(i_item_id#15023, 20), ENSURE_REQUIREMENTS, [plan_id=106919]
                  :        +- *(14) HashAggregate(keys=[i_item_id#15023], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#220))], output=[i_item_id#15023, sum#15192L])
                  :           +- *(14) Project [cs_ext_sales_price#220, i_item_id#15023]
                  :              +- *(14) BroadcastHashJoin [cs_item_sk#212], [i_item_sk#15022], Inner, BuildRight, false
                  :                 :- *(14) Project [cs_item_sk#212, cs_ext_sales_price#220]
                  :                 :  +- *(14) BroadcastHashJoin [cs_bill_addr_sk#203], [ca_address_sk#15009], Inner, BuildRight, false
                  :                 :     :- *(14) Project [cs_bill_addr_sk#203, cs_item_sk#212, cs_ext_sales_price#220]
                  :                 :     :  +- *(14) BroadcastHashJoin [cs_sold_date_sk#197], [d_date_sk#14981], Inner, BuildRight, false
                  :                 :     :     :- *(14) Filter ((isnotnull(cs_sold_date_sk#197) AND isnotnull(cs_bill_addr_sk#203)) AND isnotnull(cs_item_sk#212))
                  :                 :     :     :  +- *(14) ColumnarToRow
                  :                 :     :     :     +- FileScan parquet default.catalog_sales[cs_sold_date_sk#197,cs_bill_addr_sk#203,cs_item_sk#212,cs_ext_sales_price#220] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#197), isnotnull(cs_bill_addr_sk#203), isnotnull(cs_item_sk#212)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk), IsNotNull(cs_bill_addr_sk), IsNotNull(cs_item_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_bill_addr_sk:int,cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>
                  :                 :     :     +- BroadcastQueryStage 4
                  :                 :     :        +- ReusedExchange [d_date_sk#14981], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=105368]
                  :                 :     +- BroadcastQueryStage 6
                  :                 :        +- ReusedExchange [ca_address_sk#15009], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=105389]
                  :                 +- BroadcastQueryStage 17
                  :                    +- ReusedExchange [i_item_sk#15022, i_item_id#15023], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=106430]
                  +- *(18) HashAggregate(keys=[i_item_id#15086], functions=[sum(UnscaledValue(ws_ext_sales_price#186))], output=[i_item_id#15086, total_sales#14979])
                     +- ShuffleQueryStage 22
                        +- Exchange hashpartitioning(i_item_id#15086, 20), ENSURE_REQUIREMENTS, [plan_id=106970]
                           +- *(15) HashAggregate(keys=[i_item_id#15086], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#186))], output=[i_item_id#15086, sum#15194L])
                              +- *(15) Project [ws_ext_sales_price#186, i_item_id#15086]
                                 +- *(15) BroadcastHashJoin [ws_item_sk#166], [i_item_sk#15085], Inner, BuildRight, false
                                    :- *(15) Project [ws_item_sk#166, ws_ext_sales_price#186]
                                    :  +- *(15) BroadcastHashJoin [ws_bill_addr_sk#170], [ca_address_sk#15072], Inner, BuildRight, false
                                    :     :- *(15) Project [ws_item_sk#166, ws_bill_addr_sk#170, ws_ext_sales_price#186]
                                    :     :  +- *(15) BroadcastHashJoin [ws_sold_date_sk#163], [d_date_sk#15044], Inner, BuildRight, false
                                    :     :     :- *(15) Filter ((isnotnull(ws_sold_date_sk#163) AND isnotnull(ws_bill_addr_sk#170)) AND isnotnull(ws_item_sk#166))
                                    :     :     :  +- *(15) ColumnarToRow
                                    :     :     :     +- FileScan parquet default.web_sales[ws_sold_date_sk#163,ws_item_sk#166,ws_bill_addr_sk#170,ws_ext_sales_price#186] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#163), isnotnull(ws_bill_addr_sk#170), isnotnull(ws_item_sk#166)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_bill_addr_sk), IsNotNull(ws_item_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_bill_addr_sk:int,ws_ext_sales_price:decimal(7,2)>
                                    :     :     +- BroadcastQueryStage 10
                                    :     :        +- ReusedExchange [d_date_sk#15044], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=105368]
                                    :     +- BroadcastQueryStage 12
                                    :        +- ReusedExchange [ca_address_sk#15072], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=105389]
                                    +- BroadcastQueryStage 19
                                       +- ReusedExchange [i_item_sk#15085, i_item_id#15086], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=106430]


==== q61 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   *(15) Project [promotions#15223, total#15224, CheckOverflow((promote_precision(CheckOverflow((promote_precision(cast(promotions#15223 as decimal(15,4))) / promote_precision(cast(total#15224 as decimal(15,4)))), DecimalType(35,20))) * 100.00000000000000000000), DecimalType(38,19)) AS ((CAST(promotions AS DECIMAL(15,4)) / CAST(total AS DECIMAL(15,4))) * 100)#15366]
   +- *(15) BroadcastNestedLoopJoin BuildRight, Inner
      :- *(15) HashAggregate(keys=[], functions=[sum(UnscaledValue(ss_ext_sales_price#429))], output=[promotions#15223])
      :  +- ShuffleQueryStage 16
      :     +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=108755]
      :        +- *(12) HashAggregate(keys=[], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#429))], output=[sum#15371L])
      :           +- *(12) Project [ss_ext_sales_price#429]
      :              +- *(12) BroadcastHashJoin [ss_item_sk#416], [i_item_sk#437], Inner, BuildRight, false
      :                 :- *(12) Project [ss_item_sk#416, ss_ext_sales_price#429]
      :                 :  +- *(12) BroadcastHashJoin [c_current_addr_sk#85], [ca_address_sk#3717], Inner, BuildRight, false
      :                 :     :- *(12) Project [ss_item_sk#416, ss_ext_sales_price#429, c_current_addr_sk#85]
      :                 :     :  +- *(12) BroadcastHashJoin [ss_customer_sk#417], [c_customer_sk#81], Inner, BuildRight, false
      :                 :     :     :- *(12) Project [ss_item_sk#416, ss_customer_sk#417, ss_ext_sales_price#429]
      :                 :     :     :  +- *(12) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#24], Inner, BuildRight, false
      :                 :     :     :     :- *(12) Project [ss_sold_date_sk#414, ss_item_sk#416, ss_customer_sk#417, ss_ext_sales_price#429]
      :                 :     :     :     :  +- *(12) BroadcastHashJoin [ss_promo_sk#422], [p_promo_sk#3642], Inner, BuildRight, false
      :                 :     :     :     :     :- *(12) Project [ss_sold_date_sk#414, ss_item_sk#416, ss_customer_sk#417, ss_promo_sk#422, ss_ext_sales_price#429]
      :                 :     :     :     :     :  +- *(12) BroadcastHashJoin [ss_store_sk#421], [s_store_sk#52], Inner, BuildRight, false
      :                 :     :     :     :     :     :- *(12) Filter ((((isnotnull(ss_store_sk#421) AND isnotnull(ss_promo_sk#422)) AND isnotnull(ss_sold_date_sk#414)) AND isnotnull(ss_customer_sk#417)) AND isnotnull(ss_item_sk#416))
      :                 :     :     :     :     :     :  +- *(12) ColumnarToRow
      :                 :     :     :     :     :     :     +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_item_sk#416,ss_customer_sk#417,ss_store_sk#421,ss_promo_sk#422,ss_ext_sales_price#429] Batched: true, DataFilters: [isnotnull(ss_store_sk#421), isnotnull(ss_promo_sk#422), isnotnull(ss_sold_date_sk#414), isnotnul..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_store_sk), IsNotNull(ss_promo_sk), IsNotNull(ss_sold_date_sk), IsNotNull(ss_custome..., ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_promo_sk:int,ss_e...
      :                 :     :     :     :     :     +- BroadcastQueryStage 0
      :                 :     :     :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=107479]
      :                 :     :     :     :     :           +- *(1) Project [s_store_sk#52]
      :                 :     :     :     :     :              +- *(1) Filter ((isnotnull(s_gmt_offset#79) AND (s_gmt_offset#79 = -5.00)) AND isnotnull(s_store_sk#52))
      :                 :     :     :     :     :                 +- *(1) ColumnarToRow
      :                 :     :     :     :     :                    +- FileScan parquet default.store[s_store_sk#52,s_gmt_offset#79] Batched: true, DataFilters: [isnotnull(s_gmt_offset#79), (s_gmt_offset#79 = -5.00), isnotnull(s_store_sk#52)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_gmt_offset), EqualTo(s_gmt_offset,-5.00), IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_gmt_offset:decimal(5,2)>
      :                 :     :     :     :     +- BroadcastQueryStage 1
      :                 :     :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=107500]
      :                 :     :     :     :           +- *(2) Project [p_promo_sk#3642]
      :                 :     :     :     :              +- *(2) Filter ((((p_channel_dmail#3650 = Y) OR (p_channel_email#3651 = Y)) OR (p_channel_tv#3653 = Y)) AND isnotnull(p_promo_sk#3642))
      :                 :     :     :     :                 +- *(2) ColumnarToRow
      :                 :     :     :     :                    +- FileScan parquet default.promotion[p_promo_sk#3642,p_channel_dmail#3650,p_channel_email#3651,p_channel_tv#3653] Batched: true, DataFilters: [(((p_channel_dmail#3650 = Y) OR (p_channel_email#3651 = Y)) OR (p_channel_tv#3653 = Y)), isnotnu..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/promotion], PartitionFilters: [], PushedFilters: [Or(Or(EqualTo(p_channel_dmail,Y),EqualTo(p_channel_email,Y)),EqualTo(p_channel_tv,Y)), IsNotNull..., ReadSchema: struct<p_promo_sk:int,p_channel_dmail:string,p_channel_email:string,p_channel_tv:string>
      :                 :     :     :     +- BroadcastQueryStage 2
      :                 :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=107521]
      :                 :     :     :           +- *(3) Project [d_date_sk#24]
      :                 :     :     :              +- *(3) Filter ((((isnotnull(d_year#30) AND isnotnull(d_moy#32)) AND (d_year#30 = 1998)) AND (d_moy#32 = 11)) AND isnotnull(d_date_sk#24))
      :                 :     :     :                 +- *(3) ColumnarToRow
      :                 :     :     :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30,d_moy#32] Batched: true, DataFilters: [isnotnull(d_year#30), isnotnull(d_moy#32), (d_year#30 = 1998), (d_moy#32 = 11), isnotnull(d_date..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1998), EqualTo(d_moy,11), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
      :                 :     :     +- BroadcastQueryStage 3
      :                 :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=107540]
      :                 :     :           +- *(4) Filter (isnotnull(c_customer_sk#81) AND isnotnull(c_current_addr_sk#85))
      :                 :     :              +- *(4) ColumnarToRow
      :                 :     :                 +- FileScan parquet default.customer[c_customer_sk#81,c_current_addr_sk#85] Batched: true, DataFilters: [isnotnull(c_customer_sk#81), isnotnull(c_current_addr_sk#85)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int>
      :                 :     +- BroadcastQueryStage 4
      :                 :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=107559]
      :                 :           +- *(5) Project [ca_address_sk#3717]
      :                 :              +- *(5) Filter ((isnotnull(ca_gmt_offset#3728) AND (ca_gmt_offset#3728 = -5.00)) AND isnotnull(ca_address_sk#3717))
      :                 :                 +- *(5) ColumnarToRow
      :                 :                    +- FileScan parquet default.customer_address[ca_address_sk#3717,ca_gmt_offset#3728] Batched: true, DataFilters: [isnotnull(ca_gmt_offset#3728), (ca_gmt_offset#3728 = -5.00), isnotnull(ca_address_sk#3717)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_gmt_offset), EqualTo(ca_gmt_offset,-5.00), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>
      :                 +- BroadcastQueryStage 5
      :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=107580]
      :                       +- *(6) Project [i_item_sk#437]
      :                          +- *(6) Filter ((isnotnull(i_category#449) AND (i_category#449 = Jewelry                                           )) AND isnotnull(i_item_sk#437))
      :                             +- *(6) ColumnarToRow
      :                                +- FileScan parquet default.item[i_item_sk#437,i_category#449] Batched: true, DataFilters: [isnotnull(i_category#449), (i_category#449 = Jewelry                                           )..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_category), EqualTo(i_category,Jewelry                                           ), I..., ReadSchema: struct<i_item_sk:int,i_category:string>
      +- BroadcastQueryStage 18
         +- BroadcastExchange IdentityBroadcastMode, [plan_id=108899]
            +- *(14) HashAggregate(keys=[], functions=[sum(UnscaledValue(ss_ext_sales_price#15240))], output=[total#15224])
               +- ShuffleQueryStage 17
                  +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=108830]
                     +- *(13) HashAggregate(keys=[], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#15240))], output=[sum#15373L])
                        +- *(13) Project [ss_ext_sales_price#15240]
                           +- *(13) BroadcastHashJoin [ss_item_sk#15227], [i_item_sk#15336], Inner, BuildRight, false
                              :- *(13) Project [ss_item_sk#15227, ss_ext_sales_price#15240]
                              :  +- *(13) BroadcastHashJoin [c_current_addr_sk#15309], [ca_address_sk#15323], Inner, BuildRight, false
                              :     :- *(13) Project [ss_item_sk#15227, ss_ext_sales_price#15240, c_current_addr_sk#15309]
                              :     :  +- *(13) BroadcastHashJoin [ss_customer_sk#15228], [c_customer_sk#15305], Inner, BuildRight, false
                              :     :     :- *(13) Project [ss_item_sk#15227, ss_customer_sk#15228, ss_ext_sales_price#15240]
                              :     :     :  +- *(13) BroadcastHashJoin [ss_sold_date_sk#15225], [d_date_sk#15277], Inner, BuildRight, false
                              :     :     :     :- *(13) Project [ss_sold_date_sk#15225, ss_item_sk#15227, ss_customer_sk#15228, ss_ext_sales_price#15240]
                              :     :     :     :  +- *(13) BroadcastHashJoin [ss_store_sk#15232], [s_store_sk#15248], Inner, BuildRight, false
                              :     :     :     :     :- *(13) Filter (((isnotnull(ss_store_sk#15232) AND isnotnull(ss_sold_date_sk#15225)) AND isnotnull(ss_customer_sk#15228)) AND isnotnull(ss_item_sk#15227))
                              :     :     :     :     :  +- *(13) ColumnarToRow
                              :     :     :     :     :     +- FileScan parquet default.store_sales[ss_sold_date_sk#15225,ss_item_sk#15227,ss_customer_sk#15228,ss_store_sk#15232,ss_ext_sales_price#15240] Batched: true, DataFilters: [isnotnull(ss_store_sk#15232), isnotnull(ss_sold_date_sk#15225), isnotnull(ss_customer_sk#15228),..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_store_sk), IsNotNull(ss_sold_date_sk), IsNotNull(ss_customer_sk), IsNotNull(ss_item..., ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_customer_sk:int,ss_store_sk:int,ss_ext_sales_price:d...
                              :     :     :     :     +- BroadcastQueryStage 7
                              :     :     :     :        +- ReusedExchange [s_store_sk#15248], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=107479]
                              :     :     :     +- BroadcastQueryStage 9
                              :     :     :        +- ReusedExchange [d_date_sk#15277], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=107521]
                              :     :     +- BroadcastQueryStage 11
                              :     :        +- ReusedExchange [c_customer_sk#15305, c_current_addr_sk#15309], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=107540]
                              :     +- BroadcastQueryStage 13
                              :        +- ReusedExchange [ca_address_sk#15323], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=107559]
                              +- BroadcastQueryStage 15
                                 +- ReusedExchange [i_item_sk#15336], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=107580]


==== q62 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[substr(w_warehouse_name, 1, 20)#15398 ASC NULLS FIRST,sm_type#15389 ASC NULLS FIRST,web_name#3355 ASC NULLS FIRST], output=[substr(w_warehouse_name, 1, 20)#15398,sm_type#15389,web_name#3355,30 days #15382L,31 - 60 days #15383L,61 - 90 days #15384L,91 - 120 days #15385L,>120 days #15386L])
   +- *(6) HashAggregate(keys=[_groupingexpression#15408, sm_type#15389, web_name#3355], functions=[sum(CASE WHEN ((ws_ship_date_sk#165 - ws_sold_date_sk#163) <= 30) THEN 1 ELSE 0 END), sum(CASE WHEN (((ws_ship_date_sk#165 - ws_sold_date_sk#163) > 30) AND ((ws_ship_date_sk#165 - ws_sold_date_sk#163) <= 60)) THEN 1 ELSE 0 END), sum(CASE WHEN (((ws_ship_date_sk#165 - ws_sold_date_sk#163) > 60) AND ((ws_ship_date_sk#165 - ws_sold_date_sk#163) <= 90)) THEN 1 ELSE 0 END), sum(CASE WHEN (((ws_ship_date_sk#165 - ws_sold_date_sk#163) > 90) AND ((ws_ship_date_sk#165 - ws_sold_date_sk#163) <= 120)) THEN 1 ELSE 0 END), sum(CASE WHEN ((ws_ship_date_sk#165 - ws_sold_date_sk#163) > 120) THEN 1 ELSE 0 END)], output=[substr(w_warehouse_name, 1, 20)#15398, sm_type#15389, web_name#3355, 30 days #15382L, 31 - 60 days #15383L, 61 - 90 days #15384L, 91 - 120 days #15385L, >120 days #15386L])
      +- ShuffleQueryStage 4
         +- Exchange hashpartitioning(_groupingexpression#15408, sm_type#15389, web_name#3355, 20), ENSURE_REQUIREMENTS, [plan_id=109430]
            +- *(5) HashAggregate(keys=[_groupingexpression#15408, sm_type#15389, web_name#3355], functions=[partial_sum(CASE WHEN ((ws_ship_date_sk#165 - ws_sold_date_sk#163) <= 30) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (((ws_ship_date_sk#165 - ws_sold_date_sk#163) > 30) AND ((ws_ship_date_sk#165 - ws_sold_date_sk#163) <= 60)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (((ws_ship_date_sk#165 - ws_sold_date_sk#163) > 60) AND ((ws_ship_date_sk#165 - ws_sold_date_sk#163) <= 90)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (((ws_ship_date_sk#165 - ws_sold_date_sk#163) > 90) AND ((ws_ship_date_sk#165 - ws_sold_date_sk#163) <= 120)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN ((ws_ship_date_sk#165 - ws_sold_date_sk#163) > 120) THEN 1 ELSE 0 END)], output=[_groupingexpression#15408, sm_type#15389, web_name#3355, sum#15414L, sum#15415L, sum#15416L, sum#15417L, sum#15418L])
               +- *(5) Project [ws_sold_date_sk#163, ws_ship_date_sk#165, sm_type#15389, web_name#3355, substr(w_warehouse_name#7978, 1, 20) AS _groupingexpression#15408]
                  +- *(5) BroadcastHashJoin [ws_ship_date_sk#165], [d_date_sk#24], Inner, BuildRight, false
                     :- *(5) Project [ws_sold_date_sk#163, ws_ship_date_sk#165, w_warehouse_name#7978, sm_type#15389, web_name#3355]
                     :  +- *(5) BroadcastHashJoin [ws_web_site_sk#176], [web_site_sk#3351], Inner, BuildRight, false
                     :     :- *(5) Project [ws_sold_date_sk#163, ws_ship_date_sk#165, ws_web_site_sk#176, w_warehouse_name#7978, sm_type#15389]
                     :     :  +- *(5) BroadcastHashJoin [ws_ship_mode_sk#177], [sm_ship_mode_sk#15387], Inner, BuildRight, false
                     :     :     :- *(5) Project [ws_sold_date_sk#163, ws_ship_date_sk#165, ws_web_site_sk#176, ws_ship_mode_sk#177, w_warehouse_name#7978]
                     :     :     :  +- *(5) BroadcastHashJoin [ws_warehouse_sk#178], [w_warehouse_sk#7976], Inner, BuildRight, false
                     :     :     :     :- *(5) Filter (((isnotnull(ws_warehouse_sk#178) AND isnotnull(ws_ship_mode_sk#177)) AND isnotnull(ws_web_site_sk#176)) AND isnotnull(ws_ship_date_sk#165))
                     :     :     :     :  +- *(5) ColumnarToRow
                     :     :     :     :     +- FileScan parquet default.web_sales[ws_sold_date_sk#163,ws_ship_date_sk#165,ws_web_site_sk#176,ws_ship_mode_sk#177,ws_warehouse_sk#178] Batched: true, DataFilters: [isnotnull(ws_warehouse_sk#178), isnotnull(ws_ship_mode_sk#177), isnotnull(ws_web_site_sk#176), i..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_warehouse_sk), IsNotNull(ws_ship_mode_sk), IsNotNull(ws_web_site_sk), IsNotNull(ws_..., ReadSchema: struct<ws_sold_date_sk:int,ws_ship_date_sk:int,ws_web_site_sk:int,ws_ship_mode_sk:int,ws_warehous...
                     :     :     :     +- BroadcastQueryStage 0
                     :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=109084]
                     :     :     :           +- *(1) Filter isnotnull(w_warehouse_sk#7976)
                     :     :     :              +- *(1) ColumnarToRow
                     :     :     :                 +- FileScan parquet default.warehouse[w_warehouse_sk#7976,w_warehouse_name#7978] Batched: true, DataFilters: [isnotnull(w_warehouse_sk#7976)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/warehouse], PartitionFilters: [], PushedFilters: [IsNotNull(w_warehouse_sk)], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string>
                     :     :     +- BroadcastQueryStage 1
                     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=109101]
                     :     :           +- *(2) Filter isnotnull(sm_ship_mode_sk#15387)
                     :     :              +- *(2) ColumnarToRow
                     :     :                 +- FileScan parquet default.ship_mode[sm_ship_mode_sk#15387,sm_type#15389] Batched: true, DataFilters: [isnotnull(sm_ship_mode_sk#15387)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/ship_mode], PartitionFilters: [], PushedFilters: [IsNotNull(sm_ship_mode_sk)], ReadSchema: struct<sm_ship_mode_sk:int,sm_type:string>
                     :     +- BroadcastQueryStage 2
                     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=109118]
                     :           +- *(3) Filter isnotnull(web_site_sk#3351)
                     :              +- *(3) ColumnarToRow
                     :                 +- FileScan parquet default.web_site[web_site_sk#3351,web_name#3355] Batched: true, DataFilters: [isnotnull(web_site_sk#3351)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_site], PartitionFilters: [], PushedFilters: [IsNotNull(web_site_sk)], ReadSchema: struct<web_site_sk:int,web_name:string>
                     +- BroadcastQueryStage 3
                        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=109137]
                           +- *(4) Project [d_date_sk#24]
                              +- *(4) Filter (((isnotnull(d_month_seq#27) AND (d_month_seq#27 >= 1200)) AND (d_month_seq#27 <= 1211)) AND isnotnull(d_date_sk#24))
                                 +- *(4) ColumnarToRow
                                    +- FileScan parquet default.date_dim[d_date_sk#24,d_month_seq#27] Batched: true, DataFilters: [isnotnull(d_month_seq#27), (d_month_seq#27 >= 1200), (d_month_seq#27 <= 1211), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1200), LessThanOrEqual(d_month_seq,1211),..., ReadSchema: struct<d_date_sk:int,d_month_seq:int>

==== q63 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[i_manager_id#457 ASC NULLS FIRST,avg_monthly_sales#15435 ASC NULLS FIRST,sum_sales#15434 ASC NULLS FIRST], output=[i_manager_id#457,sum_sales#15434,avg_monthly_sales#15435])
   +- *(7) Project [i_manager_id#457, sum_sales#15434, avg_monthly_sales#15435]
      +- *(7) Filter CASE WHEN (avg_monthly_sales#15435 > 0.000000) THEN (CheckOverflow((promote_precision(abs(CheckOverflow((promote_precision(cast(sum_sales#15434 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#15435 as decimal(22,6)))), DecimalType(22,6)))) / promote_precision(cast(avg_monthly_sales#15435 as decimal(22,6)))), DecimalType(38,16)) > 0.1000000000000000) ELSE false END
         +- Window [avg(_w0#15439) windowspecdefinition(i_manager_id#457, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#15435], [i_manager_id#457]
            +- *(6) Sort [i_manager_id#457 ASC NULLS FIRST], false, 0
               +- ShuffleQueryStage 4
                  +- Exchange hashpartitioning(i_manager_id#457, 20), ENSURE_REQUIREMENTS, [plan_id=109986]
                     +- *(5) HashAggregate(keys=[i_manager_id#457, d_moy#32], functions=[sum(UnscaledValue(ss_sales_price#427))], output=[i_manager_id#457, sum_sales#15434, _w0#15439])
                        +- ShuffleQueryStage 3
                           +- Exchange hashpartitioning(i_manager_id#457, d_moy#32, 20), ENSURE_REQUIREMENTS, [plan_id=109928]
                              +- *(4) HashAggregate(keys=[i_manager_id#457, d_moy#32], functions=[partial_sum(UnscaledValue(ss_sales_price#427))], output=[i_manager_id#457, d_moy#32, sum#15444L])
                                 +- *(4) Project [i_manager_id#457, ss_sales_price#427, d_moy#32]
                                    +- *(4) BroadcastHashJoin [ss_store_sk#421], [s_store_sk#52], Inner, BuildRight, false
                                       :- *(4) Project [i_manager_id#457, ss_store_sk#421, ss_sales_price#427, d_moy#32]
                                       :  +- *(4) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#24], Inner, BuildRight, false
                                       :     :- *(4) Project [i_manager_id#457, ss_sold_date_sk#414, ss_store_sk#421, ss_sales_price#427]
                                       :     :  +- *(4) BroadcastHashJoin [i_item_sk#437], [ss_item_sk#416], Inner, BuildLeft, false
                                       :     :     :- BroadcastQueryStage 0
                                       :     :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=109630]
                                       :     :     :     +- *(1) Project [i_item_sk#437, i_manager_id#457]
                                       :     :     :        +- *(1) Filter ((((i_category#449 IN (Books                                             ,Children                                          ,Electronics                                       ) AND i_class#447 IN (personal                                          ,portable                                          ,refernece                                         ,self-help                                         )) AND i_brand#445 IN (scholaramalgamalg #14                             ,scholaramalgamalg #7                              ,exportiunivamalg #9                               ,scholaramalgamalg #9                              )) OR ((i_category#449 IN (Women                                             ,Music                                             ,Men                                               ) AND i_class#447 IN (accessories                                       ,classical                                         ,fragrances                                        ,pants                                             )) AND i_brand#445 IN (amalgimporto #1                                   ,edu packscholar #1                                ,exportiimporto #1                                 ,importoamalg #1                                   ))) AND isnotnull(i_item_sk#437))
                                       :     :     :           +- *(1) ColumnarToRow
                                       :     :     :              +- FileScan parquet default.item[i_item_sk#437,i_brand#445,i_class#447,i_category#449,i_manager_id#457] Batched: true, DataFilters: [(((i_category#449 IN (Books                                             ,Children               ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [Or(And(And(In(i_category, [Books                                             ,Children          ..., ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_manager_id:int>
                                       :     :     +- *(4) Filter ((isnotnull(ss_item_sk#416) AND isnotnull(ss_sold_date_sk#414)) AND isnotnull(ss_store_sk#421))
                                       :     :        +- *(4) ColumnarToRow
                                       :     :           +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_item_sk#416,ss_store_sk#421,ss_sales_price#427] Batched: true, DataFilters: [isnotnull(ss_item_sk#416), isnotnull(ss_sold_date_sk#414), isnotnull(ss_store_sk#421)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
                                       :     +- BroadcastQueryStage 1
                                       :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=109651]
                                       :           +- *(2) Project [d_date_sk#24, d_moy#32]
                                       :              +- *(2) Filter (d_month_seq#27 INSET 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211 AND isnotnull(d_date_sk#24))
                                       :                 +- *(2) ColumnarToRow
                                       :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_month_seq#27,d_moy#32] Batched: true, DataFilters: [d_month_seq#27 INSET 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, isn..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [In(d_month_seq, [1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211]), IsNotNull(d_date..., ReadSchema: struct<d_date_sk:int,d_month_seq:int,d_moy:int>
                                       +- BroadcastQueryStage 2
                                          +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=109670]
                                             +- *(3) Filter isnotnull(s_store_sk#52)
                                                +- *(3) ColumnarToRow
                                                   +- FileScan parquet default.store[s_store_sk#52] Batched: true, DataFilters: [isnotnull(s_store_sk#52)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int>



==== q65 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[s_store_name#57 ASC NULLS FIRST,i_item_desc#441 ASC NULLS FIRST], output=[s_store_name#57,i_item_desc#441,revenue#15452,i_current_price#442,i_wholesale_cost#443,i_brand#445])
   +- *(10) Project [s_store_name#57, i_item_desc#441, revenue#15452, i_current_price#442, i_wholesale_cost#443, i_brand#445]
      +- *(10) BroadcastHashJoin [ss_store_sk#15460], [ss_store_sk#421], Inner, BuildRight, (cast(revenue#15452 as decimal(23,7)) <= CheckOverflow((0.100000 * promote_precision(ave#15451)), DecimalType(23,7))), false
         :- AQEShuffleRead local
         :  +- ShuffleQueryStage 7
         :     +- Exchange hashpartitioning(ss_store_sk#15460, 20), ENSURE_REQUIREMENTS, [plan_id=110794]
         :        +- *(7) Project [s_store_name#57, ss_store_sk#15460, revenue#15452, i_item_desc#441, i_current_price#442, i_wholesale_cost#443, i_brand#445]
         :           +- *(7) BroadcastHashJoin [ss_item_sk#15455], [i_item_sk#437], Inner, BuildRight, false
         :              :- *(7) Project [s_store_name#57, ss_store_sk#15460, ss_item_sk#15455, revenue#15452]
         :              :  +- *(7) BroadcastHashJoin [s_store_sk#52], [ss_store_sk#15460], Inner, BuildLeft, false
         :              :     :- BroadcastQueryStage 0
         :              :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=110240]
         :              :     :     +- *(1) Filter isnotnull(s_store_sk#52)
         :              :     :        +- *(1) ColumnarToRow
         :              :     :           +- FileScan parquet default.store[s_store_sk#52,s_store_name#57] Batched: true, DataFilters: [isnotnull(s_store_sk#52)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_name:string>
         :              :     +- *(7) Filter isnotnull(revenue#15452)
         :              :        +- *(7) HashAggregate(keys=[ss_store_sk#15460, ss_item_sk#15455], functions=[sum(UnscaledValue(ss_sales_price#15466))], output=[ss_store_sk#15460, ss_item_sk#15455, revenue#15452])
         :              :           +- ShuffleQueryStage 5
         :              :              +- Exchange hashpartitioning(ss_store_sk#15460, ss_item_sk#15455, 20), ENSURE_REQUIREMENTS, [plan_id=110612]
         :              :                 +- *(5) HashAggregate(keys=[ss_store_sk#15460, ss_item_sk#15455], functions=[partial_sum(UnscaledValue(ss_sales_price#15466))], output=[ss_store_sk#15460, ss_item_sk#15455, sum#15516L])
         :              :                    +- *(5) Project [ss_item_sk#15455, ss_store_sk#15460, ss_sales_price#15466]
         :              :                       +- *(5) BroadcastHashJoin [ss_sold_date_sk#15453], [d_date_sk#15476], Inner, BuildRight, false
         :              :                          :- *(5) Filter ((isnotnull(ss_sold_date_sk#15453) AND isnotnull(ss_store_sk#15460)) AND isnotnull(ss_item_sk#15455))
         :              :                          :  +- *(5) ColumnarToRow
         :              :                          :     +- FileScan parquet default.store_sales[ss_sold_date_sk#15453,ss_item_sk#15455,ss_store_sk#15460,ss_sales_price#15466] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#15453), isnotnull(ss_store_sk#15460), isnotnull(ss_item_sk#15455)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
         :              :                          +- BroadcastQueryStage 1
         :              :                             +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=110257]
         :              :                                +- *(2) Project [d_date_sk#15476]
         :              :                                   +- *(2) Filter (((isnotnull(d_month_seq#15479) AND (d_month_seq#15479 >= 1176)) AND (d_month_seq#15479 <= 1187)) AND isnotnull(d_date_sk#15476))
         :              :                                      +- *(2) ColumnarToRow
         :              :                                         +- FileScan parquet default.date_dim[d_date_sk#15476,d_month_seq#15479] Batched: true, DataFilters: [isnotnull(d_month_seq#15479), (d_month_seq#15479 >= 1176), (d_month_seq#15479 <= 1187), isnotnul..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1176), LessThanOrEqual(d_month_seq,1187),..., ReadSchema: struct<d_date_sk:int,d_month_seq:int>
         :              +- BroadcastQueryStage 2
         :                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=110282]
         :                    +- *(3) Filter isnotnull(i_item_sk#437)
         :                       +- *(3) ColumnarToRow
         :                          +- FileScan parquet default.item[i_item_sk#437,i_item_desc#441,i_current_price#442,i_wholesale_cost#443,i_brand#445] Batched: true, DataFilters: [isnotnull(i_item_sk#437)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_desc:string,i_current_price:decimal(7,2),i_wholesale_cost:decimal(7,2...
         +- BroadcastQueryStage 9
            +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=110900]
               +- *(9) HashAggregate(keys=[ss_store_sk#421], functions=[avg(revenue#15450)], output=[ss_store_sk#421, ave#15451])
                  +- ShuffleQueryStage 8
                     +- Exchange hashpartitioning(ss_store_sk#421, 20), ENSURE_REQUIREMENTS, [plan_id=110848]
                        +- *(8) HashAggregate(keys=[ss_store_sk#421], functions=[partial_avg(revenue#15450)], output=[ss_store_sk#421, sum#15519, count#15520L])
                           +- *(8) HashAggregate(keys=[ss_store_sk#421, ss_item_sk#416], functions=[sum(UnscaledValue(ss_sales_price#427))], output=[ss_store_sk#421, revenue#15450])
                              +- ShuffleQueryStage 6
                                 +- Exchange hashpartitioning(ss_store_sk#421, ss_item_sk#416, 20), ENSURE_REQUIREMENTS, [plan_id=110650]
                                    +- *(6) HashAggregate(keys=[ss_store_sk#421, ss_item_sk#416], functions=[partial_sum(UnscaledValue(ss_sales_price#427))], output=[ss_store_sk#421, ss_item_sk#416, sum#15522L])
                                       +- *(6) Project [ss_item_sk#416, ss_store_sk#421, ss_sales_price#427]
                                          +- *(6) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#24], Inner, BuildRight, false
                                             :- *(6) Filter (isnotnull(ss_sold_date_sk#414) AND isnotnull(ss_store_sk#421))
                                             :  +- *(6) ColumnarToRow
                                             :     +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_item_sk#416,ss_store_sk#421,ss_sales_price#427] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#414), isnotnull(ss_store_sk#421)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
                                             +- BroadcastQueryStage 4
                                                +- ReusedExchange [d_date_sk#24], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=110257]

==== q66 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[w_warehouse_name#7978 ASC NULLS FIRST], output=[w_warehouse_name#7978,w_warehouse_sq_ft#7979,w_city#7984,w_county#7985,w_state#7986,w_country#7988,ship_carriers#15547,year#15548,jan_sales#15599,feb_sales#15600,mar_sales#15601,apr_sales#15602,may_sales#15603,jun_sales#15604,jul_sales#15605,aug_sales#15606,sep_sales#15607,oct_sales#15608,nov_sales#15609,dec_sales#15610,jan_sales_per_sq_foot#15611,feb_sales_per_sq_foot#15612,mar_sales_per_sq_foot#15613,apr_sales_per_sq_foot#15614,may_sales_per_sq_foot#15615,jun_sales_per_sq_foot#15616,jul_sales_per_sq_foot#15617,aug_sales_per_sq_foot#15618,sep_sales_per_sq_foot#15619,oct_sales_per_sq_foot#15620,nov_sales_per_sq_foot#15621,dec_sales_per_sq_foot#15622,jan_net#15623,feb_net#15624,mar_net#15625,apr_net#15626,may_net#15627,jun_net#15628,jul_net#15629,aug_net#15630,sep_net#15631,oct_net#15632,nov_net#15633,dec_net#15634])
   +- *(14) HashAggregate(keys=[w_warehouse_name#7978, w_warehouse_sq_ft#7979, w_city#7984, w_county#7985, w_state#7986, w_country#7988, ship_carriers#15547, year#15548], functions=[sum(jan_sales#15549), sum(feb_sales#15550), sum(mar_sales#15551), sum(apr_sales#15552), sum(may_sales#15553), sum(jun_sales#15554), sum(jul_sales#15555), sum(aug_sales#15556), sum(sep_sales#15557), sum(oct_sales#15558), sum(nov_sales#15559), sum(dec_sales#15560), sum(CheckOverflow((promote_precision(jan_sales#15549) / promote_precision(cast(w_warehouse_sq_ft#7979 as decimal(28,2)))), DecimalType(38,12))), sum(CheckOverflow((promote_precision(feb_sales#15550) / promote_precision(cast(w_warehouse_sq_ft#7979 as decimal(28,2)))), DecimalType(38,12))), sum(CheckOverflow((promote_precision(mar_sales#15551) / promote_precision(cast(w_warehouse_sq_ft#7979 as decimal(28,2)))), DecimalType(38,12))), sum(CheckOverflow((promote_precision(apr_sales#15552) / promote_precision(cast(w_warehouse_sq_ft#7979 as decimal(28,2)))), DecimalType(38,12))), sum(CheckOverflow((promote_precision(may_sales#15553) / promote_precision(cast(w_warehouse_sq_ft#7979 as decimal(28,2)))), DecimalType(38,12))), sum(CheckOverflow((promote_precision(jun_sales#15554) / promote_precision(cast(w_warehouse_sq_ft#7979 as decimal(28,2)))), DecimalType(38,12))), sum(CheckOverflow((promote_precision(jul_sales#15555) / promote_precision(cast(w_warehouse_sq_ft#7979 as decimal(28,2)))), DecimalType(38,12))), sum(CheckOverflow((promote_precision(aug_sales#15556) / promote_precision(cast(w_warehouse_sq_ft#7979 as decimal(28,2)))), DecimalType(38,12))), sum(CheckOverflow((promote_precision(sep_sales#15557) / promote_precision(cast(w_warehouse_sq_ft#7979 as decimal(28,2)))), DecimalType(38,12))), sum(CheckOverflow((promote_precision(oct_sales#15558) / promote_precision(cast(w_warehouse_sq_ft#7979 as decimal(28,2)))), DecimalType(38,12))), sum(CheckOverflow((promote_precision(nov_sales#15559) / promote_precision(cast(w_warehouse_sq_ft#7979 as decimal(28,2)))), DecimalType(38,12))), sum(CheckOverflow((promote_precision(dec_sales#15560) / promote_precision(cast(w_warehouse_sq_ft#7979 as decimal(28,2)))), DecimalType(38,12))), sum(jan_net#15561), sum(feb_net#15562), sum(mar_net#15563), sum(apr_net#15564), sum(may_net#15565), sum(jun_net#15566), sum(jul_net#15567), sum(aug_net#15568), sum(sep_net#15569), sum(oct_net#15570), sum(nov_net#15571), sum(dec_net#15572)], output=[w_warehouse_name#7978, w_warehouse_sq_ft#7979, w_city#7984, w_county#7985, w_state#7986, w_country#7988, ship_carriers#15547, year#15548, jan_sales#15599, feb_sales#15600, mar_sales#15601, apr_sales#15602, may_sales#15603, jun_sales#15604, jul_sales#15605, aug_sales#15606, sep_sales#15607, oct_sales#15608, nov_sales#15609, dec_sales#15610, jan_sales_per_sq_foot#15611, feb_sales_per_sq_foot#15612, mar_sales_per_sq_foot#15613, apr_sales_per_sq_foot#15614, may_sales_per_sq_foot#15615, jun_sales_per_sq_foot#15616, jul_sales_per_sq_foot#15617, aug_sales_per_sq_foot#15618, sep_sales_per_sq_foot#15619, oct_sales_per_sq_foot#15620, nov_sales_per_sq_foot#15621, dec_sales_per_sq_foot#15622, jan_net#15623, feb_net#15624, mar_net#15625, apr_net#15626, may_net#15627, jun_net#15628, jul_net#15629, aug_net#15630, sep_net#15631, oct_net#15632, nov_net#15633, dec_net#15634])
      +- ShuffleQueryStage 14
         +- Exchange hashpartitioning(w_warehouse_name#7978, w_warehouse_sq_ft#7979, w_city#7984, w_county#7985, w_state#7986, w_country#7988, ship_carriers#15547, year#15548, 20), ENSURE_REQUIREMENTS, [plan_id=112172]
            +- *(13) HashAggregate(keys=[w_warehouse_name#7978, w_warehouse_sq_ft#7979, w_city#7984, w_county#7985, w_state#7986, w_country#7988, ship_carriers#15547, year#15548], functions=[partial_sum(jan_sales#15549), partial_sum(feb_sales#15550), partial_sum(mar_sales#15551), partial_sum(apr_sales#15552), partial_sum(may_sales#15553), partial_sum(jun_sales#15554), partial_sum(jul_sales#15555), partial_sum(aug_sales#15556), partial_sum(sep_sales#15557), partial_sum(oct_sales#15558), partial_sum(nov_sales#15559), partial_sum(dec_sales#15560), partial_sum(CheckOverflow((promote_precision(jan_sales#15549) / promote_precision(cast(w_warehouse_sq_ft#7979 as decimal(28,2)))), DecimalType(38,12))), partial_sum(CheckOverflow((promote_precision(feb_sales#15550) / promote_precision(cast(w_warehouse_sq_ft#7979 as decimal(28,2)))), DecimalType(38,12))), partial_sum(CheckOverflow((promote_precision(mar_sales#15551) / promote_precision(cast(w_warehouse_sq_ft#7979 as decimal(28,2)))), DecimalType(38,12))), partial_sum(CheckOverflow((promote_precision(apr_sales#15552) / promote_precision(cast(w_warehouse_sq_ft#7979 as decimal(28,2)))), DecimalType(38,12))), partial_sum(CheckOverflow((promote_precision(may_sales#15553) / promote_precision(cast(w_warehouse_sq_ft#7979 as decimal(28,2)))), DecimalType(38,12))), partial_sum(CheckOverflow((promote_precision(jun_sales#15554) / promote_precision(cast(w_warehouse_sq_ft#7979 as decimal(28,2)))), DecimalType(38,12))), partial_sum(CheckOverflow((promote_precision(jul_sales#15555) / promote_precision(cast(w_warehouse_sq_ft#7979 as decimal(28,2)))), DecimalType(38,12))), partial_sum(CheckOverflow((promote_precision(aug_sales#15556) / promote_precision(cast(w_warehouse_sq_ft#7979 as decimal(28,2)))), DecimalType(38,12))), partial_sum(CheckOverflow((promote_precision(sep_sales#15557) / promote_precision(cast(w_warehouse_sq_ft#7979 as decimal(28,2)))), DecimalType(38,12))), partial_sum(CheckOverflow((promote_precision(oct_sales#15558) / promote_precision(cast(w_warehouse_sq_ft#7979 as decimal(28,2)))), DecimalType(38,12))), partial_sum(CheckOverflow((promote_precision(nov_sales#15559) / promote_precision(cast(w_warehouse_sq_ft#7979 as decimal(28,2)))), DecimalType(38,12))), partial_sum(CheckOverflow((promote_precision(dec_sales#15560) / promote_precision(cast(w_warehouse_sq_ft#7979 as decimal(28,2)))), DecimalType(38,12))), partial_sum(jan_net#15561), partial_sum(feb_net#15562), partial_sum(mar_net#15563), partial_sum(apr_net#15564), partial_sum(may_net#15565), partial_sum(jun_net#15566), partial_sum(jul_net#15567), partial_sum(aug_net#15568), partial_sum(sep_net#15569), partial_sum(oct_net#15570), partial_sum(nov_net#15571), partial_sum(dec_net#15572)], output=[w_warehouse_name#7978, w_warehouse_sq_ft#7979, w_city#7984, w_county#7985, w_state#7986, w_country#7988, ship_carriers#15547, year#15548, sum#15908, isEmpty#15909, sum#15910, isEmpty#15911, sum#15912, isEmpty#15913, sum#15914, isEmpty#15915, sum#15916, isEmpty#15917, sum#15918, isEmpty#15919, sum#15920, isEmpty#15921, sum#15922, isEmpty#15923, sum#15924, isEmpty#15925, sum#15926, isEmpty#15927, sum#15928, isEmpty#15929, sum#15930, isEmpty#15931, sum#15932, isEmpty#15933, sum#15934, isEmpty#15935, sum#15936, isEmpty#15937, sum#15938, isEmpty#15939, sum#15940, isEmpty#15941, sum#15942, isEmpty#15943, sum#15944, isEmpty#15945, sum#15946, isEmpty#15947, sum#15948, isEmpty#15949, sum#15950, isEmpty#15951, sum#15952, isEmpty#15953, sum#15954, isEmpty#15955, sum#15956, isEmpty#15957, sum#15958, isEmpty#15959, sum#15960, isEmpty#15961, sum#15962, isEmpty#15963, sum#15964, isEmpty#15965, sum#15966, isEmpty#15967, sum#15968, isEmpty#15969, sum#15970, isEmpty#15971, sum#15972, isEmpty#15973, sum#15974, isEmpty#15975, sum#15976, isEmpty#15977, sum#15978, isEmpty#15979])
               +- Union
                  :- *(11) HashAggregate(keys=[w_warehouse_name#7978, w_warehouse_sq_ft#7979, w_city#7984, w_county#7985, w_state#7986, w_country#7988, d_year#30], functions=[sum(CASE WHEN (d_moy#32 = 1) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#186 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#32 = 2) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#186 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#32 = 3) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#186 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#32 = 4) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#186 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#32 = 5) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#186 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#32 = 6) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#186 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#32 = 7) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#186 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#32 = 8) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#186 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#32 = 9) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#186 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#32 = 10) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#186 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#32 = 11) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#186 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#32 = 12) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#186 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#32 = 1) THEN CheckOverflow((promote_precision(cast(ws_net_paid#192 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#32 = 2) THEN CheckOverflow((promote_precision(cast(ws_net_paid#192 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#32 = 3) THEN CheckOverflow((promote_precision(cast(ws_net_paid#192 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#32 = 4) THEN CheckOverflow((promote_precision(cast(ws_net_paid#192 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#32 = 5) THEN CheckOverflow((promote_precision(cast(ws_net_paid#192 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#32 = 6) THEN CheckOverflow((promote_precision(cast(ws_net_paid#192 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#32 = 7) THEN CheckOverflow((promote_precision(cast(ws_net_paid#192 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#32 = 8) THEN CheckOverflow((promote_precision(cast(ws_net_paid#192 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#32 = 9) THEN CheckOverflow((promote_precision(cast(ws_net_paid#192 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#32 = 10) THEN CheckOverflow((promote_precision(cast(ws_net_paid#192 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#32 = 11) THEN CheckOverflow((promote_precision(cast(ws_net_paid#192 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#32 = 12) THEN CheckOverflow((promote_precision(cast(ws_net_paid#192 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END)], output=[w_warehouse_name#7978, w_warehouse_sq_ft#7979, w_city#7984, w_county#7985, w_state#7986, w_country#7988, ship_carriers#15547, year#15548, jan_sales#15549, feb_sales#15550, mar_sales#15551, apr_sales#15552, may_sales#15553, jun_sales#15554, jul_sales#15555, aug_sales#15556, sep_sales#15557, oct_sales#15558, nov_sales#15559, dec_sales#15560, jan_net#15561, feb_net#15562, mar_net#15563, apr_net#15564, may_net#15565, jun_net#15566, jul_net#15567, aug_net#15568, sep_net#15569, oct_net#15570, nov_net#15571, dec_net#15572])
                  :  +- ShuffleQueryStage 12
                  :     +- Exchange hashpartitioning(w_warehouse_name#7978, w_warehouse_sq_ft#7979, w_city#7984, w_county#7985, w_state#7986, w_country#7988, d_year#30, 20), ENSURE_REQUIREMENTS, [plan_id=112023]
                  :        +- *(9) HashAggregate(keys=[w_warehouse_name#7978, w_warehouse_sq_ft#7979, w_city#7984, w_county#7985, w_state#7986, w_country#7988, d_year#30], functions=[partial_sum(CASE WHEN (d_moy#32 = 1) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#186 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#32 = 2) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#186 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#32 = 3) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#186 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#32 = 4) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#186 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#32 = 5) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#186 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#32 = 6) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#186 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#32 = 7) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#186 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#32 = 8) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#186 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#32 = 9) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#186 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#32 = 10) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#186 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#32 = 11) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#186 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#32 = 12) THEN CheckOverflow((promote_precision(cast(ws_ext_sales_price#186 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#32 = 1) THEN CheckOverflow((promote_precision(cast(ws_net_paid#192 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#32 = 2) THEN CheckOverflow((promote_precision(cast(ws_net_paid#192 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#32 = 3) THEN CheckOverflow((promote_precision(cast(ws_net_paid#192 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#32 = 4) THEN CheckOverflow((promote_precision(cast(ws_net_paid#192 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#32 = 5) THEN CheckOverflow((promote_precision(cast(ws_net_paid#192 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#32 = 6) THEN CheckOverflow((promote_precision(cast(ws_net_paid#192 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#32 = 7) THEN CheckOverflow((promote_precision(cast(ws_net_paid#192 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#32 = 8) THEN CheckOverflow((promote_precision(cast(ws_net_paid#192 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#32 = 9) THEN CheckOverflow((promote_precision(cast(ws_net_paid#192 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#32 = 10) THEN CheckOverflow((promote_precision(cast(ws_net_paid#192 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#32 = 11) THEN CheckOverflow((promote_precision(cast(ws_net_paid#192 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#32 = 12) THEN CheckOverflow((promote_precision(cast(ws_net_paid#192 as decimal(12,2))) * promote_precision(cast(ws_quantity#181 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END)], output=[w_warehouse_name#7978, w_warehouse_sq_ft#7979, w_city#7984, w_county#7985, w_state#7986, w_country#7988, d_year#30, sum#16028, isEmpty#16029, sum#16030, isEmpty#16031, sum#16032, isEmpty#16033, sum#16034, isEmpty#16035, sum#16036, isEmpty#16037, sum#16038, isEmpty#16039, sum#16040, isEmpty#16041, sum#16042, isEmpty#16043, sum#16044, isEmpty#16045, sum#16046, isEmpty#16047, sum#16048, isEmpty#16049, sum#16050, isEmpty#16051, sum#16052, isEmpty#16053, sum#16054, isEmpty#16055, sum#16056, isEmpty#16057, sum#16058, isEmpty#16059, sum#16060, isEmpty#16061, sum#16062, isEmpty#16063, sum#16064, isEmpty#16065, sum#16066, isEmpty#16067, sum#16068, isEmpty#16069, sum#16070, isEmpty#16071, sum#16072, isEmpty#16073, sum#16074, isEmpty#16075])
                  :           +- *(9) Project [ws_quantity#181, ws_ext_sales_price#186, ws_net_paid#192, w_warehouse_name#7978, w_warehouse_sq_ft#7979, w_city#7984, w_county#7985, w_state#7986, w_country#7988, d_year#30, d_moy#32]
                  :              +- *(9) BroadcastHashJoin [ws_ship_mode_sk#177], [sm_ship_mode_sk#15387], Inner, BuildRight, false
                  :                 :- *(9) Project [ws_ship_mode_sk#177, ws_quantity#181, ws_ext_sales_price#186, ws_net_paid#192, w_warehouse_name#7978, w_warehouse_sq_ft#7979, w_city#7984, w_county#7985, w_state#7986, w_country#7988, d_year#30, d_moy#32]
                  :                 :  +- *(9) BroadcastHashJoin [ws_sold_time_sk#164], [t_time_sk#15635], Inner, BuildRight, false
                  :                 :     :- *(9) Project [ws_sold_time_sk#164, ws_ship_mode_sk#177, ws_quantity#181, ws_ext_sales_price#186, ws_net_paid#192, w_warehouse_name#7978, w_warehouse_sq_ft#7979, w_city#7984, w_county#7985, w_state#7986, w_country#7988, d_year#30, d_moy#32]
                  :                 :     :  +- *(9) BroadcastHashJoin [ws_sold_date_sk#163], [d_date_sk#24], Inner, BuildRight, false
                  :                 :     :     :- *(9) Project [ws_sold_date_sk#163, ws_sold_time_sk#164, ws_ship_mode_sk#177, ws_quantity#181, ws_ext_sales_price#186, ws_net_paid#192, w_warehouse_name#7978, w_warehouse_sq_ft#7979, w_city#7984, w_county#7985, w_state#7986, w_country#7988]
                  :                 :     :     :  +- *(9) BroadcastHashJoin [ws_warehouse_sk#178], [w_warehouse_sk#7976], Inner, BuildRight, false
                  :                 :     :     :     :- *(9) Filter (((isnotnull(ws_warehouse_sk#178) AND isnotnull(ws_sold_date_sk#163)) AND isnotnull(ws_sold_time_sk#164)) AND isnotnull(ws_ship_mode_sk#177))
                  :                 :     :     :     :  +- *(9) ColumnarToRow
                  :                 :     :     :     :     +- FileScan parquet default.web_sales[ws_sold_date_sk#163,ws_sold_time_sk#164,ws_ship_mode_sk#177,ws_warehouse_sk#178,ws_quantity#181,ws_ext_sales_price#186,ws_net_paid#192] Batched: true, DataFilters: [isnotnull(ws_warehouse_sk#178), isnotnull(ws_sold_date_sk#163), isnotnull(ws_sold_time_sk#164), ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_warehouse_sk), IsNotNull(ws_sold_date_sk), IsNotNull(ws_sold_time_sk), IsNotNull(ws..., ReadSchema: struct<ws_sold_date_sk:int,ws_sold_time_sk:int,ws_ship_mode_sk:int,ws_warehouse_sk:int,ws_quantit...
                  :                 :     :     :     +- BroadcastQueryStage 0
                  :                 :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=111273]
                  :                 :     :     :           +- *(1) Filter isnotnull(w_warehouse_sk#7976)
                  :                 :     :     :              +- *(1) ColumnarToRow
                  :                 :     :     :                 +- FileScan parquet default.warehouse[w_warehouse_sk#7976,w_warehouse_name#7978,w_warehouse_sq_ft#7979,w_city#7984,w_county#7985,w_state#7986,w_country#7988] Batched: true, DataFilters: [isnotnull(w_warehouse_sk#7976)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/warehouse], PartitionFilters: [], PushedFilters: [IsNotNull(w_warehouse_sk)], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string,w_warehouse_sq_ft:int,w_city:string,w_county:st...
                  :                 :     :     +- BroadcastQueryStage 1
                  :                 :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=111290]
                  :                 :     :           +- *(2) Filter ((isnotnull(d_year#30) AND (d_year#30 = 2001)) AND isnotnull(d_date_sk#24))
                  :                 :     :              +- *(2) ColumnarToRow
                  :                 :     :                 +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30,d_moy#32] Batched: true, DataFilters: [isnotnull(d_year#30), (d_year#30 = 2001), isnotnull(d_date_sk#24)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2001), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                  :                 :     +- BroadcastQueryStage 2
                  :                 :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=111309]
                  :                 :           +- *(3) Project [t_time_sk#15635]
                  :                 :              +- *(3) Filter (((isnotnull(t_time#15637) AND (t_time#15637 >= 30838)) AND (t_time#15637 <= 59638)) AND isnotnull(t_time_sk#15635))
                  :                 :                 +- *(3) ColumnarToRow
                  :                 :                    +- FileScan parquet default.time_dim[t_time_sk#15635,t_time#15637] Batched: true, DataFilters: [isnotnull(t_time#15637), (t_time#15637 >= 30838), (t_time#15637 <= 59638), isnotnull(t_time_sk#1..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_time), GreaterThanOrEqual(t_time,30838), LessThanOrEqual(t_time,59638), IsNotNull(t_..., ReadSchema: struct<t_time_sk:int,t_time:int>
                  :                 +- BroadcastQueryStage 3
                  :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=111330]
                  :                       +- *(4) Project [sm_ship_mode_sk#15387]
                  :                          +- *(4) Filter (sm_carrier#15391 IN (DHL                 ,BARIAN              ) AND isnotnull(sm_ship_mode_sk#15387))
                  :                             +- *(4) ColumnarToRow
                  :                                +- FileScan parquet default.ship_mode[sm_ship_mode_sk#15387,sm_carrier#15391] Batched: true, DataFilters: [sm_carrier#15391 IN (DHL                 ,BARIAN              ), isnotnull(sm_ship_mode_sk#15387)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/ship_mode], PartitionFilters: [], PushedFilters: [In(sm_carrier, [BARIAN              ,DHL                 ]), IsNotNull(sm_ship_mode_sk)], ReadSchema: struct<sm_ship_mode_sk:int,sm_carrier:string>
                  +- *(12) HashAggregate(keys=[w_warehouse_name#15647, w_warehouse_sq_ft#15648, w_city#15653, w_county#15654, w_state#15655, w_country#15657, d_year#15665], functions=[sum(CASE WHEN (d_moy#15667 = 1) THEN CheckOverflow((promote_precision(cast(cs_sales_price#218 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#15667 = 2) THEN CheckOverflow((promote_precision(cast(cs_sales_price#218 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#15667 = 3) THEN CheckOverflow((promote_precision(cast(cs_sales_price#218 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#15667 = 4) THEN CheckOverflow((promote_precision(cast(cs_sales_price#218 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#15667 = 5) THEN CheckOverflow((promote_precision(cast(cs_sales_price#218 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#15667 = 6) THEN CheckOverflow((promote_precision(cast(cs_sales_price#218 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#15667 = 7) THEN CheckOverflow((promote_precision(cast(cs_sales_price#218 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#15667 = 8) THEN CheckOverflow((promote_precision(cast(cs_sales_price#218 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#15667 = 9) THEN CheckOverflow((promote_precision(cast(cs_sales_price#218 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#15667 = 10) THEN CheckOverflow((promote_precision(cast(cs_sales_price#218 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#15667 = 11) THEN CheckOverflow((promote_precision(cast(cs_sales_price#218 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#15667 = 12) THEN CheckOverflow((promote_precision(cast(cs_sales_price#218 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#15667 = 1) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#227 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#15667 = 2) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#227 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#15667 = 3) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#227 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#15667 = 4) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#227 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#15667 = 5) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#227 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#15667 = 6) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#227 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#15667 = 7) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#227 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#15667 = 8) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#227 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#15667 = 9) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#227 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#15667 = 10) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#227 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#15667 = 11) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#227 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), sum(CASE WHEN (d_moy#15667 = 12) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#227 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END)], output=[w_warehouse_name#15647, w_warehouse_sq_ft#15648, w_city#15653, w_county#15654, w_state#15655, w_country#15657, ship_carriers#15573, year#15574, jan_sales#15575, feb_sales#15576, mar_sales#15577, apr_sales#15578, may_sales#15579, jun_sales#15580, jul_sales#15581, aug_sales#15582, sep_sales#15583, oct_sales#15584, nov_sales#15585, dec_sales#15586, jan_net#15587, feb_net#15588, mar_net#15589, apr_net#15590, may_net#15591, jun_net#15592, jul_net#15593, aug_net#15594, sep_net#15595, oct_net#15596, nov_net#15597, dec_net#15598])
                     +- ShuffleQueryStage 13
                        +- Exchange hashpartitioning(w_warehouse_name#15647, w_warehouse_sq_ft#15648, w_city#15653, w_county#15654, w_state#15655, w_country#15657, d_year#15665, 20), ENSURE_REQUIREMENTS, [plan_id=112084]
                           +- *(10) HashAggregate(keys=[w_warehouse_name#15647, w_warehouse_sq_ft#15648, w_city#15653, w_county#15654, w_state#15655, w_country#15657, d_year#15665], functions=[partial_sum(CASE WHEN (d_moy#15667 = 1) THEN CheckOverflow((promote_precision(cast(cs_sales_price#218 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15667 = 2) THEN CheckOverflow((promote_precision(cast(cs_sales_price#218 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15667 = 3) THEN CheckOverflow((promote_precision(cast(cs_sales_price#218 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15667 = 4) THEN CheckOverflow((promote_precision(cast(cs_sales_price#218 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15667 = 5) THEN CheckOverflow((promote_precision(cast(cs_sales_price#218 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15667 = 6) THEN CheckOverflow((promote_precision(cast(cs_sales_price#218 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15667 = 7) THEN CheckOverflow((promote_precision(cast(cs_sales_price#218 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15667 = 8) THEN CheckOverflow((promote_precision(cast(cs_sales_price#218 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15667 = 9) THEN CheckOverflow((promote_precision(cast(cs_sales_price#218 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15667 = 10) THEN CheckOverflow((promote_precision(cast(cs_sales_price#218 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15667 = 11) THEN CheckOverflow((promote_precision(cast(cs_sales_price#218 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15667 = 12) THEN CheckOverflow((promote_precision(cast(cs_sales_price#218 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15667 = 1) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#227 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15667 = 2) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#227 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15667 = 3) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#227 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15667 = 4) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#227 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15667 = 5) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#227 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15667 = 6) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#227 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15667 = 7) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#227 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15667 = 8) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#227 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15667 = 9) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#227 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15667 = 10) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#227 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15667 = 11) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#227 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END), partial_sum(CASE WHEN (d_moy#15667 = 12) THEN CheckOverflow((promote_precision(cast(cs_net_paid_inc_tax#227 as decimal(12,2))) * promote_precision(cast(cs_quantity#215 as decimal(12,2)))), DecimalType(18,2)) ELSE 0.00 END)], output=[w_warehouse_name#15647, w_warehouse_sq_ft#15648, w_city#15653, w_county#15654, w_state#15655, w_country#15657, d_year#15665, sum#16124, isEmpty#16125, sum#16126, isEmpty#16127, sum#16128, isEmpty#16129, sum#16130, isEmpty#16131, sum#16132, isEmpty#16133, sum#16134, isEmpty#16135, sum#16136, isEmpty#16137, sum#16138, isEmpty#16139, sum#16140, isEmpty#16141, sum#16142, isEmpty#16143, sum#16144, isEmpty#16145, sum#16146, isEmpty#16147, sum#16148, isEmpty#16149, sum#16150, isEmpty#16151, sum#16152, isEmpty#16153, sum#16154, isEmpty#16155, sum#16156, isEmpty#16157, sum#16158, isEmpty#16159, sum#16160, isEmpty#16161, sum#16162, isEmpty#16163, sum#16164, isEmpty#16165, sum#16166, isEmpty#16167, sum#16168, isEmpty#16169, sum#16170, isEmpty#16171])
                              +- *(10) Project [cs_quantity#215, cs_sales_price#218, cs_net_paid_inc_tax#227, w_warehouse_name#15647, w_warehouse_sq_ft#15648, w_city#15653, w_county#15654, w_state#15655, w_country#15657, d_year#15665, d_moy#15667]
                                 +- *(10) BroadcastHashJoin [cs_ship_mode_sk#210], [sm_ship_mode_sk#15697], Inner, BuildRight, false
                                    :- *(10) Project [cs_ship_mode_sk#210, cs_quantity#215, cs_sales_price#218, cs_net_paid_inc_tax#227, w_warehouse_name#15647, w_warehouse_sq_ft#15648, w_city#15653, w_county#15654, w_state#15655, w_country#15657, d_year#15665, d_moy#15667]
                                    :  +- *(10) BroadcastHashJoin [cs_sold_time_sk#198], [t_time_sk#15687], Inner, BuildRight, false
                                    :     :- *(10) Project [cs_sold_time_sk#198, cs_ship_mode_sk#210, cs_quantity#215, cs_sales_price#218, cs_net_paid_inc_tax#227, w_warehouse_name#15647, w_warehouse_sq_ft#15648, w_city#15653, w_county#15654, w_state#15655, w_country#15657, d_year#15665, d_moy#15667]
                                    :     :  +- *(10) BroadcastHashJoin [cs_sold_date_sk#197], [d_date_sk#15659], Inner, BuildRight, false
                                    :     :     :- *(10) Project [cs_sold_date_sk#197, cs_sold_time_sk#198, cs_ship_mode_sk#210, cs_quantity#215, cs_sales_price#218, cs_net_paid_inc_tax#227, w_warehouse_name#15647, w_warehouse_sq_ft#15648, w_city#15653, w_county#15654, w_state#15655, w_country#15657]
                                    :     :     :  +- *(10) BroadcastHashJoin [cs_warehouse_sk#211], [w_warehouse_sk#15645], Inner, BuildRight, false
                                    :     :     :     :- *(10) Filter (((isnotnull(cs_warehouse_sk#211) AND isnotnull(cs_sold_date_sk#197)) AND isnotnull(cs_sold_time_sk#198)) AND isnotnull(cs_ship_mode_sk#210))
                                    :     :     :     :  +- *(10) ColumnarToRow
                                    :     :     :     :     +- FileScan parquet default.catalog_sales[cs_sold_date_sk#197,cs_sold_time_sk#198,cs_ship_mode_sk#210,cs_warehouse_sk#211,cs_quantity#215,cs_sales_price#218,cs_net_paid_inc_tax#227] Batched: true, DataFilters: [isnotnull(cs_warehouse_sk#211), isnotnull(cs_sold_date_sk#197), isnotnull(cs_sold_time_sk#198), ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_warehouse_sk), IsNotNull(cs_sold_date_sk), IsNotNull(cs_sold_time_sk), IsNotNull(cs..., ReadSchema: struct<cs_sold_date_sk:int,cs_sold_time_sk:int,cs_ship_mode_sk:int,cs_warehouse_sk:int,cs_quantit...
                                    :     :     :     +- BroadcastQueryStage 5
                                    :     :     :        +- ReusedExchange [w_warehouse_sk#15645, w_warehouse_name#15647, w_warehouse_sq_ft#15648, w_city#15653, w_county#15654, w_state#15655, w_country#15657], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=111273]
                                    :     :     +- BroadcastQueryStage 7
                                    :     :        +- ReusedExchange [d_date_sk#15659, d_year#15665, d_moy#15667], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=111290]
                                    :     +- BroadcastQueryStage 9
                                    :        +- ReusedExchange [t_time_sk#15687], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=111309]
                                    +- BroadcastQueryStage 11
                                       +- ReusedExchange [sm_ship_mode_sk#15697], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=111330]


==== q67 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[i_category#16954 ASC NULLS FIRST,i_class#16955 ASC NULLS FIRST,i_brand#16956 ASC NULLS FIRST,i_product_name#16957 ASC NULLS FIRST,d_year#16958 ASC NULLS FIRST,d_qoy#16959 ASC NULLS FIRST,d_moy#16960 ASC NULLS FIRST,s_store_id#16961 ASC NULLS FIRST,sumsales#16940 ASC NULLS FIRST,rk#16941 ASC NULLS FIRST], output=[i_category#16954,i_class#16955,i_brand#16956,i_product_name#16957,d_year#16958,d_qoy#16959,d_moy#16960,s_store_id#16961,sumsales#16940,rk#16941])
   +- *(7) Filter (rk#16941 <= 100)
      +- Window [rank(sumsales#16940) windowspecdefinition(i_category#16954, sumsales#16940 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rk#16941], [i_category#16954], [sumsales#16940 DESC NULLS LAST]
         +- *(6) Sort [i_category#16954 ASC NULLS FIRST, sumsales#16940 DESC NULLS LAST], false, 0
            +- ShuffleQueryStage 4
               +- Exchange hashpartitioning(i_category#16954, 20), ENSURE_REQUIREMENTS, [plan_id=112711]
                  +- *(5) HashAggregate(keys=[i_category#16954, i_class#16955, i_brand#16956, i_product_name#16957, d_year#16958, d_qoy#16959, d_moy#16960, s_store_id#16961, spark_grouping_id#16953L], functions=[sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#427 as decimal(12,2))) * promote_precision(cast(ss_quantity#424 as decimal(12,2)))), DecimalType(18,2)), 0.00))], output=[i_category#16954, i_class#16955, i_brand#16956, i_product_name#16957, d_year#16958, d_qoy#16959, d_moy#16960, s_store_id#16961, sumsales#16940])
                     +- ShuffleQueryStage 3
                        +- Exchange hashpartitioning(i_category#16954, i_class#16955, i_brand#16956, i_product_name#16957, d_year#16958, d_qoy#16959, d_moy#16960, s_store_id#16961, spark_grouping_id#16953L, 20), ENSURE_REQUIREMENTS, [plan_id=112656]
                           +- *(4) HashAggregate(keys=[i_category#16954, i_class#16955, i_brand#16956, i_product_name#16957, d_year#16958, d_qoy#16959, d_moy#16960, s_store_id#16961, spark_grouping_id#16953L], functions=[partial_sum(coalesce(CheckOverflow((promote_precision(cast(ss_sales_price#427 as decimal(12,2))) * promote_precision(cast(ss_quantity#424 as decimal(12,2)))), DecimalType(18,2)), 0.00))], output=[i_category#16954, i_class#16955, i_brand#16956, i_product_name#16957, d_year#16958, d_qoy#16959, d_moy#16960, s_store_id#16961, spark_grouping_id#16953L, sum#16980, isEmpty#16981])
                              +- *(4) Expand [[ss_quantity#424, ss_sales_price#427, i_category#449, i_class#447, i_brand#445, i_product_name#458, d_year#30, d_qoy#34, d_moy#32, s_store_id#53, 0], [ss_quantity#424, ss_sales_price#427, i_category#449, i_class#447, i_brand#445, i_product_name#458, d_year#30, d_qoy#34, d_moy#32, null, 1], [ss_quantity#424, ss_sales_price#427, i_category#449, i_class#447, i_brand#445, i_product_name#458, d_year#30, d_qoy#34, null, null, 3], [ss_quantity#424, ss_sales_price#427, i_category#449, i_class#447, i_brand#445, i_product_name#458, d_year#30, null, null, null, 7], [ss_quantity#424, ss_sales_price#427, i_category#449, i_class#447, i_brand#445, i_product_name#458, null, null, null, null, 15], [ss_quantity#424, ss_sales_price#427, i_category#449, i_class#447, i_brand#445, null, null, null, null, null, 31], [ss_quantity#424, ss_sales_price#427, i_category#449, i_class#447, null, null, null, null, null, null, 63], [ss_quantity#424, ss_sales_price#427, i_category#449, null, null, null, null, null, null, null, 127], [ss_quantity#424, ss_sales_price#427, null, null, null, null, null, null, null, null, 255]], [ss_quantity#424, ss_sales_price#427, i_category#16954, i_class#16955, i_brand#16956, i_product_name#16957, d_year#16958, d_qoy#16959, d_moy#16960, s_store_id#16961, spark_grouping_id#16953L]
                                 +- *(4) Project [ss_quantity#424, ss_sales_price#427, i_category#449, i_class#447, i_brand#445, i_product_name#458, d_year#30, d_qoy#34, d_moy#32, s_store_id#53]
                                    +- *(4) BroadcastHashJoin [ss_item_sk#416], [i_item_sk#437], Inner, BuildRight, false
                                       :- *(4) Project [ss_item_sk#416, ss_quantity#424, ss_sales_price#427, d_year#30, d_moy#32, d_qoy#34, s_store_id#53]
                                       :  +- *(4) BroadcastHashJoin [ss_store_sk#421], [s_store_sk#52], Inner, BuildRight, false
                                       :     :- *(4) Project [ss_item_sk#416, ss_store_sk#421, ss_quantity#424, ss_sales_price#427, d_year#30, d_moy#32, d_qoy#34]
                                       :     :  +- *(4) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#24], Inner, BuildRight, false
                                       :     :     :- *(4) Filter ((isnotnull(ss_sold_date_sk#414) AND isnotnull(ss_store_sk#421)) AND isnotnull(ss_item_sk#416))
                                       :     :     :  +- *(4) ColumnarToRow
                                       :     :     :     +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_item_sk#416,ss_store_sk#421,ss_quantity#424,ss_sales_price#427] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#414), isnotnull(ss_store_sk#421), isnotnull(ss_item_sk#416)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk), IsNotNull(ss_item_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_quantity:int,ss_sales_price:decimal(...
                                       :     :     +- BroadcastQueryStage 0
                                       :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=112361]
                                       :     :           +- *(1) Project [d_date_sk#24, d_year#30, d_moy#32, d_qoy#34]
                                       :     :              +- *(1) Filter (((isnotnull(d_month_seq#27) AND (d_month_seq#27 >= 1200)) AND (d_month_seq#27 <= 1211)) AND isnotnull(d_date_sk#24))
                                       :     :                 +- *(1) ColumnarToRow
                                       :     :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_month_seq#27,d_year#30,d_moy#32,d_qoy#34] Batched: true, DataFilters: [isnotnull(d_month_seq#27), (d_month_seq#27 >= 1200), (d_month_seq#27 <= 1211), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1200), LessThanOrEqual(d_month_seq,1211),..., ReadSchema: struct<d_date_sk:int,d_month_seq:int,d_year:int,d_moy:int,d_qoy:int>
                                       :     +- BroadcastQueryStage 1
                                       :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=112380]
                                       :           +- *(2) Filter isnotnull(s_store_sk#52)
                                       :              +- *(2) ColumnarToRow
                                       :                 +- FileScan parquet default.store[s_store_sk#52,s_store_id#53] Batched: true, DataFilters: [isnotnull(s_store_sk#52)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_id:string>
                                       +- BroadcastQueryStage 2
                                          +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=112397]
                                             +- *(3) Filter isnotnull(i_item_sk#437)
                                                +- *(3) ColumnarToRow
                                                   +- FileScan parquet default.item[i_item_sk#437,i_brand#445,i_class#447,i_category#449,i_product_name#458] Batched: true, DataFilters: [isnotnull(i_item_sk#437)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string,i_product_name:string>
==== q68 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[c_last_name#90 ASC NULLS FIRST,ss_ticket_number#423 ASC NULLS FIRST], output=[c_last_name#90,c_first_name#89,ca_city#17002,bought_city#16992,ss_ticket_number#423,extended_price#16993,extended_tax#16995,list_price#16994])
   +- *(8) Project [c_last_name#90, c_first_name#89, ca_city#17002, bought_city#16992, ss_ticket_number#423, extended_price#16993, extended_tax#16995, list_price#16994]
      +- *(8) BroadcastHashJoin [c_current_addr_sk#85], [ca_address_sk#16996], Inner, BuildRight, NOT (ca_city#17002 = bought_city#16992), false
         :- *(8) Project [ss_ticket_number#423, bought_city#16992, extended_price#16993, list_price#16994, extended_tax#16995, c_current_addr_sk#85, c_first_name#89, c_last_name#90]
         :  +- *(8) BroadcastHashJoin [ss_customer_sk#417], [c_customer_sk#81], Inner, BuildRight, false
         :     :- *(8) HashAggregate(keys=[ss_ticket_number#423, ss_customer_sk#417, ss_addr_sk#420, ca_city#3723], functions=[sum(UnscaledValue(ss_ext_sales_price#429)), sum(UnscaledValue(ss_ext_list_price#431)), sum(UnscaledValue(ss_ext_tax#432))], output=[ss_ticket_number#423, ss_customer_sk#417, bought_city#16992, extended_price#16993, list_price#16994, extended_tax#16995])
         :     :  +- ShuffleQueryStage 7
         :     :     +- Exchange hashpartitioning(ss_ticket_number#423, ss_customer_sk#417, ss_addr_sk#420, ca_city#3723, 20), ENSURE_REQUIREMENTS, [plan_id=113528]
         :     :        +- *(7) HashAggregate(keys=[ss_ticket_number#423, ss_customer_sk#417, ss_addr_sk#420, ca_city#3723], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#429)), partial_sum(UnscaledValue(ss_ext_list_price#431)), partial_sum(UnscaledValue(ss_ext_tax#432))], output=[ss_ticket_number#423, ss_customer_sk#417, ss_addr_sk#420, ca_city#3723, sum#17024L, sum#17025L, sum#17026L])
         :     :           +- *(7) Project [ss_customer_sk#417, ss_addr_sk#420, ss_ticket_number#423, ss_ext_sales_price#429, ss_ext_list_price#431, ss_ext_tax#432, ca_city#3723]
         :     :              +- *(7) BroadcastHashJoin [ss_addr_sk#420], [ca_address_sk#3717], Inner, BuildRight, false
         :     :                 :- *(7) Project [ss_customer_sk#417, ss_addr_sk#420, ss_ticket_number#423, ss_ext_sales_price#429, ss_ext_list_price#431, ss_ext_tax#432]
         :     :                 :  +- *(7) BroadcastHashJoin [ss_hdemo_sk#419], [hd_demo_sk#5552], Inner, BuildRight, false
         :     :                 :     :- *(7) Project [ss_customer_sk#417, ss_hdemo_sk#419, ss_addr_sk#420, ss_ticket_number#423, ss_ext_sales_price#429, ss_ext_list_price#431, ss_ext_tax#432]
         :     :                 :     :  +- *(7) BroadcastHashJoin [ss_store_sk#421], [s_store_sk#52], Inner, BuildRight, false
         :     :                 :     :     :- *(7) Project [ss_customer_sk#417, ss_hdemo_sk#419, ss_addr_sk#420, ss_store_sk#421, ss_ticket_number#423, ss_ext_sales_price#429, ss_ext_list_price#431, ss_ext_tax#432]
         :     :                 :     :     :  +- *(7) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#24], Inner, BuildRight, false
         :     :                 :     :     :     :- *(7) Filter ((((isnotnull(ss_sold_date_sk#414) AND isnotnull(ss_store_sk#421)) AND isnotnull(ss_hdemo_sk#419)) AND isnotnull(ss_addr_sk#420)) AND isnotnull(ss_customer_sk#417))
         :     :                 :     :     :     :  +- *(7) ColumnarToRow
         :     :                 :     :     :     :     +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_customer_sk#417,ss_hdemo_sk#419,ss_addr_sk#420,ss_store_sk#421,ss_ticket_number#423,ss_ext_sales_price#429,ss_ext_list_price#431,ss_ext_tax#432] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#414), isnotnull(ss_store_sk#421), isnotnull(ss_hdemo_sk#419), isnotnul..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk), IsNotNull(ss_hdemo_sk), IsNotNull(ss_addr_sk..., ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_hdemo_sk:int,ss_addr_sk:int,ss_store_sk:int,ss_t...
         :     :                 :     :     :     +- BroadcastQueryStage 0
         :     :                 :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=112955]
         :     :                 :     :     :           +- *(1) Project [d_date_sk#24]
         :     :                 :     :     :              +- *(1) Filter ((((isnotnull(d_dom#33) AND (d_dom#33 >= 1)) AND (d_dom#33 <= 2)) AND d_year#30 IN (1999,2000,2001)) AND isnotnull(d_date_sk#24))
         :     :                 :     :     :                 +- *(1) ColumnarToRow
         :     :                 :     :     :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30,d_dom#33] Batched: true, DataFilters: [isnotnull(d_dom#33), (d_dom#33 >= 1), (d_dom#33 <= 2), d_year#30 IN (1999,2000,2001), isnotnull(..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_dom), GreaterThanOrEqual(d_dom,1), LessThanOrEqual(d_dom,2), In(d_year, [1999,2000,2..., ReadSchema: struct<d_date_sk:int,d_year:int,d_dom:int>
         :     :                 :     :     +- BroadcastQueryStage 1
         :     :                 :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=112976]
         :     :                 :     :           +- *(2) Project [s_store_sk#52]
         :     :                 :     :              +- *(2) Filter (s_city#74 IN (Midway,Fairview) AND isnotnull(s_store_sk#52))
         :     :                 :     :                 +- *(2) ColumnarToRow
         :     :                 :     :                    +- FileScan parquet default.store[s_store_sk#52,s_city#74] Batched: true, DataFilters: [s_city#74 IN (Midway,Fairview), isnotnull(s_store_sk#52)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store], PartitionFilters: [], PushedFilters: [In(s_city, [Fairview,Midway]), IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_city:string>
         :     :                 :     +- BroadcastQueryStage 2
         :     :                 :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=112997]
         :     :                 :           +- *(3) Project [hd_demo_sk#5552]
         :     :                 :              +- *(3) Filter (((hd_dep_count#5555 = 4) OR (hd_vehicle_count#5556 = 3)) AND isnotnull(hd_demo_sk#5552))
         :     :                 :                 +- *(3) ColumnarToRow
         :     :                 :                    +- FileScan parquet default.household_demographics[hd_demo_sk#5552,hd_dep_count#5555,hd_vehicle_count#5556] Batched: true, DataFilters: [((hd_dep_count#5555 = 4) OR (hd_vehicle_count#5556 = 3)), isnotnull(hd_demo_sk#5552)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/household_demographics], PartitionFilters: [], PushedFilters: [Or(EqualTo(hd_dep_count,4),EqualTo(hd_vehicle_count,3)), IsNotNull(hd_demo_sk)], ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int,hd_vehicle_count:int>
         :     :                 +- BroadcastQueryStage 3
         :     :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=113016]
         :     :                       +- *(4) Filter (isnotnull(ca_address_sk#3717) AND isnotnull(ca_city#3723))
         :     :                          +- *(4) ColumnarToRow
         :     :                             +- FileScan parquet default.customer_address[ca_address_sk#3717,ca_city#3723] Batched: true, DataFilters: [isnotnull(ca_address_sk#3717), isnotnull(ca_city#3723)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_city)], ReadSchema: struct<ca_address_sk:int,ca_city:string>
         :     +- BroadcastQueryStage 4
         :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=113040]
         :           +- *(5) Filter (isnotnull(c_customer_sk#81) AND isnotnull(c_current_addr_sk#85))
         :              +- *(5) ColumnarToRow
         :                 +- FileScan parquet default.customer[c_customer_sk#81,c_current_addr_sk#85,c_first_name#89,c_last_name#90] Batched: true, DataFilters: [isnotnull(c_customer_sk#81), isnotnull(c_current_addr_sk#85)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)], ReadSchema: struct<c_customer_sk:int,c_current_addr_sk:int,c_first_name:string,c_last_name:string>
         +- BroadcastQueryStage 6
            +- ReusedExchange [ca_address_sk#16996, ca_city#17002], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=113016]

==== q70 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[lochierarchy#17037 DESC NULLS LAST,CASE WHEN (lochierarchy#17037 = 0) THEN s_state#17146 END ASC NULLS FIRST,rank_within_parent#17038 ASC NULLS FIRST], output=[total_sum#17036,s_state#17146,s_county#17147,lochierarchy#17037,rank_within_parent#17038])
   +- *(12) Project [total_sum#17036, s_state#17146, s_county#17147, lochierarchy#17037, rank_within_parent#17038]
      +- Window [rank(_w3#17162) windowspecdefinition(_w1#17160, _w2#17161, _w3#17162 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rank_within_parent#17038], [_w1#17160, _w2#17161], [_w3#17162 DESC NULLS LAST]
         +- *(11) Sort [_w1#17160 ASC NULLS FIRST, _w2#17161 ASC NULLS FIRST, _w3#17162 DESC NULLS LAST], false, 0
            +- ShuffleQueryStage 9
               +- Exchange hashpartitioning(_w1#17160, _w2#17161, 20), ENSURE_REQUIREMENTS, [plan_id=114818]
                  +- *(10) HashAggregate(keys=[s_state#17146, s_county#17147, spark_grouping_id#17145L], functions=[sum(UnscaledValue(ss_net_profit#436))], output=[total_sum#17036, s_state#17146, s_county#17147, lochierarchy#17037, _w1#17160, _w2#17161, _w3#17162])
                     +- ShuffleQueryStage 8
                        +- Exchange hashpartitioning(s_state#17146, s_county#17147, spark_grouping_id#17145L, 20), ENSURE_REQUIREMENTS, [plan_id=114765]
                           +- *(9) HashAggregate(keys=[s_state#17146, s_county#17147, spark_grouping_id#17145L], functions=[partial_sum(UnscaledValue(ss_net_profit#436))], output=[s_state#17146, s_county#17147, spark_grouping_id#17145L, sum#17181L])
                              +- *(9) Expand [[ss_net_profit#436, s_state#76, s_county#75, 0], [ss_net_profit#436, s_state#76, null, 1], [ss_net_profit#436, null, null, 3]], [ss_net_profit#436, s_state#17146, s_county#17147, spark_grouping_id#17145L]
                                 +- *(9) Project [ss_net_profit#436, s_state#76, s_county#75]
                                    +- *(9) BroadcastHashJoin [ss_store_sk#421], [s_store_sk#52], Inner, BuildRight, false
                                       :- *(9) Project [ss_store_sk#421, ss_net_profit#436]
                                       :  +- *(9) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#24], Inner, BuildRight, false
                                       :     :- *(9) Filter (isnotnull(ss_sold_date_sk#414) AND isnotnull(ss_store_sk#421))
                                       :     :  +- *(9) ColumnarToRow
                                       :     :     +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_store_sk#421,ss_net_profit#436] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#414), isnotnull(ss_store_sk#421)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_store_sk:int,ss_net_profit:decimal(7,2)>
                                       :     +- BroadcastQueryStage 0
                                       :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=113859]
                                       :           +- *(1) Project [d_date_sk#24]
                                       :              +- *(1) Filter (((isnotnull(d_month_seq#27) AND (d_month_seq#27 >= 1200)) AND (d_month_seq#27 <= 1211)) AND isnotnull(d_date_sk#24))
                                       :                 +- *(1) ColumnarToRow
                                       :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_month_seq#27] Batched: true, DataFilters: [isnotnull(d_month_seq#27), (d_month_seq#27 >= 1200), (d_month_seq#27 <= 1211), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1200), LessThanOrEqual(d_month_seq,1211),..., ReadSchema: struct<d_date_sk:int,d_month_seq:int>
                                       +- BroadcastQueryStage 7
                                          +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=114656]
                                             +- *(8) BroadcastHashJoin [s_state#76], [s_state#17108], LeftSemi, BuildRight, false
                                                :- AQEShuffleRead local
                                                :  +- ShuffleQueryStage 1
                                                :     +- Exchange hashpartitioning(s_state#76, 20), ENSURE_REQUIREMENTS, [plan_id=113878]
                                                :        +- *(2) Filter isnotnull(s_store_sk#52)
                                                :           +- *(2) ColumnarToRow
                                                :              +- FileScan parquet default.store[s_store_sk#52,s_county#75,s_state#76] Batched: true, DataFilters: [isnotnull(s_store_sk#52)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_county:string,s_state:string>
                                                +- BroadcastQueryStage 6
                                                   +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=114537]
                                                      +- *(7) Project [s_state#17108]
                                                         +- *(7) Filter (ranking#17040 <= 5)
                                                            +- Window [rank(_w2#17054) windowspecdefinition(s_state#17108, _w2#17054 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS ranking#17040], [s_state#17108], [_w2#17054 DESC NULLS LAST]
                                                               +- *(6) Sort [s_state#17108 ASC NULLS FIRST, _w2#17054 DESC NULLS LAST], false, 0
                                                                  +- *(6) HashAggregate(keys=[s_state#17108], functions=[sum(UnscaledValue(ss_net_profit#17083))], output=[s_state#17108, s_state#17108, _w2#17054])
                                                                     +- ShuffleQueryStage 5
                                                                        +- Exchange hashpartitioning(s_state#17108, 20), ENSURE_REQUIREMENTS, [plan_id=114372]
                                                                           +- *(5) HashAggregate(keys=[s_state#17108], functions=[partial_sum(UnscaledValue(ss_net_profit#17083))], output=[s_state#17108, sum#17183L])
                                                                              +- *(5) Project [ss_net_profit#17083, s_state#17108]
                                                                                 +- *(5) BroadcastHashJoin [ss_sold_date_sk#17061], [d_date_sk#17113], Inner, BuildRight, false
                                                                                    :- *(5) Project [ss_sold_date_sk#17061, ss_net_profit#17083, s_state#17108]
                                                                                    :  +- *(5) BroadcastHashJoin [ss_store_sk#17068], [s_store_sk#17084], Inner, BuildRight, false
                                                                                    :     :- *(5) Filter (isnotnull(ss_store_sk#17068) AND isnotnull(ss_sold_date_sk#17061))
                                                                                    :     :  +- *(5) ColumnarToRow
                                                                                    :     :     +- FileScan parquet default.store_sales[ss_sold_date_sk#17061,ss_store_sk#17068,ss_net_profit#17083] Batched: true, DataFilters: [isnotnull(ss_store_sk#17068), isnotnull(ss_sold_date_sk#17061)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_store_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_store_sk:int,ss_net_profit:decimal(7,2)>
                                                                                    :     +- BroadcastQueryStage 2
                                                                                    :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=113895]
                                                                                    :           +- *(3) Filter isnotnull(s_store_sk#17084)
                                                                                    :              +- *(3) ColumnarToRow
                                                                                    :                 +- FileScan parquet default.store[s_store_sk#17084,s_state#17108] Batched: true, DataFilters: [isnotnull(s_store_sk#17084)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_state:string>
                                                                                    +- BroadcastQueryStage 4
                                                                                       +- ReusedExchange [d_date_sk#17113], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=113859]


==== q71 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   *(11) Sort [ext_price#17237 DESC NULLS LAST, brand_id#17235 ASC NULLS FIRST], true, 0
   +- ShuffleQueryStage 8
      +- Exchange rangepartitioning(ext_price#17237 DESC NULLS LAST, brand_id#17235 ASC NULLS FIRST, 20), ENSURE_REQUIREMENTS, [plan_id=115591]
         +- *(10) HashAggregate(keys=[i_brand#445, i_brand_id#444, t_hour#15638, t_minute#15639], functions=[sum(UnscaledValue(ext_price#17223))], output=[brand_id#17235, brand#17236, t_hour#15638, t_minute#15639, ext_price#17237])
            +- ShuffleQueryStage 7
               +- Exchange hashpartitioning(i_brand#445, i_brand_id#444, t_hour#15638, t_minute#15639, 20), ENSURE_REQUIREMENTS, [plan_id=115526]
                  +- *(9) HashAggregate(keys=[i_brand#445, i_brand_id#444, t_hour#15638, t_minute#15639], functions=[partial_sum(UnscaledValue(ext_price#17223))], output=[i_brand#445, i_brand_id#444, t_hour#15638, t_minute#15639, sum#17303L])
                     +- *(9) Project [i_brand_id#444, i_brand#445, ext_price#17223, t_hour#15638, t_minute#15639]
                        +- *(9) BroadcastHashJoin [time_sk#17226], [t_time_sk#15635], Inner, BuildRight, false
                           :- *(9) Project [i_brand_id#444, i_brand#445, ext_price#17223, time_sk#17226]
                           :  +- *(9) BroadcastHashJoin [i_item_sk#437], [sold_item_sk#17225], Inner, BuildLeft, false
                           :     :- BroadcastQueryStage 0
                           :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=115089]
                           :     :     +- *(1) Project [i_item_sk#437, i_brand_id#444, i_brand#445]
                           :     :        +- *(1) Filter ((isnotnull(i_manager_id#457) AND (i_manager_id#457 = 1)) AND isnotnull(i_item_sk#437))
                           :     :           +- *(1) ColumnarToRow
                           :     :              +- FileScan parquet default.item[i_item_sk#437,i_brand_id#444,i_brand#445,i_manager_id#457] Batched: true, DataFilters: [isnotnull(i_manager_id#457), (i_manager_id#457 = 1), isnotnull(i_item_sk#437)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_manager_id), EqualTo(i_manager_id,1), IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_brand_id:int,i_brand:string,i_manager_id:int>
                           :     +- Union
                           :        :- *(6) Project [ws_ext_sales_price#186 AS ext_price#17223, ws_item_sk#166 AS sold_item_sk#17225, ws_sold_time_sk#164 AS time_sk#17226]
                           :        :  +- *(6) BroadcastHashJoin [ws_sold_date_sk#163], [d_date_sk#24], Inner, BuildRight, false
                           :        :     :- *(6) Filter ((isnotnull(ws_sold_date_sk#163) AND isnotnull(ws_item_sk#166)) AND isnotnull(ws_sold_time_sk#164))
                           :        :     :  +- *(6) ColumnarToRow
                           :        :     :     +- FileScan parquet default.web_sales[ws_sold_date_sk#163,ws_sold_time_sk#164,ws_item_sk#166,ws_ext_sales_price#186] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#163), isnotnull(ws_item_sk#166), isnotnull(ws_sold_time_sk#164)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_item_sk), IsNotNull(ws_sold_time_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_sold_time_sk:int,ws_item_sk:int,ws_ext_sales_price:decimal(7,2)>
                           :        :     +- BroadcastQueryStage 1
                           :        :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=115108]
                           :        :           +- *(2) Project [d_date_sk#24]
                           :        :              +- *(2) Filter ((((isnotnull(d_moy#32) AND isnotnull(d_year#30)) AND (d_moy#32 = 11)) AND (d_year#30 = 1999)) AND isnotnull(d_date_sk#24))
                           :        :                 +- *(2) ColumnarToRow
                           :        :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30,d_moy#32] Batched: true, DataFilters: [isnotnull(d_moy#32), isnotnull(d_year#30), (d_moy#32 = 11), (d_year#30 = 1999), isnotnull(d_date..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_moy), IsNotNull(d_year), EqualTo(d_moy,11), EqualTo(d_year,1999), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                           :        :- *(7) Project [cs_ext_sales_price#220 AS ext_price#17227, cs_item_sk#212 AS sold_item_sk#17229, cs_sold_time_sk#198 AS time_sk#17230]
                           :        :  +- *(7) BroadcastHashJoin [cs_sold_date_sk#197], [d_date_sk#17238], Inner, BuildRight, false
                           :        :     :- *(7) Filter ((isnotnull(cs_sold_date_sk#197) AND isnotnull(cs_item_sk#212)) AND isnotnull(cs_sold_time_sk#198))
                           :        :     :  +- *(7) ColumnarToRow
                           :        :     :     +- FileScan parquet default.catalog_sales[cs_sold_date_sk#197,cs_sold_time_sk#198,cs_item_sk#212,cs_ext_sales_price#220] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#197), isnotnull(cs_item_sk#212), isnotnull(cs_sold_time_sk#198)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk), IsNotNull(cs_item_sk), IsNotNull(cs_sold_time_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_sold_time_sk:int,cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>
                           :        :     +- BroadcastQueryStage 3
                           :        :        +- ReusedExchange [d_date_sk#17238], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=115108]
                           :        +- *(8) Project [ss_ext_sales_price#429 AS ext_price#17231, ss_item_sk#416 AS sold_item_sk#17233, ss_sold_time_sk#415 AS time_sk#17234]
                           :           +- *(8) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#17266], Inner, BuildRight, false
                           :              :- *(8) Filter ((isnotnull(ss_sold_date_sk#414) AND isnotnull(ss_item_sk#416)) AND isnotnull(ss_sold_time_sk#415))
                           :              :  +- *(8) ColumnarToRow
                           :              :     +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_sold_time_sk#415,ss_item_sk#416,ss_ext_sales_price#429] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#414), isnotnull(ss_item_sk#416), isnotnull(ss_sold_time_sk#415)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_item_sk), IsNotNull(ss_sold_time_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_sold_time_sk:int,ss_item_sk:int,ss_ext_sales_price:decimal(7,2)>
                           :              +- BroadcastQueryStage 5
                           :                 +- ReusedExchange [d_date_sk#17266], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=115108]
                           +- BroadcastQueryStage 6
                              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=115178]
                                 +- *(5) Project [t_time_sk#15635, t_hour#15638, t_minute#15639]
                                    +- *(5) Filter (((t_meal_time#15644 = breakfast           ) OR (t_meal_time#15644 = dinner              )) AND isnotnull(t_time_sk#15635))
                                       +- *(5) ColumnarToRow
                                          +- FileScan parquet default.time_dim[t_time_sk#15635,t_hour#15638,t_minute#15639,t_meal_time#15644] Batched: true, DataFilters: [((t_meal_time#15644 = breakfast           ) OR (t_meal_time#15644 = dinner              )), isno..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/time_dim], PartitionFilters: [], PushedFilters: [Or(EqualTo(t_meal_time,breakfast           ),EqualTo(t_meal_time,dinner              )), IsNotNu..., ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int,t_meal_time:string>

==== q72 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[total_cnt#17311L DESC NULLS LAST,i_item_desc#441 ASC NULLS FIRST,w_warehouse_name#7978 ASC NULLS FIRST,d_week_seq#28 ASC NULLS FIRST], output=[i_item_desc#441,w_warehouse_name#7978,d_week_seq#28,no_promo#17309L,promo#17310L,total_cnt#17311L])
   +- *(13) HashAggregate(keys=[i_item_desc#441, w_warehouse_name#7978, d_week_seq#28], functions=[count(1)], output=[i_item_desc#441, w_warehouse_name#7978, d_week_seq#28, no_promo#17309L, promo#17310L, total_cnt#17311L])
      +- ShuffleQueryStage 11
         +- Exchange hashpartitioning(i_item_desc#441, w_warehouse_name#7978, d_week_seq#28, 20), ENSURE_REQUIREMENTS, [plan_id=117538]
            +- *(12) HashAggregate(keys=[i_item_desc#441, w_warehouse_name#7978, d_week_seq#28], functions=[partial_count(1)], output=[i_item_desc#441, w_warehouse_name#7978, d_week_seq#28, count#17380L])
               +- *(12) Project [w_warehouse_name#7978, i_item_desc#441, d_week_seq#28]
                  +- *(12) BroadcastHashJoin [cs_item_sk#212, cs_order_number#214], [cr_item_sk#3293, cr_order_number#3307], LeftOuter, BuildRight, false
                     :- *(12) Project [cs_item_sk#212, cs_order_number#214, w_warehouse_name#7978, i_item_desc#441, d_week_seq#28]
                     :  +- *(12) BroadcastHashJoin [cs_promo_sk#213], [p_promo_sk#3642], LeftOuter, BuildRight, false
                     :     :- *(12) Project [cs_item_sk#212, cs_promo_sk#213, cs_order_number#214, w_warehouse_name#7978, i_item_desc#441, d_week_seq#28]
                     :     :  +- *(12) BroadcastHashJoin [cs_ship_date_sk#199], [d_date_sk#17341], Inner, BuildRight, (d_date#17343 > date_add(d_date#26, 5)), false
                     :     :     :- *(12) Project [cs_ship_date_sk#199, cs_item_sk#212, cs_promo_sk#213, cs_order_number#214, w_warehouse_name#7978, i_item_desc#441, d_date#26, d_week_seq#28]
                     :     :     :  +- *(12) BroadcastHashJoin [d_week_seq#28, inv_date_sk#7972], [d_week_seq#17317, d_date_sk#17313], Inner, BuildRight, false
                     :     :     :     :- *(12) Project [cs_ship_date_sk#199, cs_item_sk#212, cs_promo_sk#213, cs_order_number#214, inv_date_sk#7972, w_warehouse_name#7978, i_item_desc#441, d_date#26, d_week_seq#28]
                     :     :     :     :  +- *(12) BroadcastHashJoin [cs_sold_date_sk#197], [d_date_sk#24], Inner, BuildRight, false
                     :     :     :     :     :- *(12) Project [cs_sold_date_sk#197, cs_ship_date_sk#199, cs_item_sk#212, cs_promo_sk#213, cs_order_number#214, inv_date_sk#7972, w_warehouse_name#7978, i_item_desc#441]
                     :     :     :     :     :  +- *(12) BroadcastHashJoin [cs_bill_hdemo_sk#202], [hd_demo_sk#5552], Inner, BuildRight, false
                     :     :     :     :     :     :- *(12) Project [cs_sold_date_sk#197, cs_ship_date_sk#199, cs_bill_hdemo_sk#202, cs_item_sk#212, cs_promo_sk#213, cs_order_number#214, inv_date_sk#7972, w_warehouse_name#7978, i_item_desc#441]
                     :     :     :     :     :     :  +- *(12) BroadcastHashJoin [cs_bill_cdemo_sk#201], [cd_demo_sk#3633], Inner, BuildRight, false
                     :     :     :     :     :     :     :- *(12) Project [cs_sold_date_sk#197, cs_ship_date_sk#199, cs_bill_cdemo_sk#201, cs_bill_hdemo_sk#202, cs_item_sk#212, cs_promo_sk#213, cs_order_number#214, inv_date_sk#7972, w_warehouse_name#7978, i_item_desc#441]
                     :     :     :     :     :     :     :  +- *(12) BroadcastHashJoin [cs_item_sk#212], [i_item_sk#437], Inner, BuildRight, false
                     :     :     :     :     :     :     :     :- *(12) Project [cs_sold_date_sk#197, cs_ship_date_sk#199, cs_bill_cdemo_sk#201, cs_bill_hdemo_sk#202, cs_item_sk#212, cs_promo_sk#213, cs_order_number#214, inv_date_sk#7972, w_warehouse_name#7978]
                     :     :     :     :     :     :     :     :  +- *(12) BroadcastHashJoin [inv_warehouse_sk#7974], [w_warehouse_sk#7976], Inner, BuildRight, false
                     :     :     :     :     :     :     :     :     :- *(12) Project [cs_sold_date_sk#197, cs_ship_date_sk#199, cs_bill_cdemo_sk#201, cs_bill_hdemo_sk#202, cs_item_sk#212, cs_promo_sk#213, cs_order_number#214, inv_date_sk#7972, inv_warehouse_sk#7974]
                     :     :     :     :     :     :     :     :     :  +- *(12) ShuffledHashJoin [cs_item_sk#212], [inv_item_sk#7973], Inner, BuildLeft, (inv_quantity_on_hand#7975 < cs_quantity#215)
                     :     :     :     :     :     :     :     :     :     :- ShuffleQueryStage 0
                     :     :     :     :     :     :     :     :     :     :  +- Exchange hashpartitioning(cs_item_sk#212, 20), ENSURE_REQUIREMENTS, [plan_id=115963]
                     :     :     :     :     :     :     :     :     :     :     +- *(1) Filter (((((isnotnull(cs_quantity#215) AND isnotnull(cs_item_sk#212)) AND isnotnull(cs_bill_cdemo_sk#201)) AND isnotnull(cs_bill_hdemo_sk#202)) AND isnotnull(cs_sold_date_sk#197)) AND isnotnull(cs_ship_date_sk#199))
                     :     :     :     :     :     :     :     :     :     :        +- *(1) ColumnarToRow
                     :     :     :     :     :     :     :     :     :     :           +- FileScan parquet default.catalog_sales[cs_sold_date_sk#197,cs_ship_date_sk#199,cs_bill_cdemo_sk#201,cs_bill_hdemo_sk#202,cs_item_sk#212,cs_promo_sk#213,cs_order_number#214,cs_quantity#215] Batched: true, DataFilters: [isnotnull(cs_quantity#215), isnotnull(cs_item_sk#212), isnotnull(cs_bill_cdemo_sk#201), isnotnul..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_quantity), IsNotNull(cs_item_sk), IsNotNull(cs_bill_cdemo_sk), IsNotNull(cs_bill_hd..., ReadSchema: struct<cs_sold_date_sk:int,cs_ship_date_sk:int,cs_bill_cdemo_sk:int,cs_bill_hdemo_sk:int,cs_item_...
                     :     :     :     :     :     :     :     :     :     +- ShuffleQueryStage 1
                     :     :     :     :     :     :     :     :     :        +- Exchange hashpartitioning(inv_item_sk#7973, 20), ENSURE_REQUIREMENTS, [plan_id=115980]
                     :     :     :     :     :     :     :     :     :           +- *(2) Filter (((isnotnull(inv_quantity_on_hand#7975) AND isnotnull(inv_item_sk#7973)) AND isnotnull(inv_warehouse_sk#7974)) AND isnotnull(inv_date_sk#7972))
                     :     :     :     :     :     :     :     :     :              +- *(2) ColumnarToRow
                     :     :     :     :     :     :     :     :     :                 +- FileScan parquet default.inventory[inv_date_sk#7972,inv_item_sk#7973,inv_warehouse_sk#7974,inv_quantity_on_hand#7975] Batched: true, DataFilters: [isnotnull(inv_quantity_on_hand#7975), isnotnull(inv_item_sk#7973), isnotnull(inv_warehouse_sk#79..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/inventory], PartitionFilters: [], PushedFilters: [IsNotNull(inv_quantity_on_hand), IsNotNull(inv_item_sk), IsNotNull(inv_warehouse_sk), IsNotNull(..., ReadSchema: struct<inv_date_sk:int,inv_item_sk:int,inv_warehouse_sk:int,inv_quantity_on_hand:int>
                     :     :     :     :     :     :     :     :     +- BroadcastQueryStage 2
                     :     :     :     :     :     :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=115999]
                     :     :     :     :     :     :     :     :           +- *(3) Filter isnotnull(w_warehouse_sk#7976)
                     :     :     :     :     :     :     :     :              +- *(3) ColumnarToRow
                     :     :     :     :     :     :     :     :                 +- FileScan parquet default.warehouse[w_warehouse_sk#7976,w_warehouse_name#7978] Batched: true, DataFilters: [isnotnull(w_warehouse_sk#7976)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/warehouse], PartitionFilters: [], PushedFilters: [IsNotNull(w_warehouse_sk)], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string>
                     :     :     :     :     :     :     :     +- BroadcastQueryStage 3
                     :     :     :     :     :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=116016]
                     :     :     :     :     :     :     :           +- *(4) Filter isnotnull(i_item_sk#437)
                     :     :     :     :     :     :     :              +- *(4) ColumnarToRow
                     :     :     :     :     :     :     :                 +- FileScan parquet default.item[i_item_sk#437,i_item_desc#441] Batched: true, DataFilters: [isnotnull(i_item_sk#437)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_item_desc:string>
                     :     :     :     :     :     :     +- BroadcastQueryStage 4
                     :     :     :     :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=116035]
                     :     :     :     :     :     :           +- *(5) Project [cd_demo_sk#3633]
                     :     :     :     :     :     :              +- *(5) Filter ((isnotnull(cd_marital_status#3635) AND (cd_marital_status#3635 = D)) AND isnotnull(cd_demo_sk#3633))
                     :     :     :     :     :     :                 +- *(5) ColumnarToRow
                     :     :     :     :     :     :                    +- FileScan parquet default.customer_demographics[cd_demo_sk#3633,cd_marital_status#3635] Batched: true, DataFilters: [isnotnull(cd_marital_status#3635), (cd_marital_status#3635 = D), isnotnull(cd_demo_sk#3633)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer_demographics], PartitionFilters: [], PushedFilters: [IsNotNull(cd_marital_status), EqualTo(cd_marital_status,D), IsNotNull(cd_demo_sk)], ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string>
                     :     :     :     :     :     +- BroadcastQueryStage 5
                     :     :     :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=116056]
                     :     :     :     :     :           +- *(6) Project [hd_demo_sk#5552]
                     :     :     :     :     :              +- *(6) Filter ((isnotnull(hd_buy_potential#5554) AND (hd_buy_potential#5554 = >10000         )) AND isnotnull(hd_demo_sk#5552))
                     :     :     :     :     :                 +- *(6) ColumnarToRow
                     :     :     :     :     :                    +- FileScan parquet default.household_demographics[hd_demo_sk#5552,hd_buy_potential#5554] Batched: true, DataFilters: [isnotnull(hd_buy_potential#5554), (hd_buy_potential#5554 = >10000         ), isnotnull(hd_demo_s..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/household_demographics], PartitionFilters: [], PushedFilters: [IsNotNull(hd_buy_potential), EqualTo(hd_buy_potential,>10000         ), IsNotNull(hd_demo_sk)], ReadSchema: struct<hd_demo_sk:int,hd_buy_potential:string>
                     :     :     :     :     +- BroadcastQueryStage 6
                     :     :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=116077]
                     :     :     :     :           +- *(7) Project [d_date_sk#24, d_date#26, d_week_seq#28]
                     :     :     :     :              +- *(7) Filter ((((isnotnull(d_year#30) AND (d_year#30 = 1999)) AND isnotnull(d_date_sk#24)) AND isnotnull(d_week_seq#28)) AND isnotnull(d_date#26))
                     :     :     :     :                 +- *(7) ColumnarToRow
                     :     :     :     :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_date#26,d_week_seq#28,d_year#30] Batched: true, DataFilters: [isnotnull(d_year#30), (d_year#30 = 1999), isnotnull(d_date_sk#24), isnotnull(d_week_seq#28), isn..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1999), IsNotNull(d_date_sk), IsNotNull(d_week_seq), IsNotNull(..., ReadSchema: struct<d_date_sk:int,d_date:date,d_week_seq:int,d_year:int>
                     :     :     :     +- BroadcastQueryStage 7
                     :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List((shiftleft(cast(input[1, int, false] as bigint), 32) | (cast(input[0, int, false] as bigint) & 4294967295))),false), [plan_id=116096]
                     :     :     :           +- *(8) Filter (isnotnull(d_week_seq#17317) AND isnotnull(d_date_sk#17313))
                     :     :     :              +- *(8) ColumnarToRow
                     :     :     :                 +- FileScan parquet default.date_dim[d_date_sk#17313,d_week_seq#17317] Batched: true, DataFilters: [isnotnull(d_week_seq#17317), isnotnull(d_date_sk#17313)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_week_seq), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_week_seq:int>
                     :     :     +- BroadcastQueryStage 8
                     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=116113]
                     :     :           +- *(9) Filter (isnotnull(d_date#17343) AND isnotnull(d_date_sk#17341))
                     :     :              +- *(9) ColumnarToRow
                     :     :                 +- FileScan parquet default.date_dim[d_date_sk#17341,d_date#17343] Batched: true, DataFilters: [isnotnull(d_date#17343), isnotnull(d_date_sk#17341)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:date>
                     :     +- BroadcastQueryStage 9
                     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=116130]
                     :           +- *(10) Filter isnotnull(p_promo_sk#3642)
                     :              +- *(10) ColumnarToRow
                     :                 +- FileScan parquet default.promotion[p_promo_sk#3642] Batched: true, DataFilters: [isnotnull(p_promo_sk#3642)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/promotion], PartitionFilters: [], PushedFilters: [IsNotNull(p_promo_sk)], ReadSchema: struct<p_promo_sk:int>
                     +- BroadcastQueryStage 10
                        +- BroadcastExchange HashedRelationBroadcastMode(List((shiftleft(cast(input[0, int, false] as bigint), 32) | (cast(input[1, int, false] as bigint) & 4294967295))),false), [plan_id=116147]
                           +- *(11) Filter (isnotnull(cr_item_sk#3293) AND isnotnull(cr_order_number#3307))
                              +- *(11) ColumnarToRow
                                 +- FileScan parquet default.catalog_returns[cr_item_sk#3293,cr_order_number#3307] Batched: true, DataFilters: [isnotnull(cr_item_sk#3293), isnotnull(cr_order_number#3307)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_returns], PartitionFilters: [], PushedFilters: [IsNotNull(cr_item_sk), IsNotNull(cr_order_number)], ReadSchema: struct<cr_item_sk:int,cr_order_number:int>


==== q73 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   AQEShuffleRead local
   +- ShuffleQueryStage 5
      +- Exchange rangepartitioning(cnt#17381L DESC NULLS LAST, 20), ENSURE_REQUIREMENTS, [plan_id=118248]
         +- *(6) Project [c_last_name#90, c_first_name#89, c_salutation#88, c_preferred_cust_flag#91, ss_ticket_number#423, cnt#17381L]
            +- *(6) BroadcastHashJoin [ss_customer_sk#417], [c_customer_sk#81], Inner, BuildRight, false
               :- *(6) Filter ((cnt#17381L >= 1) AND (cnt#17381L <= 5))
               :  +- *(6) HashAggregate(keys=[ss_ticket_number#423, ss_customer_sk#417], functions=[count(1)], output=[ss_ticket_number#423, ss_customer_sk#417, cnt#17381L])
               :     +- ShuffleQueryStage 4
               :        +- Exchange hashpartitioning(ss_ticket_number#423, ss_customer_sk#417, 20), ENSURE_REQUIREMENTS, [plan_id=118182]
               :           +- *(5) HashAggregate(keys=[ss_ticket_number#423, ss_customer_sk#417], functions=[partial_count(1)], output=[ss_ticket_number#423, ss_customer_sk#417, count#17390L])
               :              +- *(5) Project [ss_customer_sk#417, ss_ticket_number#423]
               :                 +- *(5) BroadcastHashJoin [ss_hdemo_sk#419], [hd_demo_sk#5552], Inner, BuildRight, false
               :                    :- *(5) Project [ss_customer_sk#417, ss_hdemo_sk#419, ss_ticket_number#423]
               :                    :  +- *(5) BroadcastHashJoin [ss_store_sk#421], [s_store_sk#52], Inner, BuildRight, false
               :                    :     :- *(5) Project [ss_customer_sk#417, ss_hdemo_sk#419, ss_store_sk#421, ss_ticket_number#423]
               :                    :     :  +- *(5) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#24], Inner, BuildRight, false
               :                    :     :     :- *(5) Filter (((isnotnull(ss_sold_date_sk#414) AND isnotnull(ss_store_sk#421)) AND isnotnull(ss_hdemo_sk#419)) AND isnotnull(ss_customer_sk#417))
               :                    :     :     :  +- *(5) ColumnarToRow
               :                    :     :     :     +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_customer_sk#417,ss_hdemo_sk#419,ss_store_sk#421,ss_ticket_number#423] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#414), isnotnull(ss_store_sk#421), isnotnull(ss_hdemo_sk#419), isnotnul..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk), IsNotNull(ss_hdemo_sk), IsNotNull(ss_custome..., ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_hdemo_sk:int,ss_store_sk:int,ss_ticket_number:int>
               :                    :     :     +- BroadcastQueryStage 0
               :                    :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=117787]
               :                    :     :           +- *(1) Project [d_date_sk#24]
               :                    :     :              +- *(1) Filter ((((isnotnull(d_dom#33) AND (d_dom#33 >= 1)) AND (d_dom#33 <= 2)) AND d_year#30 IN (1999,2000,2001)) AND isnotnull(d_date_sk#24))
               :                    :     :                 +- *(1) ColumnarToRow
               :                    :     :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30,d_dom#33] Batched: true, DataFilters: [isnotnull(d_dom#33), (d_dom#33 >= 1), (d_dom#33 <= 2), d_year#30 IN (1999,2000,2001), isnotnull(..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_dom), GreaterThanOrEqual(d_dom,1), LessThanOrEqual(d_dom,2), In(d_year, [1999,2000,2..., ReadSchema: struct<d_date_sk:int,d_year:int,d_dom:int>
               :                    :     +- BroadcastQueryStage 1
               :                    :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=117808]
               :                    :           +- *(2) Project [s_store_sk#52]
               :                    :              +- *(2) Filter (s_county#75 IN (Williamson County,Franklin Parish,Bronx County,Orange County) AND isnotnull(s_store_sk#52))
               :                    :                 +- *(2) ColumnarToRow
               :                    :                    +- FileScan parquet default.store[s_store_sk#52,s_county#75] Batched: true, DataFilters: [s_county#75 IN (Williamson County,Franklin Parish,Bronx County,Orange County), isnotnull(s_store..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store], PartitionFilters: [], PushedFilters: [In(s_county, [Bronx County,Franklin Parish,Orange County,Williamson County]), IsNotNull(s_store_..., ReadSchema: struct<s_store_sk:int,s_county:string>
               :                    +- BroadcastQueryStage 2
               :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=117829]
               :                          +- *(3) Project [hd_demo_sk#5552]
               :                             +- *(3) Filter ((((isnotnull(hd_vehicle_count#5556) AND ((hd_buy_potential#5554 = >10000         ) OR (hd_buy_potential#5554 = unknown        ))) AND (hd_vehicle_count#5556 > 0)) AND CASE WHEN (hd_vehicle_count#5556 > 0) THEN ((cast(hd_dep_count#5555 as double) / cast(hd_vehicle_count#5556 as double)) > 1.0) END) AND isnotnull(hd_demo_sk#5552))
               :                                +- *(3) ColumnarToRow
               :                                   +- FileScan parquet default.household_demographics[hd_demo_sk#5552,hd_buy_potential#5554,hd_dep_count#5555,hd_vehicle_count#5556] Batched: true, DataFilters: [isnotnull(hd_vehicle_count#5556), ((hd_buy_potential#5554 = >10000         ) OR (hd_buy_potentia..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/household_demographics], PartitionFilters: [], PushedFilters: [IsNotNull(hd_vehicle_count), Or(EqualTo(hd_buy_potential,>10000         ),EqualTo(hd_buy_potenti..., ReadSchema: struct<hd_demo_sk:int,hd_buy_potential:string,hd_dep_count:int,hd_vehicle_count:int>
               +- BroadcastQueryStage 3
                  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=117852]
                     +- *(4) Filter isnotnull(c_customer_sk#81)
                        +- *(4) ColumnarToRow
                           +- FileScan parquet default.customer[c_customer_sk#81,c_salutation#88,c_first_name#89,c_last_name#90,c_preferred_cust_flag#91] Batched: true, DataFilters: [isnotnull(c_customer_sk#81)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int,c_salutation:string,c_first_name:string,c_last_name:string,c_preferred_c...


==== q76 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[channel#17391 ASC NULLS FIRST,col_name#17392 ASC NULLS FIRST,d_year#30 ASC NULLS FIRST,d_qoy#34 ASC NULLS FIRST,i_category#449 ASC NULLS FIRST], output=[channel#17391,col_name#17392,d_year#30,d_qoy#34,i_category#449,sales_cnt#17400L,sales_amt#17401])
   +- *(11) HashAggregate(keys=[channel#17391, col_name#17392, d_year#30, d_qoy#34, i_category#449], functions=[count(1), sum(UnscaledValue(ext_sales_price#17393))], output=[channel#17391, col_name#17392, d_year#30, d_qoy#34, i_category#449, sales_cnt#17400L, sales_amt#17401])
      +- ShuffleQueryStage 10
         +- Exchange hashpartitioning(channel#17391, col_name#17392, d_year#30, d_qoy#34, i_category#449, 20), ENSURE_REQUIREMENTS, [plan_id=118977]
            +- *(10) HashAggregate(keys=[channel#17391, col_name#17392, d_year#30, d_qoy#34, i_category#449], functions=[partial_count(1), partial_sum(UnscaledValue(ext_sales_price#17393))], output=[channel#17391, col_name#17392, d_year#30, d_qoy#34, i_category#449, count#17517L, sum#17518L])
               +- Union
                  :- *(7) Project [store AS channel#17391, ss_store_sk#421 AS col_name#17392, d_year#30, d_qoy#34, i_category#449, ss_ext_sales_price#429 AS ext_sales_price#17393]
                  :  +- *(7) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#24], Inner, BuildRight, false
                  :     :- *(7) Project [ss_sold_date_sk#414, ss_store_sk#421, ss_ext_sales_price#429, i_category#449]
                  :     :  +- *(7) BroadcastHashJoin [ss_item_sk#416], [i_item_sk#437], Inner, BuildRight, false
                  :     :     :- *(7) Filter ((isnull(ss_store_sk#421) AND isnotnull(ss_item_sk#416)) AND isnotnull(ss_sold_date_sk#414))
                  :     :     :  +- *(7) ColumnarToRow
                  :     :     :     +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_item_sk#416,ss_store_sk#421,ss_ext_sales_price#429] Batched: true, DataFilters: [isnull(ss_store_sk#421), isnotnull(ss_item_sk#416), isnotnull(ss_sold_date_sk#414)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNull(ss_store_sk), IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_ext_sales_price:decimal(7,2)>
                  :     :     +- BroadcastQueryStage 0
                  :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=118512]
                  :     :           +- *(1) Filter isnotnull(i_item_sk#437)
                  :     :              +- *(1) ColumnarToRow
                  :     :                 +- FileScan parquet default.item[i_item_sk#437,i_category#449] Batched: true, DataFilters: [isnotnull(i_item_sk#437)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_category:string>
                  :     +- BroadcastQueryStage 1
                  :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=118529]
                  :           +- *(2) Filter isnotnull(d_date_sk#24)
                  :              +- *(2) ColumnarToRow
                  :                 +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30,d_qoy#34] Batched: true, DataFilters: [isnotnull(d_date_sk#24)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_qoy:int>
                  :- *(8) Project [web AS channel#17394, ws_ship_customer_sk#171 AS col_name#17395, d_year#17431, d_qoy#17435, i_category#17415, ws_ext_sales_price#186 AS ext_sales_price#17396]
                  :  +- *(8) BroadcastHashJoin [ws_sold_date_sk#163], [d_date_sk#17425], Inner, BuildRight, false
                  :     :- *(8) Project [ws_sold_date_sk#163, ws_ship_customer_sk#171, ws_ext_sales_price#186, i_category#17415]
                  :     :  +- *(8) BroadcastHashJoin [ws_item_sk#166], [i_item_sk#17403], Inner, BuildRight, false
                  :     :     :- *(8) Filter ((isnull(ws_ship_customer_sk#171) AND isnotnull(ws_item_sk#166)) AND isnotnull(ws_sold_date_sk#163))
                  :     :     :  +- *(8) ColumnarToRow
                  :     :     :     +- FileScan parquet default.web_sales[ws_sold_date_sk#163,ws_item_sk#166,ws_ship_customer_sk#171,ws_ext_sales_price#186] Batched: true, DataFilters: [isnull(ws_ship_customer_sk#171), isnotnull(ws_item_sk#166), isnotnull(ws_sold_date_sk#163)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNull(ws_ship_customer_sk), IsNotNull(ws_item_sk), IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_ship_customer_sk:int,ws_ext_sales_price:decimal(7,2)>
                  :     :     +- BroadcastQueryStage 3
                  :     :        +- ReusedExchange [i_item_sk#17403, i_category#17415], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=118512]
                  :     +- BroadcastQueryStage 5
                  :        +- ReusedExchange [d_date_sk#17425, d_year#17431, d_qoy#17435], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=118529]
                  +- *(9) Project [catalog AS channel#17397, cs_ship_addr_sk#207 AS col_name#17398, d_year#17481, d_qoy#17485, i_category#17465, cs_ext_sales_price#220 AS ext_sales_price#17399]
                     +- *(9) BroadcastHashJoin [cs_sold_date_sk#197], [d_date_sk#17475], Inner, BuildRight, false
                        :- *(9) Project [cs_sold_date_sk#197, cs_ship_addr_sk#207, cs_ext_sales_price#220, i_category#17465]
                        :  +- *(9) BroadcastHashJoin [cs_item_sk#212], [i_item_sk#17453], Inner, BuildRight, false
                        :     :- *(9) Filter ((isnull(cs_ship_addr_sk#207) AND isnotnull(cs_item_sk#212)) AND isnotnull(cs_sold_date_sk#197))
                        :     :  +- *(9) ColumnarToRow
                        :     :     +- FileScan parquet default.catalog_sales[cs_sold_date_sk#197,cs_ship_addr_sk#207,cs_item_sk#212,cs_ext_sales_price#220] Batched: true, DataFilters: [isnull(cs_ship_addr_sk#207), isnotnull(cs_item_sk#212), isnotnull(cs_sold_date_sk#197)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNull(cs_ship_addr_sk), IsNotNull(cs_item_sk), IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_ship_addr_sk:int,cs_item_sk:int,cs_ext_sales_price:decimal(7,2)>
                        :     +- BroadcastQueryStage 7
                        :        +- ReusedExchange [i_item_sk#17453, i_category#17465], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=118512]
                        +- BroadcastQueryStage 9
                           +- ReusedExchange [d_date_sk#17475, d_year#17481, d_qoy#17485], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=118529]


==== q77 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[channel#17771 ASC NULLS FIRST,id#17772 ASC NULLS FIRST], output=[channel#17771,id#17772,sales#17533,returns#17534,profit#17535])
   +- *(24) HashAggregate(keys=[channel#17771, id#17772, spark_grouping_id#17770L], functions=[sum(sales#17536), sum(returns#17524), sum(profit#17525)], output=[channel#17771, id#17772, sales#17533, returns#17534, profit#17535])
      +- ShuffleQueryStage 26
         +- Exchange hashpartitioning(channel#17771, id#17772, spark_grouping_id#17770L, 20), ENSURE_REQUIREMENTS, [plan_id=121901]
            +- *(23) HashAggregate(keys=[channel#17771, id#17772, spark_grouping_id#17770L], functions=[partial_sum(sales#17536), partial_sum(returns#17524), partial_sum(profit#17525)], output=[channel#17771, id#17772, spark_grouping_id#17770L, sum#17788, isEmpty#17789, sum#17790, isEmpty#17791, sum#17792, isEmpty#17793])
               +- *(23) Expand [[sales#17536, returns#17524, profit#17525, channel#17768, id#17769, 0], [sales#17536, returns#17524, profit#17525, channel#17768, null, 1], [sales#17536, returns#17524, profit#17525, null, null, 3]], [sales#17536, returns#17524, profit#17525, channel#17771, id#17772, spark_grouping_id#17770L]
                  +- Union
                     :- *(20) Project [sales#17536, coalesce(returns#17538, 0.00) AS returns#17524, CheckOverflow((promote_precision(cast(profit#17537 as decimal(18,2))) - promote_precision(cast(coalesce(profit_loss#17539, 0.00) as decimal(18,2)))), DecimalType(18,2)) AS profit#17525, store channel AS channel#17768, s_store_sk#52 AS id#17769]
                     :  +- *(20) BroadcastHashJoin [s_store_sk#52], [s_store_sk#17590], LeftOuter, BuildRight, false
                     :     :- *(20) HashAggregate(keys=[s_store_sk#52], functions=[sum(UnscaledValue(ss_ext_sales_price#429)), sum(UnscaledValue(ss_net_profit#436))], output=[s_store_sk#52, sales#17536, profit#17537])
                     :     :  +- ShuffleQueryStage 17
                     :     :     +- Exchange hashpartitioning(s_store_sk#52, 20), ENSURE_REQUIREMENTS, [plan_id=120987]
                     :     :        +- *(11) HashAggregate(keys=[s_store_sk#52], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#429)), partial_sum(UnscaledValue(ss_net_profit#436))], output=[s_store_sk#52, sum#17796L, sum#17797L])
                     :     :           +- *(11) Project [ss_ext_sales_price#429, ss_net_profit#436, s_store_sk#52]
                     :     :              +- *(11) BroadcastHashJoin [ss_store_sk#421], [s_store_sk#52], Inner, BuildRight, false
                     :     :                 :- *(11) Project [ss_store_sk#421, ss_ext_sales_price#429, ss_net_profit#436]
                     :     :                 :  +- *(11) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#24], Inner, BuildRight, false
                     :     :                 :     :- *(11) Filter (isnotnull(ss_sold_date_sk#414) AND isnotnull(ss_store_sk#421))
                     :     :                 :     :  +- *(11) ColumnarToRow
                     :     :                 :     :     +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_store_sk#421,ss_ext_sales_price#429,ss_net_profit#436] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#414), isnotnull(ss_store_sk#421)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_store_sk:int,ss_ext_sales_price:decimal(7,2),ss_net_profit:decimal(...
                     :     :                 :     +- BroadcastQueryStage 0
                     :     :                 :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=119640]
                     :     :                 :           +- *(1) Project [d_date_sk#24]
                     :     :                 :              +- *(1) Filter (((isnotnull(d_date#26) AND (d_date#26 >= 2000-08-03)) AND (d_date#26 <= 2000-09-02)) AND isnotnull(d_date_sk#24))
                     :     :                 :                 +- *(1) ColumnarToRow
                     :     :                 :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_date#26] Batched: true, DataFilters: [isnotnull(d_date#26), (d_date#26 >= 2000-08-03), (d_date#26 <= 2000-09-02), isnotnull(d_date_sk#..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2000-08-03), LessThanOrEqual(d_date,2000-09-02), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>
                     :     :                 +- BroadcastQueryStage 1
                     :     :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=119659]
                     :     :                       +- *(2) Filter isnotnull(s_store_sk#52)
                     :     :                          +- *(2) ColumnarToRow
                     :     :                             +- FileScan parquet default.store[s_store_sk#52] Batched: true, DataFilters: [isnotnull(s_store_sk#52)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int>
                     :     +- BroadcastQueryStage 23
                     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=121398]
                     :           +- *(17) HashAggregate(keys=[s_store_sk#17590], functions=[sum(UnscaledValue(sr_return_amt#15)), sum(UnscaledValue(sr_net_loss#23))], output=[s_store_sk#17590, returns#17538, profit_loss#17539])
                     :              +- ShuffleQueryStage 18
                     :                 +- Exchange hashpartitioning(s_store_sk#17590, 20), ENSURE_REQUIREMENTS, [plan_id=121029]
                     :                    +- *(12) HashAggregate(keys=[s_store_sk#17590], functions=[partial_sum(UnscaledValue(sr_return_amt#15)), partial_sum(UnscaledValue(sr_net_loss#23))], output=[s_store_sk#17590, sum#17800L, sum#17801L])
                     :                       +- *(12) Project [sr_return_amt#15, sr_net_loss#23, s_store_sk#17590]
                     :                          +- *(12) BroadcastHashJoin [sr_store_sk#11], [s_store_sk#17590], Inner, BuildRight, false
                     :                             :- *(12) Project [sr_store_sk#11, sr_return_amt#15, sr_net_loss#23]
                     :                             :  +- *(12) BroadcastHashJoin [sr_returned_date_sk#4], [d_date_sk#17562], Inner, BuildRight, false
                     :                             :     :- *(12) Filter (isnotnull(sr_returned_date_sk#4) AND isnotnull(sr_store_sk#11))
                     :                             :     :  +- *(12) ColumnarToRow
                     :                             :     :     +- FileScan parquet default.store_returns[sr_returned_date_sk#4,sr_store_sk#11,sr_return_amt#15,sr_net_loss#23] Batched: true, DataFilters: [isnotnull(sr_returned_date_sk#4), isnotnull(sr_store_sk#11)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_returns], PartitionFilters: [], PushedFilters: [IsNotNull(sr_returned_date_sk), IsNotNull(sr_store_sk)], ReadSchema: struct<sr_returned_date_sk:int,sr_store_sk:int,sr_return_amt:decimal(7,2),sr_net_loss:decimal(7,2)>
                     :                             :     +- BroadcastQueryStage 3
                     :                             :        +- ReusedExchange [d_date_sk#17562], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=119640]
                     :                             +- BroadcastQueryStage 5
                     :                                +- ReusedExchange [s_store_sk#17590], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=119659]
                     :- *(21) Project [sales#17540, returns#17542, CheckOverflow((promote_precision(cast(profit#17541 as decimal(18,2))) - promote_precision(cast(profit_loss#17543 as decimal(18,2)))), DecimalType(18,2)) AS profit#17528, catalog channel AS channel#17778, cs_call_center_sk#208 AS id#17779]
                     :  +- *(21) BroadcastNestedLoopJoin BuildLeft, Inner
                     :     :- BroadcastQueryStage 24
                     :     :  +- BroadcastExchange IdentityBroadcastMode, [plan_id=121564]
                     :     :     +- *(18) HashAggregate(keys=[cs_call_center_sk#208], functions=[sum(UnscaledValue(cs_ext_sales_price#220)), sum(UnscaledValue(cs_net_profit#230))], output=[cs_call_center_sk#208, sales#17540, profit#17541])
                     :     :        +- ShuffleQueryStage 19
                     :     :           +- Exchange hashpartitioning(cs_call_center_sk#208, 20), ENSURE_REQUIREMENTS, [plan_id=121068]
                     :     :              +- *(13) HashAggregate(keys=[cs_call_center_sk#208], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#220)), partial_sum(UnscaledValue(cs_net_profit#230))], output=[cs_call_center_sk#208, sum#17804L, sum#17805L])
                     :     :                 +- *(13) Project [cs_call_center_sk#208, cs_ext_sales_price#220, cs_net_profit#230]
                     :     :                    +- *(13) BroadcastHashJoin [cs_sold_date_sk#197], [d_date_sk#17619], Inner, BuildRight, false
                     :     :                       :- *(13) Filter isnotnull(cs_sold_date_sk#197)
                     :     :                       :  +- *(13) ColumnarToRow
                     :     :                       :     +- FileScan parquet default.catalog_sales[cs_sold_date_sk#197,cs_call_center_sk#208,cs_ext_sales_price#220,cs_net_profit#230] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#197)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_call_center_sk:int,cs_ext_sales_price:decimal(7,2),cs_net_profit:de...
                     :     :                       +- BroadcastQueryStage 7
                     :     :                          +- ReusedExchange [d_date_sk#17619], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=119640]
                     :     +- *(21) HashAggregate(keys=[], functions=[sum(UnscaledValue(cr_return_amount#3309)), sum(UnscaledValue(cr_net_loss#3317))], output=[returns#17542, profit_loss#17543])
                     :        +- ShuffleQueryStage 20
                     :           +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=121099]
                     :              +- *(14) HashAggregate(keys=[], functions=[partial_sum(UnscaledValue(cr_return_amount#3309)), partial_sum(UnscaledValue(cr_net_loss#3317))], output=[sum#17808L, sum#17809L])
                     :                 +- *(14) Project [cr_return_amount#3309, cr_net_loss#3317]
                     :                    +- *(14) BroadcastHashJoin [cr_returned_date_sk#3291], [d_date_sk#17647], Inner, BuildRight, false
                     :                       :- *(14) Filter isnotnull(cr_returned_date_sk#3291)
                     :                       :  +- *(14) ColumnarToRow
                     :                       :     +- FileScan parquet default.catalog_returns[cr_returned_date_sk#3291,cr_return_amount#3309,cr_net_loss#3317] Batched: true, DataFilters: [isnotnull(cr_returned_date_sk#3291)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_returns], PartitionFilters: [], PushedFilters: [IsNotNull(cr_returned_date_sk)], ReadSchema: struct<cr_returned_date_sk:int,cr_return_amount:decimal(7,2),cr_net_loss:decimal(7,2)>
                     :                       +- BroadcastQueryStage 9
                     :                          +- ReusedExchange [d_date_sk#17647], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=119640]
                     +- *(22) Project [sales#17544, coalesce(returns#17546, 0.00) AS returns#17531, CheckOverflow((promote_precision(cast(profit#17545 as decimal(18,2))) - promote_precision(cast(coalesce(profit_loss#17547, 0.00) as decimal(18,2)))), DecimalType(18,2)) AS profit#17532, web channel AS channel#17780, wp_web_page_sk#17548 AS id#17781]
                        +- *(22) BroadcastHashJoin [wp_web_page_sk#17548], [wp_web_page_sk#17731], LeftOuter, BuildRight, false
                           :- *(22) HashAggregate(keys=[wp_web_page_sk#17548], functions=[sum(UnscaledValue(ws_ext_sales_price#186)), sum(UnscaledValue(ws_net_profit#196))], output=[wp_web_page_sk#17548, sales#17544, profit#17545])
                           :  +- ShuffleQueryStage 21
                           :     +- Exchange hashpartitioning(wp_web_page_sk#17548, 20), ENSURE_REQUIREMENTS, [plan_id=121137]
                           :        +- *(15) HashAggregate(keys=[wp_web_page_sk#17548], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#186)), partial_sum(UnscaledValue(ws_net_profit#196))], output=[wp_web_page_sk#17548, sum#17812L, sum#17813L])
                           :           +- *(15) Project [ws_ext_sales_price#186, ws_net_profit#196, wp_web_page_sk#17548]
                           :              +- *(15) BroadcastHashJoin [ws_web_page_sk#175], [wp_web_page_sk#17548], Inner, BuildRight, false
                           :                 :- *(15) Project [ws_web_page_sk#175, ws_ext_sales_price#186, ws_net_profit#196]
                           :                 :  +- *(15) BroadcastHashJoin [ws_sold_date_sk#163], [d_date_sk#17675], Inner, BuildRight, false
                           :                 :     :- *(15) Filter (isnotnull(ws_sold_date_sk#163) AND isnotnull(ws_web_page_sk#175))
                           :                 :     :  +- *(15) ColumnarToRow
                           :                 :     :     +- FileScan parquet default.web_sales[ws_sold_date_sk#163,ws_web_page_sk#175,ws_ext_sales_price#186,ws_net_profit#196] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#163), isnotnull(ws_web_page_sk#175)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_web_page_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_web_page_sk:int,ws_ext_sales_price:decimal(7,2),ws_net_profit:decim...
                           :                 :     +- BroadcastQueryStage 11
                           :                 :        +- ReusedExchange [d_date_sk#17675], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=119640]
                           :                 +- BroadcastQueryStage 12
                           :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=119806]
                           :                       +- *(8) Filter isnotnull(wp_web_page_sk#17548)
                           :                          +- *(8) ColumnarToRow
                           :                             +- FileScan parquet default.web_page[wp_web_page_sk#17548] Batched: true, DataFilters: [isnotnull(wp_web_page_sk#17548)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_page], PartitionFilters: [], PushedFilters: [IsNotNull(wp_web_page_sk)], ReadSchema: struct<wp_web_page_sk:int>
                           +- BroadcastQueryStage 25
                              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=121717]
                                 +- *(19) HashAggregate(keys=[wp_web_page_sk#17731], functions=[sum(UnscaledValue(wr_return_amt#3342)), sum(UnscaledValue(wr_net_loss#3350))], output=[wp_web_page_sk#17731, returns#17546, profit_loss#17547])
                                    +- ShuffleQueryStage 22
                                       +- Exchange hashpartitioning(wp_web_page_sk#17731, 20), ENSURE_REQUIREMENTS, [plan_id=121179]
                                          +- *(16) HashAggregate(keys=[wp_web_page_sk#17731], functions=[partial_sum(UnscaledValue(wr_return_amt#3342)), partial_sum(UnscaledValue(wr_net_loss#3350))], output=[wp_web_page_sk#17731, sum#17816L, sum#17817L])
                                             +- *(16) Project [wr_return_amt#3342, wr_net_loss#3350, wp_web_page_sk#17731]
                                                +- *(16) BroadcastHashJoin [wr_web_page_sk#3338], [wp_web_page_sk#17731], Inner, BuildRight, false
                                                   :- *(16) Project [wr_web_page_sk#3338, wr_return_amt#3342, wr_net_loss#3350]
                                                   :  +- *(16) BroadcastHashJoin [wr_returned_date_sk#3327], [d_date_sk#17703], Inner, BuildRight, false
                                                   :     :- *(16) Filter (isnotnull(wr_returned_date_sk#3327) AND isnotnull(wr_web_page_sk#3338))
                                                   :     :  +- *(16) ColumnarToRow
                                                   :     :     +- FileScan parquet default.web_returns[wr_returned_date_sk#3327,wr_web_page_sk#3338,wr_return_amt#3342,wr_net_loss#3350] Batched: true, DataFilters: [isnotnull(wr_returned_date_sk#3327), isnotnull(wr_web_page_sk#3338)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_returns], PartitionFilters: [], PushedFilters: [IsNotNull(wr_returned_date_sk), IsNotNull(wr_web_page_sk)], ReadSchema: struct<wr_returned_date_sk:int,wr_web_page_sk:int,wr_return_amt:decimal(7,2),wr_net_loss:decimal(...
                                                   :     +- BroadcastQueryStage 14
                                                   :        +- ReusedExchange [d_date_sk#17703], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=119640]
                                                   +- BroadcastQueryStage 16
                                                      +- ReusedExchange [wp_web_page_sk#17731], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=119806]

==== q79 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[c_last_name#90 ASC NULLS FIRST,c_first_name#89 ASC NULLS FIRST,substr(s_city#74, 1, 30) ASC NULLS FIRST,profit#17939 ASC NULLS FIRST], output=[c_last_name#90,c_first_name#89,substr(s_city, 1, 30)#17942,ss_ticket_number#423,amt#17938,profit#17939])
   +- *(6) Project [c_last_name#90, c_first_name#89, substr(s_city#74, 1, 30) AS substr(s_city, 1, 30)#17942, ss_ticket_number#423, amt#17938, profit#17939, s_city#74]
      +- *(6) BroadcastHashJoin [ss_customer_sk#417], [c_customer_sk#81], Inner, BuildRight, false
         :- *(6) HashAggregate(keys=[ss_ticket_number#423, ss_customer_sk#417, ss_addr_sk#420, s_city#74], functions=[sum(UnscaledValue(ss_coupon_amt#433)), sum(UnscaledValue(ss_net_profit#436))], output=[ss_ticket_number#423, ss_customer_sk#417, s_city#74, amt#17938, profit#17939])
         :  +- ShuffleQueryStage 4
         :     +- Exchange hashpartitioning(ss_ticket_number#423, ss_customer_sk#417, ss_addr_sk#420, s_city#74, 20), ENSURE_REQUIREMENTS, [plan_id=122405]
         :        +- *(5) HashAggregate(keys=[ss_ticket_number#423, ss_customer_sk#417, ss_addr_sk#420, s_city#74], functions=[partial_sum(UnscaledValue(ss_coupon_amt#433)), partial_sum(UnscaledValue(ss_net_profit#436))], output=[ss_ticket_number#423, ss_customer_sk#417, ss_addr_sk#420, s_city#74, sum#17951L, sum#17952L])
         :           +- *(5) Project [ss_customer_sk#417, ss_addr_sk#420, ss_ticket_number#423, ss_coupon_amt#433, ss_net_profit#436, s_city#74]
         :              +- *(5) BroadcastHashJoin [ss_hdemo_sk#419], [hd_demo_sk#5552], Inner, BuildRight, false
         :                 :- *(5) Project [ss_customer_sk#417, ss_hdemo_sk#419, ss_addr_sk#420, ss_ticket_number#423, ss_coupon_amt#433, ss_net_profit#436, s_city#74]
         :                 :  +- *(5) BroadcastHashJoin [ss_store_sk#421], [s_store_sk#52], Inner, BuildRight, false
         :                 :     :- *(5) Project [ss_customer_sk#417, ss_hdemo_sk#419, ss_addr_sk#420, ss_store_sk#421, ss_ticket_number#423, ss_coupon_amt#433, ss_net_profit#436]
         :                 :     :  +- *(5) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#24], Inner, BuildRight, false
         :                 :     :     :- *(5) Filter (((isnotnull(ss_sold_date_sk#414) AND isnotnull(ss_store_sk#421)) AND isnotnull(ss_hdemo_sk#419)) AND isnotnull(ss_customer_sk#417))
         :                 :     :     :  +- *(5) ColumnarToRow
         :                 :     :     :     +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_customer_sk#417,ss_hdemo_sk#419,ss_addr_sk#420,ss_store_sk#421,ss_ticket_number#423,ss_coupon_amt#433,ss_net_profit#436] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#414), isnotnull(ss_store_sk#421), isnotnull(ss_hdemo_sk#419), isnotnul..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk), IsNotNull(ss_hdemo_sk), IsNotNull(ss_custome..., ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int,ss_hdemo_sk:int,ss_addr_sk:int,ss_store_sk:int,ss_t...
         :                 :     :     +- BroadcastQueryStage 0
         :                 :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=122109]
         :                 :     :           +- *(1) Project [d_date_sk#24]
         :                 :     :              +- *(1) Filter (((isnotnull(d_dow#31) AND (d_dow#31 = 1)) AND d_year#30 IN (1999,2000,2001)) AND isnotnull(d_date_sk#24))
         :                 :     :                 +- *(1) ColumnarToRow
         :                 :     :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30,d_dow#31] Batched: true, DataFilters: [isnotnull(d_dow#31), (d_dow#31 = 1), d_year#30 IN (1999,2000,2001), isnotnull(d_date_sk#24)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_dow), EqualTo(d_dow,1), In(d_year, [1999,2000,2001]), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_dow:int>
         :                 :     +- BroadcastQueryStage 1
         :                 :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=122130]
         :                 :           +- *(2) Project [s_store_sk#52, s_city#74]
         :                 :              +- *(2) Filter (((isnotnull(s_number_employees#58) AND (s_number_employees#58 >= 200)) AND (s_number_employees#58 <= 295)) AND isnotnull(s_store_sk#52))
         :                 :                 +- *(2) ColumnarToRow
         :                 :                    +- FileScan parquet default.store[s_store_sk#52,s_number_employees#58,s_city#74] Batched: true, DataFilters: [isnotnull(s_number_employees#58), (s_number_employees#58 >= 200), (s_number_employees#58 <= 295)..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_number_employees), GreaterThanOrEqual(s_number_employees,200), LessThanOrEqual(s_num..., ReadSchema: struct<s_store_sk:int,s_number_employees:int,s_city:string>
         :                 +- BroadcastQueryStage 2
         :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=122151]
         :                       +- *(3) Project [hd_demo_sk#5552]
         :                          +- *(3) Filter (((hd_dep_count#5555 = 6) OR (hd_vehicle_count#5556 > 2)) AND isnotnull(hd_demo_sk#5552))
         :                             +- *(3) ColumnarToRow
         :                                +- FileScan parquet default.household_demographics[hd_demo_sk#5552,hd_dep_count#5555,hd_vehicle_count#5556] Batched: true, DataFilters: [((hd_dep_count#5555 = 6) OR (hd_vehicle_count#5556 > 2)), isnotnull(hd_demo_sk#5552)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/household_demographics], PartitionFilters: [], PushedFilters: [Or(EqualTo(hd_dep_count,6),GreaterThan(hd_vehicle_count,2)), IsNotNull(hd_demo_sk)], ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int,hd_vehicle_count:int>
         +- BroadcastQueryStage 3
            +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=122177]
               +- *(4) Filter isnotnull(c_customer_sk#81)
                  +- *(4) ColumnarToRow
                     +- FileScan parquet default.customer[c_customer_sk#81,c_first_name#89,c_last_name#90] Batched: true, DataFilters: [isnotnull(c_customer_sk#81)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string>

==== q80 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[channel#18138 ASC NULLS FIRST,id#18139 ASC NULLS FIRST], output=[channel#18138,id#18139,sales#17965,returns#17966,profit#17967])
   +- *(23) HashAggregate(keys=[channel#18138, id#18139, spark_grouping_id#18137L], functions=[sum(sales#17969), sum(returns#17970), sum(profit#17971)], output=[channel#18138, id#18139, sales#17965, returns#17966, profit#17967])
      +- ShuffleQueryStage 24
         +- Exchange hashpartitioning(channel#18138, id#18139, spark_grouping_id#18137L, 20), ENSURE_REQUIREMENTS, [plan_id=125712]
            +- *(22) HashAggregate(keys=[channel#18138, id#18139, spark_grouping_id#18137L], functions=[partial_sum(sales#17969), partial_sum(returns#17970), partial_sum(profit#17971)], output=[channel#18138, id#18139, spark_grouping_id#18137L, sum#18155, isEmpty#18156, sum#18157, isEmpty#18158, sum#18159, isEmpty#18160])
               +- *(22) Expand [[sales#17969, returns#17970, profit#17971, channel#18135, id#18136, 0], [sales#17969, returns#17970, profit#17971, channel#18135, null, 1], [sales#17969, returns#17970, profit#17971, null, null, 3]], [sales#17969, returns#17970, profit#17971, channel#18138, id#18139, spark_grouping_id#18137L]
                  +- Union
                     :- *(19) HashAggregate(keys=[s_store_id#53], functions=[sum(UnscaledValue(ss_ext_sales_price#429)), sum(coalesce(cast(sr_return_amt#15 as decimal(12,2)), 0.00)), sum(CheckOverflow((promote_precision(cast(ss_net_profit#436 as decimal(13,2))) - promote_precision(cast(coalesce(cast(sr_net_loss#23 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2)))], output=[sales#17969, returns#17970, profit#17971, channel#18135, id#18136])
                     :  +- ShuffleQueryStage 21
                     :     +- Exchange hashpartitioning(s_store_id#53, 20), ENSURE_REQUIREMENTS, [plan_id=125437]
                     :        +- *(16) HashAggregate(keys=[s_store_id#53], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#429)), partial_sum(coalesce(cast(sr_return_amt#15 as decimal(12,2)), 0.00)), partial_sum(CheckOverflow((promote_precision(cast(ss_net_profit#436 as decimal(13,2))) - promote_precision(cast(coalesce(cast(sr_net_loss#23 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2)))], output=[s_store_id#53, sum#18166L, sum#18167, isEmpty#18168, sum#18169, isEmpty#18170])
                     :           +- *(16) Project [ss_ext_sales_price#429, ss_net_profit#436, sr_return_amt#15, sr_net_loss#23, s_store_id#53]
                     :              +- *(16) BroadcastHashJoin [ss_promo_sk#422], [p_promo_sk#3642], Inner, BuildRight, false
                     :                 :- *(16) Project [ss_promo_sk#422, ss_ext_sales_price#429, ss_net_profit#436, sr_return_amt#15, sr_net_loss#23, s_store_id#53]
                     :                 :  +- *(16) BroadcastHashJoin [ss_item_sk#416], [i_item_sk#437], Inner, BuildRight, false
                     :                 :     :- *(16) Project [ss_item_sk#416, ss_promo_sk#422, ss_ext_sales_price#429, ss_net_profit#436, sr_return_amt#15, sr_net_loss#23, s_store_id#53]
                     :                 :     :  +- *(16) BroadcastHashJoin [ss_store_sk#421], [s_store_sk#52], Inner, BuildRight, false
                     :                 :     :     :- *(16) Project [ss_item_sk#416, ss_store_sk#421, ss_promo_sk#422, ss_ext_sales_price#429, ss_net_profit#436, sr_return_amt#15, sr_net_loss#23]
                     :                 :     :     :  +- *(16) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#24], Inner, BuildRight, false
                     :                 :     :     :     :- *(16) Project [ss_sold_date_sk#414, ss_item_sk#416, ss_store_sk#421, ss_promo_sk#422, ss_ext_sales_price#429, ss_net_profit#436, sr_return_amt#15, sr_net_loss#23]
                     :                 :     :     :     :  +- *(16) BroadcastHashJoin [ss_item_sk#416, ss_ticket_number#423], [sr_item_sk#6, sr_ticket_number#13], LeftOuter, BuildRight, false
                     :                 :     :     :     :     :- *(16) Filter (((isnotnull(ss_sold_date_sk#414) AND isnotnull(ss_store_sk#421)) AND isnotnull(ss_item_sk#416)) AND isnotnull(ss_promo_sk#422))
                     :                 :     :     :     :     :  +- *(16) ColumnarToRow
                     :                 :     :     :     :     :     +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_item_sk#416,ss_store_sk#421,ss_promo_sk#422,ss_ticket_number#423,ss_ext_sales_price#429,ss_net_profit#436] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#414), isnotnull(ss_store_sk#421), isnotnull(ss_item_sk#416), isnotnull..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk), IsNotNull(ss_item_sk), IsNotNull(ss_promo_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_promo_sk:int,ss_ticket_number:int,ss...
                     :                 :     :     :     :     +- BroadcastQueryStage 0
                     :                 :     :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List((shiftleft(cast(input[0, int, false] as bigint), 32) | (cast(input[1, int, false] as bigint) & 4294967295))),false), [plan_id=123063]
                     :                 :     :     :     :           +- *(1) Filter (isnotnull(sr_item_sk#6) AND isnotnull(sr_ticket_number#13))
                     :                 :     :     :     :              +- *(1) ColumnarToRow
                     :                 :     :     :     :                 +- FileScan parquet default.store_returns[sr_item_sk#6,sr_ticket_number#13,sr_return_amt#15,sr_net_loss#23] Batched: true, DataFilters: [isnotnull(sr_item_sk#6), isnotnull(sr_ticket_number#13)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_returns], PartitionFilters: [], PushedFilters: [IsNotNull(sr_item_sk), IsNotNull(sr_ticket_number)], ReadSchema: struct<sr_item_sk:int,sr_ticket_number:int,sr_return_amt:decimal(7,2),sr_net_loss:decimal(7,2)>
                     :                 :     :     :     +- BroadcastQueryStage 1
                     :                 :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=123082]
                     :                 :     :     :           +- *(2) Project [d_date_sk#24]
                     :                 :     :     :              +- *(2) Filter (((isnotnull(d_date#26) AND (d_date#26 >= 2000-08-23)) AND (d_date#26 <= 2000-09-22)) AND isnotnull(d_date_sk#24))
                     :                 :     :     :                 +- *(2) ColumnarToRow
                     :                 :     :     :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_date#26] Batched: true, DataFilters: [isnotnull(d_date#26), (d_date#26 >= 2000-08-23), (d_date#26 <= 2000-09-22), isnotnull(d_date_sk#..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2000-08-23), LessThanOrEqual(d_date,2000-09-22), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>
                     :                 :     :     +- BroadcastQueryStage 2
                     :                 :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=123101]
                     :                 :     :           +- *(3) Filter isnotnull(s_store_sk#52)
                     :                 :     :              +- *(3) ColumnarToRow
                     :                 :     :                 +- FileScan parquet default.store[s_store_sk#52,s_store_id#53] Batched: true, DataFilters: [isnotnull(s_store_sk#52)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_id:string>
                     :                 :     +- BroadcastQueryStage 3
                     :                 :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=123120]
                     :                 :           +- *(4) Project [i_item_sk#437]
                     :                 :              +- *(4) Filter ((isnotnull(i_current_price#442) AND (i_current_price#442 > 50.00)) AND isnotnull(i_item_sk#437))
                     :                 :                 +- *(4) ColumnarToRow
                     :                 :                    +- FileScan parquet default.item[i_item_sk#437,i_current_price#442] Batched: true, DataFilters: [isnotnull(i_current_price#442), (i_current_price#442 > 50.00), isnotnull(i_item_sk#437)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_current_price), GreaterThan(i_current_price,50.00), IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2)>
                     :                 +- BroadcastQueryStage 4
                     :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=123141]
                     :                       +- *(5) Project [p_promo_sk#3642]
                     :                          +- *(5) Filter ((isnotnull(p_channel_tv#3653) AND (p_channel_tv#3653 = N)) AND isnotnull(p_promo_sk#3642))
                     :                             +- *(5) ColumnarToRow
                     :                                +- FileScan parquet default.promotion[p_promo_sk#3642,p_channel_tv#3653] Batched: true, DataFilters: [isnotnull(p_channel_tv#3653), (p_channel_tv#3653 = N), isnotnull(p_promo_sk#3642)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/promotion], PartitionFilters: [], PushedFilters: [IsNotNull(p_channel_tv), EqualTo(p_channel_tv,N), IsNotNull(p_promo_sk)], ReadSchema: struct<p_promo_sk:int,p_channel_tv:string>
                     :- *(20) HashAggregate(keys=[cp_catalog_page_id#3319], functions=[sum(UnscaledValue(cs_ext_sales_price#220)), sum(coalesce(cast(cr_return_amount#3309 as decimal(12,2)), 0.00)), sum(CheckOverflow((promote_precision(cast(cs_net_profit#230 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_net_loss#3317 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2)))], output=[sales#17973, returns#17974, profit#17975, channel#18145, id#18146])
                     :  +- ShuffleQueryStage 22
                     :     +- Exchange hashpartitioning(cp_catalog_page_id#3319, 20), ENSURE_REQUIREMENTS, [plan_id=125508]
                     :        +- *(17) HashAggregate(keys=[cp_catalog_page_id#3319], functions=[partial_sum(UnscaledValue(cs_ext_sales_price#220)), partial_sum(coalesce(cast(cr_return_amount#3309 as decimal(12,2)), 0.00)), partial_sum(CheckOverflow((promote_precision(cast(cs_net_profit#230 as decimal(13,2))) - promote_precision(cast(coalesce(cast(cr_net_loss#3317 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2)))], output=[cp_catalog_page_id#3319, sum#18176L, sum#18177, isEmpty#18178, sum#18179, isEmpty#18180])
                     :           +- *(17) Project [cs_ext_sales_price#220, cs_net_profit#230, cr_return_amount#3309, cr_net_loss#3317, cp_catalog_page_id#3319]
                     :              +- *(17) BroadcastHashJoin [cs_promo_sk#213], [p_promo_sk#18029], Inner, BuildRight, false
                     :                 :- *(17) Project [cs_promo_sk#213, cs_ext_sales_price#220, cs_net_profit#230, cr_return_amount#3309, cr_net_loss#3317, cp_catalog_page_id#3319]
                     :                 :  +- *(17) BroadcastHashJoin [cs_item_sk#212], [i_item_sk#18007], Inner, BuildRight, false
                     :                 :     :- *(17) Project [cs_item_sk#212, cs_promo_sk#213, cs_ext_sales_price#220, cs_net_profit#230, cr_return_amount#3309, cr_net_loss#3317, cp_catalog_page_id#3319]
                     :                 :     :  +- *(17) BroadcastHashJoin [cs_catalog_page_sk#209], [cp_catalog_page_sk#3318], Inner, BuildRight, false
                     :                 :     :     :- *(17) Project [cs_catalog_page_sk#209, cs_item_sk#212, cs_promo_sk#213, cs_ext_sales_price#220, cs_net_profit#230, cr_return_amount#3309, cr_net_loss#3317]
                     :                 :     :     :  +- *(17) BroadcastHashJoin [cs_sold_date_sk#197], [d_date_sk#17979], Inner, BuildRight, false
                     :                 :     :     :     :- *(17) Project [cs_sold_date_sk#197, cs_catalog_page_sk#209, cs_item_sk#212, cs_promo_sk#213, cs_ext_sales_price#220, cs_net_profit#230, cr_return_amount#3309, cr_net_loss#3317]
                     :                 :     :     :     :  +- *(17) BroadcastHashJoin [cs_item_sk#212, cs_order_number#214], [cr_item_sk#3293, cr_order_number#3307], LeftOuter, BuildRight, false
                     :                 :     :     :     :     :- *(17) Filter (((isnotnull(cs_sold_date_sk#197) AND isnotnull(cs_catalog_page_sk#209)) AND isnotnull(cs_item_sk#212)) AND isnotnull(cs_promo_sk#213))
                     :                 :     :     :     :     :  +- *(17) ColumnarToRow
                     :                 :     :     :     :     :     +- FileScan parquet default.catalog_sales[cs_sold_date_sk#197,cs_catalog_page_sk#209,cs_item_sk#212,cs_promo_sk#213,cs_order_number#214,cs_ext_sales_price#220,cs_net_profit#230] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#197), isnotnull(cs_catalog_page_sk#209), isnotnull(cs_item_sk#212), is..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk), IsNotNull(cs_catalog_page_sk), IsNotNull(cs_item_sk), IsNotNull(cs_p..., ReadSchema: struct<cs_sold_date_sk:int,cs_catalog_page_sk:int,cs_item_sk:int,cs_promo_sk:int,cs_order_number:...
                     :                 :     :     :     :     +- BroadcastQueryStage 5
                     :                 :     :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List((shiftleft(cast(input[0, int, false] as bigint), 32) | (cast(input[1, int, false] as bigint) & 4294967295))),false), [plan_id=123163]
                     :                 :     :     :     :           +- *(6) Filter (isnotnull(cr_item_sk#3293) AND isnotnull(cr_order_number#3307))
                     :                 :     :     :     :              +- *(6) ColumnarToRow
                     :                 :     :     :     :                 +- FileScan parquet default.catalog_returns[cr_item_sk#3293,cr_order_number#3307,cr_return_amount#3309,cr_net_loss#3317] Batched: true, DataFilters: [isnotnull(cr_item_sk#3293), isnotnull(cr_order_number#3307)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_returns], PartitionFilters: [], PushedFilters: [IsNotNull(cr_item_sk), IsNotNull(cr_order_number)], ReadSchema: struct<cr_item_sk:int,cr_order_number:int,cr_return_amount:decimal(7,2),cr_net_loss:decimal(7,2)>
                     :                 :     :     :     +- BroadcastQueryStage 7
                     :                 :     :     :        +- ReusedExchange [d_date_sk#17979], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=123082]
                     :                 :     :     +- BroadcastQueryStage 8
                     :                 :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=123203]
                     :                 :     :           +- *(8) Filter isnotnull(cp_catalog_page_sk#3318)
                     :                 :     :              +- *(8) ColumnarToRow
                     :                 :     :                 +- FileScan parquet default.catalog_page[cp_catalog_page_sk#3318,cp_catalog_page_id#3319] Batched: true, DataFilters: [isnotnull(cp_catalog_page_sk#3318)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_page], PartitionFilters: [], PushedFilters: [IsNotNull(cp_catalog_page_sk)], ReadSchema: struct<cp_catalog_page_sk:int,cp_catalog_page_id:string>
                     :                 :     +- BroadcastQueryStage 10
                     :                 :        +- ReusedExchange [i_item_sk#18007], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=123120]
                     :                 +- BroadcastQueryStage 12
                     :                    +- ReusedExchange [p_promo_sk#18029], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=123141]
                     +- *(21) HashAggregate(keys=[web_site_id#3352], functions=[sum(UnscaledValue(ws_ext_sales_price#186)), sum(coalesce(cast(wr_return_amt#3342 as decimal(12,2)), 0.00)), sum(CheckOverflow((promote_precision(cast(ws_net_profit#196 as decimal(13,2))) - promote_precision(cast(coalesce(cast(wr_net_loss#3350 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2)))], output=[sales#17976, returns#17977, profit#17978, channel#18147, id#18148])
                        +- ShuffleQueryStage 23
                           +- Exchange hashpartitioning(web_site_id#3352, 20), ENSURE_REQUIREMENTS, [plan_id=125579]
                              +- *(18) HashAggregate(keys=[web_site_id#3352], functions=[partial_sum(UnscaledValue(ws_ext_sales_price#186)), partial_sum(coalesce(cast(wr_return_amt#3342 as decimal(12,2)), 0.00)), partial_sum(CheckOverflow((promote_precision(cast(ws_net_profit#196 as decimal(13,2))) - promote_precision(cast(coalesce(cast(wr_net_loss#3350 as decimal(12,2)), 0.00) as decimal(13,2)))), DecimalType(13,2)))], output=[web_site_id#3352, sum#18186L, sum#18187, isEmpty#18188, sum#18189, isEmpty#18190])
                                 +- *(18) Project [ws_ext_sales_price#186, ws_net_profit#196, wr_return_amt#3342, wr_net_loss#3350, web_site_id#3352]
                                    +- *(18) BroadcastHashJoin [ws_promo_sk#179], [p_promo_sk#18098], Inner, BuildRight, false
                                       :- *(18) Project [ws_promo_sk#179, ws_ext_sales_price#186, ws_net_profit#196, wr_return_amt#3342, wr_net_loss#3350, web_site_id#3352]
                                       :  +- *(18) BroadcastHashJoin [ws_item_sk#166], [i_item_sk#18076], Inner, BuildRight, false
                                       :     :- *(18) Project [ws_item_sk#166, ws_promo_sk#179, ws_ext_sales_price#186, ws_net_profit#196, wr_return_amt#3342, wr_net_loss#3350, web_site_id#3352]
                                       :     :  +- *(18) BroadcastHashJoin [ws_web_site_sk#176], [web_site_sk#3351], Inner, BuildRight, false
                                       :     :     :- *(18) Project [ws_item_sk#166, ws_web_site_sk#176, ws_promo_sk#179, ws_ext_sales_price#186, ws_net_profit#196, wr_return_amt#3342, wr_net_loss#3350]
                                       :     :     :  +- *(18) BroadcastHashJoin [ws_sold_date_sk#163], [d_date_sk#18048], Inner, BuildRight, false
                                       :     :     :     :- *(18) Project [ws_sold_date_sk#163, ws_item_sk#166, ws_web_site_sk#176, ws_promo_sk#179, ws_ext_sales_price#186, ws_net_profit#196, wr_return_amt#3342, wr_net_loss#3350]
                                       :     :     :     :  +- *(18) BroadcastHashJoin [ws_item_sk#166, ws_order_number#180], [wr_item_sk#3329, wr_order_number#3340], LeftOuter, BuildRight, false
                                       :     :     :     :     :- *(18) Filter (((isnotnull(ws_sold_date_sk#163) AND isnotnull(ws_web_site_sk#176)) AND isnotnull(ws_item_sk#166)) AND isnotnull(ws_promo_sk#179))
                                       :     :     :     :     :  +- *(18) ColumnarToRow
                                       :     :     :     :     :     +- FileScan parquet default.web_sales[ws_sold_date_sk#163,ws_item_sk#166,ws_web_site_sk#176,ws_promo_sk#179,ws_order_number#180,ws_ext_sales_price#186,ws_net_profit#196] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#163), isnotnull(ws_web_site_sk#176), isnotnull(ws_item_sk#166), isnotn..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_web_site_sk), IsNotNull(ws_item_sk), IsNotNull(ws_promo..., ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_web_site_sk:int,ws_promo_sk:int,ws_order_number:int,...
                                       :     :     :     :     +- BroadcastQueryStage 13
                                       :     :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List((shiftleft(cast(input[0, int, false] as bigint), 32) | (cast(input[1, int, false] as bigint) & 4294967295))),false), [plan_id=123269]
                                       :     :     :     :           +- *(11) Filter (isnotnull(wr_item_sk#3329) AND isnotnull(wr_order_number#3340))
                                       :     :     :     :              +- *(11) ColumnarToRow
                                       :     :     :     :                 +- FileScan parquet default.web_returns[wr_item_sk#3329,wr_order_number#3340,wr_return_amt#3342,wr_net_loss#3350] Batched: true, DataFilters: [isnotnull(wr_item_sk#3329), isnotnull(wr_order_number#3340)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_returns], PartitionFilters: [], PushedFilters: [IsNotNull(wr_item_sk), IsNotNull(wr_order_number)], ReadSchema: struct<wr_item_sk:int,wr_order_number:int,wr_return_amt:decimal(7,2),wr_net_loss:decimal(7,2)>
                                       :     :     :     +- BroadcastQueryStage 15
                                       :     :     :        +- ReusedExchange [d_date_sk#18048], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=123082]
                                       :     :     +- BroadcastQueryStage 16
                                       :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=123309]
                                       :     :           +- *(13) Filter isnotnull(web_site_sk#3351)
                                       :     :              +- *(13) ColumnarToRow
                                       :     :                 +- FileScan parquet default.web_site[web_site_sk#3351,web_site_id#3352] Batched: true, DataFilters: [isnotnull(web_site_sk#3351)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_site], PartitionFilters: [], PushedFilters: [IsNotNull(web_site_sk)], ReadSchema: struct<web_site_sk:int,web_site_id:string>
                                       :     +- BroadcastQueryStage 18
                                       :        +- ReusedExchange [i_item_sk#18076], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=123120]
                                       +- BroadcastQueryStage 20
                                          +- ReusedExchange [p_promo_sk#18098], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=123141]


==== q81 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[c_customer_id#82 ASC NULLS FIRST,c_salutation#88 ASC NULLS FIRST,c_first_name#89 ASC NULLS FIRST,c_last_name#90 ASC NULLS FIRST,ca_street_number#18296 ASC NULLS FIRST,ca_street_name#18297 ASC NULLS FIRST,ca_street_type#18298 ASC NULLS FIRST,ca_suite_number#18299 ASC NULLS FIRST,ca_city#18300 ASC NULLS FIRST,ca_county#18301 ASC NULLS FIRST,ca_state#18302 ASC NULLS FIRST,ca_zip#18303 ASC NULLS FIRST,ca_country#18304 ASC NULLS FIRST,ca_gmt_offset#18305 ASC NULLS FIRST,ca_location_type#18306 ASC NULLS FIRST,ctr_total_return#18293 ASC NULLS FIRST], output=[c_customer_id#82,c_salutation#88,c_first_name#89,c_last_name#90,ca_street_number#18296,ca_street_name#18297,ca_street_type#18298,ca_suite_number#18299,ca_city#18300,ca_county#18301,ca_state#18302,ca_zip#18303,ca_country#18304,ca_gmt_offset#18305,ca_location_type#18306,ctr_total_return#18293])
   +- *(11) Project [c_customer_id#82, c_salutation#88, c_first_name#89, c_last_name#90, ca_street_number#18296, ca_street_name#18297, ca_street_type#18298, ca_suite_number#18299, ca_city#18300, ca_county#18301, ca_state#18302, ca_zip#18303, ca_country#18304, ca_gmt_offset#18305, ca_location_type#18306, ctr_total_return#18293]
      +- *(11) BroadcastHashJoin [c_current_addr_sk#85], [ca_address_sk#18294], Inner, BuildRight, false
         :- *(11) Project [ctr_total_return#18293, c_customer_id#82, c_current_addr_sk#85, c_salutation#88, c_first_name#89, c_last_name#90]
         :  +- *(11) BroadcastHashJoin [ctr_customer_sk#18291], [c_customer_sk#81], Inner, BuildRight, false
         :     :- *(11) Project [ctr_customer_sk#18291, ctr_total_return#18293]
         :     :  +- *(11) BroadcastHashJoin [ctr_state#18292], [ctr_state#18292#18327], Inner, BuildLeft, (cast(ctr_total_return#18293 as decimal(24,7)) > (avg(ctr_total_return) * 1.2)#18309), false
         :     :     :- BroadcastQueryStage 10
         :     :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(input[1, string, true]),false), [plan_id=126943]
         :     :     :     +- *(9) Filter isnotnull(ctr_total_return#18293)
         :     :     :        +- *(9) HashAggregate(keys=[cr_returning_customer_sk#3298, ca_state#3725], functions=[sum(UnscaledValue(cr_return_amt_inc_tax#3311))], output=[ctr_customer_sk#18291, ctr_state#18292, ctr_total_return#18293])
         :     :     :           +- ShuffleQueryStage 8
         :     :     :              +- Exchange hashpartitioning(cr_returning_customer_sk#3298, ca_state#3725, 20), ENSURE_REQUIREMENTS, [plan_id=126743]
         :     :     :                 +- *(7) HashAggregate(keys=[cr_returning_customer_sk#3298, ca_state#3725], functions=[partial_sum(UnscaledValue(cr_return_amt_inc_tax#3311))], output=[cr_returning_customer_sk#3298, ca_state#3725, sum#18329L])
         :     :     :                    +- *(7) Project [cr_returning_customer_sk#3298, cr_return_amt_inc_tax#3311, ca_state#3725]
         :     :     :                       +- *(7) BroadcastHashJoin [cr_returning_addr_sk#3301], [ca_address_sk#3717], Inner, BuildRight, false
         :     :     :                          :- *(7) Project [cr_returning_customer_sk#3298, cr_returning_addr_sk#3301, cr_return_amt_inc_tax#3311]
         :     :     :                          :  +- *(7) BroadcastHashJoin [cr_returned_date_sk#3291], [d_date_sk#24], Inner, BuildRight, false
         :     :     :                          :     :- *(7) Filter ((isnotnull(cr_returned_date_sk#3291) AND isnotnull(cr_returning_addr_sk#3301)) AND isnotnull(cr_returning_customer_sk#3298))
         :     :     :                          :     :  +- *(7) ColumnarToRow
         :     :     :                          :     :     +- FileScan parquet default.catalog_returns[cr_returned_date_sk#3291,cr_returning_customer_sk#3298,cr_returning_addr_sk#3301,cr_return_amt_inc_tax#3311] Batched: true, DataFilters: [isnotnull(cr_returned_date_sk#3291), isnotnull(cr_returning_addr_sk#3301), isnotnull(cr_returnin..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_returns], PartitionFilters: [], PushedFilters: [IsNotNull(cr_returned_date_sk), IsNotNull(cr_returning_addr_sk), IsNotNull(cr_returning_customer..., ReadSchema: struct<cr_returned_date_sk:int,cr_returning_customer_sk:int,cr_returning_addr_sk:int,cr_return_am...
         :     :     :                          :     +- BroadcastQueryStage 0
         :     :     :                          :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=126003]
         :     :     :                          :           +- *(1) Project [d_date_sk#24]
         :     :     :                          :              +- *(1) Filter ((isnotnull(d_year#30) AND (d_year#30 = 2000)) AND isnotnull(d_date_sk#24))
         :     :     :                          :                 +- *(1) ColumnarToRow
         :     :     :                          :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30] Batched: true, DataFilters: [isnotnull(d_year#30), (d_year#30 = 2000), isnotnull(d_date_sk#24)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
         :     :     :                          +- BroadcastQueryStage 1
         :     :     :                             +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=126022]
         :     :     :                                +- *(2) Filter (isnotnull(ca_address_sk#3717) AND isnotnull(ca_state#3725))
         :     :     :                                   +- *(2) ColumnarToRow
         :     :     :                                      +- FileScan parquet default.customer_address[ca_address_sk#3717,ca_state#3725] Batched: true, DataFilters: [isnotnull(ca_address_sk#3717), isnotnull(ca_state#3725)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_address_sk), IsNotNull(ca_state)], ReadSchema: struct<ca_address_sk:int,ca_state:string>
         :     :     +- *(11) Filter isnotnull((avg(ctr_total_return) * 1.2)#18309)
         :     :        +- *(11) HashAggregate(keys=[ctr_state#18292], functions=[avg(ctr_total_return#18293)], output=[(avg(ctr_total_return) * 1.2)#18309, ctr_state#18292#18327])
         :     :           +- ShuffleQueryStage 11
         :     :              +- Exchange hashpartitioning(ctr_state#18292, 20), ENSURE_REQUIREMENTS, [plan_id=127057]
         :     :                 +- *(10) HashAggregate(keys=[ctr_state#18292], functions=[partial_avg(ctr_total_return#18293)], output=[ctr_state#18292, sum#18332, count#18333L])
         :     :                    +- *(10) HashAggregate(keys=[cr_returning_customer_sk#3298, ca_state#3725], functions=[sum(UnscaledValue(cr_return_amt_inc_tax#3311))], output=[ctr_state#18292, ctr_total_return#18293])
         :     :                       +- ShuffleQueryStage 9
         :     :                          +- Exchange hashpartitioning(cr_returning_customer_sk#3298, ca_state#3725, 20), ENSURE_REQUIREMENTS, [plan_id=126787]
         :     :                             +- *(8) HashAggregate(keys=[cr_returning_customer_sk#3298, ca_state#3725], functions=[partial_sum(UnscaledValue(cr_return_amt_inc_tax#3311))], output=[cr_returning_customer_sk#3298, ca_state#3725, sum#18335L])
         :     :                                +- *(8) Project [cr_returning_customer_sk#3298, cr_return_amt_inc_tax#3311, ca_state#3725]
         :     :                                   +- *(8) BroadcastHashJoin [cr_returning_addr_sk#3301], [ca_address_sk#3717], Inner, BuildRight, false
         :     :                                      :- *(8) Project [cr_returning_customer_sk#3298, cr_returning_addr_sk#3301, cr_return_amt_inc_tax#3311]
         :     :                                      :  +- *(8) BroadcastHashJoin [cr_returned_date_sk#3291], [d_date_sk#24], Inner, BuildRight, false
         :     :                                      :     :- *(8) Filter (isnotnull(cr_returned_date_sk#3291) AND isnotnull(cr_returning_addr_sk#3301))
         :     :                                      :     :  +- *(8) ColumnarToRow
         :     :                                      :     :     +- FileScan parquet default.catalog_returns[cr_returned_date_sk#3291,cr_returning_customer_sk#3298,cr_returning_addr_sk#3301,cr_return_amt_inc_tax#3311] Batched: true, DataFilters: [isnotnull(cr_returned_date_sk#3291), isnotnull(cr_returning_addr_sk#3301)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_returns], PartitionFilters: [], PushedFilters: [IsNotNull(cr_returned_date_sk), IsNotNull(cr_returning_addr_sk)], ReadSchema: struct<cr_returned_date_sk:int,cr_returning_customer_sk:int,cr_returning_addr_sk:int,cr_return_am...
         :     :                                      :     +- BroadcastQueryStage 3
         :     :                                      :        +- ReusedExchange [d_date_sk#24], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=126003]
         :     :                                      +- BroadcastQueryStage 5
         :     :                                         +- ReusedExchange [ca_address_sk#3717, ca_state#3725], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=126022]
         :     +- BroadcastQueryStage 6
         :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=126132]
         :           +- *(5) Filter (isnotnull(c_customer_sk#81) AND isnotnull(c_current_addr_sk#85))
         :              +- *(5) ColumnarToRow
         :                 +- FileScan parquet default.customer[c_customer_sk#81,c_customer_id#82,c_current_addr_sk#85,c_salutation#88,c_first_name#89,c_last_name#90] Batched: true, DataFilters: [isnotnull(c_customer_sk#81), isnotnull(c_current_addr_sk#85)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk)], ReadSchema: struct<c_customer_sk:int,c_customer_id:string,c_current_addr_sk:int,c_salutation:string,c_first_n...
         +- BroadcastQueryStage 7
            +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=126153]
               +- *(6) Filter ((isnotnull(ca_state#18302) AND (ca_state#18302 = GA)) AND isnotnull(ca_address_sk#18294))
                  +- *(6) ColumnarToRow
                     +- FileScan parquet default.customer_address[ca_address_sk#18294,ca_street_number#18296,ca_street_name#18297,ca_street_type#18298,ca_suite_number#18299,ca_city#18300,ca_county#18301,ca_state#18302,ca_zip#18303,ca_country#18304,ca_gmt_offset#18305,ca_location_type#18306] Batched: true, DataFilters: [isnotnull(ca_state#18302), (ca_state#18302 = GA), isnotnull(ca_address_sk#18294)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_state), EqualTo(ca_state,GA), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_street_number:string,ca_street_name:string,ca_street_type:string,ca_s...


==== q82 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[i_item_id#438 ASC NULLS FIRST], output=[i_item_id#438,i_item_desc#441,i_current_price#442])
   +- *(6) HashAggregate(keys=[i_item_id#438, i_item_desc#441, i_current_price#442], functions=[], output=[i_item_id#438, i_item_desc#441, i_current_price#442])
      +- ShuffleQueryStage 4
         +- Exchange hashpartitioning(i_item_id#438, i_item_desc#441, i_current_price#442, 20), ENSURE_REQUIREMENTS, [plan_id=127544]
            +- *(5) HashAggregate(keys=[i_item_id#438, i_item_desc#441, i_current_price#442], functions=[], output=[i_item_id#438, i_item_desc#441, i_current_price#442])
               +- *(5) Project [i_item_id#438, i_item_desc#441, i_current_price#442]
                  +- *(5) ShuffledHashJoin [i_item_sk#437], [ss_item_sk#416], Inner, BuildLeft
                     :- ShuffleQueryStage 3
                     :  +- Exchange hashpartitioning(i_item_sk#437, 20), ENSURE_REQUIREMENTS, [plan_id=127483]
                     :     +- *(4) Project [i_item_sk#437, i_item_id#438, i_item_desc#441, i_current_price#442]
                     :        +- *(4) BroadcastHashJoin [inv_date_sk#7972], [d_date_sk#24], Inner, BuildRight, false
                     :           :- *(4) Project [i_item_sk#437, i_item_id#438, i_item_desc#441, i_current_price#442, inv_date_sk#7972]
                     :           :  +- *(4) BroadcastHashJoin [i_item_sk#437], [inv_item_sk#7973], Inner, BuildLeft, false
                     :           :     :- BroadcastQueryStage 0
                     :           :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=127258]
                     :           :     :     +- *(1) Project [i_item_sk#437, i_item_id#438, i_item_desc#441, i_current_price#442]
                     :           :     :        +- *(1) Filter ((((isnotnull(i_current_price#442) AND (i_current_price#442 >= 62.00)) AND (i_current_price#442 <= 92.00)) AND i_manufact_id#450 IN (129,270,821,423)) AND isnotnull(i_item_sk#437))
                     :           :     :           +- *(1) ColumnarToRow
                     :           :     :              +- FileScan parquet default.item[i_item_sk#437,i_item_id#438,i_item_desc#441,i_current_price#442,i_manufact_id#450] Batched: true, DataFilters: [isnotnull(i_current_price#442), (i_current_price#442 >= 62.00), (i_current_price#442 <= 92.00), ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_current_price), GreaterThanOrEqual(i_current_price,62.00), LessThanOrEqual(i_current..., ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string,i_current_price:decimal(7,2),i_manufact_...
                     :           :     +- *(4) Project [inv_date_sk#7972, inv_item_sk#7973]
                     :           :        +- *(4) Filter ((((isnotnull(inv_quantity_on_hand#7975) AND (inv_quantity_on_hand#7975 >= 100)) AND (inv_quantity_on_hand#7975 <= 500)) AND isnotnull(inv_item_sk#7973)) AND isnotnull(inv_date_sk#7972))
                     :           :           +- *(4) ColumnarToRow
                     :           :              +- FileScan parquet default.inventory[inv_date_sk#7972,inv_item_sk#7973,inv_quantity_on_hand#7975] Batched: true, DataFilters: [isnotnull(inv_quantity_on_hand#7975), (inv_quantity_on_hand#7975 >= 100), (inv_quantity_on_hand#..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/inventory], PartitionFilters: [], PushedFilters: [IsNotNull(inv_quantity_on_hand), GreaterThanOrEqual(inv_quantity_on_hand,100), LessThanOrEqual(i..., ReadSchema: struct<inv_date_sk:int,inv_item_sk:int,inv_quantity_on_hand:int>
                     :           +- BroadcastQueryStage 1
                     :              +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=127279]
                     :                 +- *(2) Project [d_date_sk#24]
                     :                    +- *(2) Filter (((isnotnull(d_date#26) AND (d_date#26 >= 2000-05-25)) AND (d_date#26 <= 2000-07-24)) AND isnotnull(d_date_sk#24))
                     :                       +- *(2) ColumnarToRow
                     :                          +- FileScan parquet default.date_dim[d_date_sk#24,d_date#26] Batched: true, DataFilters: [isnotnull(d_date#26), (d_date#26 >= 2000-05-25), (d_date#26 <= 2000-07-24), isnotnull(d_date_sk#..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2000-05-25), LessThanOrEqual(d_date,2000-07-24), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>
                     +- ShuffleQueryStage 2
                        +- Exchange hashpartitioning(ss_item_sk#416, 20), ENSURE_REQUIREMENTS, [plan_id=127299]
                           +- *(3) Filter isnotnull(ss_item_sk#416)
                              +- *(3) ColumnarToRow
                                 +- FileScan parquet default.store_sales[ss_item_sk#416] Batched: true, DataFilters: [isnotnull(ss_item_sk#416)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk)], ReadSchema: struct<ss_item_sk:int>


==== q83 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[item_id#18363 ASC NULLS FIRST,sr_item_qty#18364L ASC NULLS FIRST], output=[item_id#18363,sr_item_qty#18364L,sr_dev#18359,cr_item_qty#18368L,cr_dev#18360,wr_item_qty#18372L,wr_dev#18361,average#18362])
   +- *(18) Project [item_id#18363, sr_item_qty#18364L, (((cast(sr_item_qty#18364L as double) / cast(((sr_item_qty#18364L + cr_item_qty#18368L) + wr_item_qty#18372L) as double)) / 3.0) * 100.0) AS sr_dev#18359, cr_item_qty#18368L, (((cast(cr_item_qty#18368L as double) / cast(((sr_item_qty#18364L + cr_item_qty#18368L) + wr_item_qty#18372L) as double)) / 3.0) * 100.0) AS cr_dev#18360, wr_item_qty#18372L, (((cast(wr_item_qty#18372L as double) / cast(((sr_item_qty#18364L + cr_item_qty#18368L) + wr_item_qty#18372L) as double)) / 3.0) * 100.0) AS wr_dev#18361, CheckOverflow((promote_precision(cast(((sr_item_qty#18364L + cr_item_qty#18368L) + wr_item_qty#18372L) as decimal(21,1))) / 3.0), DecimalType(27,6)) AS average#18362]
      +- *(18) BroadcastHashJoin [item_id#18363], [item_id#18371], Inner, BuildRight, false
         :- *(18) Project [item_id#18363, sr_item_qty#18364L, cr_item_qty#18368L]
         :  +- *(18) BroadcastHashJoin [item_id#18363], [item_id#18367], Inner, BuildLeft, false
         :     :- BroadcastQueryStage 23
         :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=129446]
         :     :     +- *(16) HashAggregate(keys=[i_item_id#438], functions=[sum(sr_return_quantity#14)], output=[item_id#18363, sr_item_qty#18364L])
         :     :        +- ShuffleQueryStage 20
         :     :           +- Exchange hashpartitioning(i_item_id#438, 20), ENSURE_REQUIREMENTS, [plan_id=129283]
         :     :              +- *(13) HashAggregate(keys=[i_item_id#438], functions=[partial_sum(sr_return_quantity#14)], output=[i_item_id#438, sum#18659L])
         :     :                 +- *(13) Project [sr_return_quantity#14, i_item_id#438]
         :     :                    +- *(13) BroadcastHashJoin [sr_returned_date_sk#4], [d_date_sk#24], Inner, BuildRight, false
         :     :                       :- *(13) Project [sr_returned_date_sk#4, sr_return_quantity#14, i_item_id#438]
         :     :                       :  +- *(13) BroadcastHashJoin [sr_item_sk#6], [i_item_sk#437], Inner, BuildRight, false
         :     :                       :     :- *(13) Filter (isnotnull(sr_item_sk#6) AND isnotnull(sr_returned_date_sk#4))
         :     :                       :     :  +- *(13) ColumnarToRow
         :     :                       :     :     +- FileScan parquet default.store_returns[sr_returned_date_sk#4,sr_item_sk#6,sr_return_quantity#14] Batched: true, DataFilters: [isnotnull(sr_item_sk#6), isnotnull(sr_returned_date_sk#4)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_returns], PartitionFilters: [], PushedFilters: [IsNotNull(sr_item_sk), IsNotNull(sr_returned_date_sk)], ReadSchema: struct<sr_returned_date_sk:int,sr_item_sk:int,sr_return_quantity:int>
         :     :                       :     +- BroadcastQueryStage 0
         :     :                       :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=127954]
         :     :                       :           +- *(1) Filter (isnotnull(i_item_sk#437) AND isnotnull(i_item_id#438))
         :     :                       :              +- *(1) ColumnarToRow
         :     :                       :                 +- FileScan parquet default.item[i_item_sk#437,i_item_id#438] Batched: true, DataFilters: [isnotnull(i_item_sk#437), isnotnull(i_item_id#438)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk), IsNotNull(i_item_id)], ReadSchema: struct<i_item_sk:int,i_item_id:string>
         :     :                       +- BroadcastQueryStage 15
         :     :                          +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=129008]
         :     :                             +- *(10) Project [d_date_sk#24]
         :     :                                +- *(10) BroadcastHashJoin [d_date#26], [d_date#18565], LeftSemi, BuildRight, false
         :     :                                   :- *(10) Filter isnotnull(d_date_sk#24)
         :     :                                   :  +- *(10) ColumnarToRow
         :     :                                   :     +- FileScan parquet default.date_dim[d_date_sk#24,d_date#26] Batched: true, DataFilters: [isnotnull(d_date_sk#24)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_date:date>
         :     :                                   +- BroadcastQueryStage 10
         :     :                                      +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, date, true]),false), [plan_id=128708]
         :     :                                         +- *(7) Project [d_date#18565]
         :     :                                            +- *(7) BroadcastHashJoin [d_week_seq#18567], [d_week_seq#18479], LeftSemi, BuildRight, false
         :     :                                               :- *(7) ColumnarToRow
         :     :                                               :  +- FileScan parquet default.date_dim[d_date#18565,d_week_seq#18567] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<d_date:date,d_week_seq:int>
         :     :                                               +- BroadcastQueryStage 1
         :     :                                                  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=127973]
         :     :                                                     +- *(2) Project [d_week_seq#18479]
         :     :                                                        +- *(2) Filter cast(d_date#18477 as string) IN (2000-06-30,2000-09-27,2000-11-17)
         :     :                                                           +- *(2) ColumnarToRow
         :     :                                                              +- FileScan parquet default.date_dim[d_date#18477,d_week_seq#18479] Batched: true, DataFilters: [cast(d_date#18477 as string) IN (2000-06-30,2000-09-27,2000-11-17)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<d_date:date,d_week_seq:int>
         :     +- *(18) HashAggregate(keys=[i_item_id#18376], functions=[sum(cr_return_quantity#3308)], output=[item_id#18367, cr_item_qty#18368L])
         :        +- ShuffleQueryStage 21
         :           +- Exchange hashpartitioning(i_item_id#18376, 20), ENSURE_REQUIREMENTS, [plan_id=129333]
         :              +- *(14) HashAggregate(keys=[i_item_id#18376], functions=[partial_sum(cr_return_quantity#3308)], output=[i_item_id#18376, sum#18661L])
         :                 +- *(14) Project [cr_return_quantity#3308, i_item_id#18376]
         :                    +- *(14) BroadcastHashJoin [cr_returned_date_sk#3291], [d_date_sk#18397], Inner, BuildRight, false
         :                       :- *(14) Project [cr_returned_date_sk#3291, cr_return_quantity#3308, i_item_id#18376]
         :                       :  +- *(14) BroadcastHashJoin [cr_item_sk#3293], [i_item_sk#18375], Inner, BuildRight, false
         :                       :     :- *(14) Filter (isnotnull(cr_item_sk#3293) AND isnotnull(cr_returned_date_sk#3291))
         :                       :     :  +- *(14) ColumnarToRow
         :                       :     :     +- FileScan parquet default.catalog_returns[cr_returned_date_sk#3291,cr_item_sk#3293,cr_return_quantity#3308] Batched: true, DataFilters: [isnotnull(cr_item_sk#3293), isnotnull(cr_returned_date_sk#3291)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_returns], PartitionFilters: [], PushedFilters: [IsNotNull(cr_item_sk), IsNotNull(cr_returned_date_sk)], ReadSchema: struct<cr_returned_date_sk:int,cr_item_sk:int,cr_return_quantity:int>
         :                       :     +- BroadcastQueryStage 3
         :                       :        +- ReusedExchange [i_item_sk#18375, i_item_id#18376], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=127954]
         :                       +- BroadcastQueryStage 17
         :                          +- ReusedExchange [d_date_sk#18397], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=129008]
         +- BroadcastQueryStage 24
            +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, true]),false), [plan_id=129538]
               +- *(17) HashAggregate(keys=[i_item_id#18426], functions=[sum(wr_return_quantity#3341)], output=[item_id#18371, wr_item_qty#18372L])
                  +- ShuffleQueryStage 22
                     +- Exchange hashpartitioning(i_item_id#18426, 20), ENSURE_REQUIREMENTS, [plan_id=129385]
                        +- *(15) HashAggregate(keys=[i_item_id#18426], functions=[partial_sum(wr_return_quantity#3341)], output=[i_item_id#18426, sum#18663L])
                           +- *(15) Project [wr_return_quantity#3341, i_item_id#18426]
                              +- *(15) BroadcastHashJoin [wr_returned_date_sk#3327], [d_date_sk#18447], Inner, BuildRight, false
                                 :- *(15) Project [wr_returned_date_sk#3327, wr_return_quantity#3341, i_item_id#18426]
                                 :  +- *(15) BroadcastHashJoin [wr_item_sk#3329], [i_item_sk#18425], Inner, BuildRight, false
                                 :     :- *(15) Filter (isnotnull(wr_item_sk#3329) AND isnotnull(wr_returned_date_sk#3327))
                                 :     :  +- *(15) ColumnarToRow
                                 :     :     +- FileScan parquet default.web_returns[wr_returned_date_sk#3327,wr_item_sk#3329,wr_return_quantity#3341] Batched: true, DataFilters: [isnotnull(wr_item_sk#3329), isnotnull(wr_returned_date_sk#3327)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_returns], PartitionFilters: [], PushedFilters: [IsNotNull(wr_item_sk), IsNotNull(wr_returned_date_sk)], ReadSchema: struct<wr_returned_date_sk:int,wr_item_sk:int,wr_return_quantity:int>
                                 :     +- BroadcastQueryStage 7
                                 :        +- ReusedExchange [i_item_sk#18425, i_item_id#18426], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=127954]
                                 +- BroadcastQueryStage 19
                                    +- ReusedExchange [d_date_sk#18447], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=129008]

==== q84 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[c_customer_id#82 ASC NULLS FIRST], output=[customer_id#18683,customername#18684])
   +- *(6) Project [c_customer_id#82 AS customer_id#18683, concat(c_last_name#90, , , c_first_name#89) AS customername#18684, c_customer_id#82]
      +- *(6) BroadcastHashJoin [cd_demo_sk#3633], [sr_cdemo_sk#8], Inner, BuildRight, false
         :- *(6) Project [c_customer_id#82, c_first_name#89, c_last_name#90, cd_demo_sk#3633]
         :  +- *(6) BroadcastHashJoin [hd_income_band_sk#5553], [ib_income_band_sk#18685], Inner, BuildRight, false
         :     :- *(6) Project [c_customer_id#82, c_first_name#89, c_last_name#90, cd_demo_sk#3633, hd_income_band_sk#5553]
         :     :  +- *(6) BroadcastHashJoin [c_current_hdemo_sk#84], [hd_demo_sk#5552], Inner, BuildRight, false
         :     :     :- *(6) Project [c_customer_id#82, c_current_hdemo_sk#84, c_first_name#89, c_last_name#90, cd_demo_sk#3633]
         :     :     :  +- *(6) BroadcastHashJoin [c_current_cdemo_sk#83], [cd_demo_sk#3633], Inner, BuildRight, false
         :     :     :     :- *(6) Project [c_customer_id#82, c_current_cdemo_sk#83, c_current_hdemo_sk#84, c_first_name#89, c_last_name#90]
         :     :     :     :  +- *(6) BroadcastHashJoin [c_current_addr_sk#85], [ca_address_sk#3717], Inner, BuildRight, false
         :     :     :     :     :- *(6) Filter ((isnotnull(c_current_addr_sk#85) AND isnotnull(c_current_cdemo_sk#83)) AND isnotnull(c_current_hdemo_sk#84))
         :     :     :     :     :  +- *(6) ColumnarToRow
         :     :     :     :     :     +- FileScan parquet default.customer[c_customer_id#82,c_current_cdemo_sk#83,c_current_hdemo_sk#84,c_current_addr_sk#85,c_first_name#89,c_last_name#90] Batched: true, DataFilters: [isnotnull(c_current_addr_sk#85), isnotnull(c_current_cdemo_sk#83), isnotnull(c_current_hdemo_sk#..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_current_addr_sk), IsNotNull(c_current_cdemo_sk), IsNotNull(c_current_hdemo_sk)], ReadSchema: struct<c_customer_id:string,c_current_cdemo_sk:int,c_current_hdemo_sk:int,c_current_addr_sk:int,c...
         :     :     :     :     +- BroadcastQueryStage 0
         :     :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=129714]
         :     :     :     :           +- *(1) Project [ca_address_sk#3717]
         :     :     :     :              +- *(1) Filter ((isnotnull(ca_city#3723) AND (ca_city#3723 = Edgewood)) AND isnotnull(ca_address_sk#3717))
         :     :     :     :                 +- *(1) ColumnarToRow
         :     :     :     :                    +- FileScan parquet default.customer_address[ca_address_sk#3717,ca_city#3723] Batched: true, DataFilters: [isnotnull(ca_city#3723), (ca_city#3723 = Edgewood), isnotnull(ca_address_sk#3717)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_city), EqualTo(ca_city,Edgewood), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_city:string>
         :     :     :     +- BroadcastQueryStage 1
         :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=129737]
         :     :     :           +- *(2) Filter isnotnull(cd_demo_sk#3633)
         :     :     :              +- *(2) ColumnarToRow
         :     :     :                 +- FileScan parquet default.customer_demographics[cd_demo_sk#3633] Batched: true, DataFilters: [isnotnull(cd_demo_sk#3633)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer_demographics], PartitionFilters: [], PushedFilters: [IsNotNull(cd_demo_sk)], ReadSchema: struct<cd_demo_sk:int>
         :     :     +- BroadcastQueryStage 2
         :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=129758]
         :     :           +- *(3) Filter (isnotnull(hd_demo_sk#5552) AND isnotnull(hd_income_band_sk#5553))
         :     :              +- *(3) ColumnarToRow
         :     :                 +- FileScan parquet default.household_demographics[hd_demo_sk#5552,hd_income_band_sk#5553] Batched: true, DataFilters: [isnotnull(hd_demo_sk#5552), isnotnull(hd_income_band_sk#5553)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/household_demographics], PartitionFilters: [], PushedFilters: [IsNotNull(hd_demo_sk), IsNotNull(hd_income_band_sk)], ReadSchema: struct<hd_demo_sk:int,hd_income_band_sk:int>
         :     +- BroadcastQueryStage 3
         :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=129783]
         :           +- *(4) Project [ib_income_band_sk#18685]
         :              +- *(4) Filter ((((isnotnull(ib_lower_bound#18686) AND isnotnull(ib_upper_bound#18687)) AND (ib_lower_bound#18686 >= 38128)) AND (ib_upper_bound#18687 <= 88128)) AND isnotnull(ib_income_band_sk#18685))
         :                 +- *(4) ColumnarToRow
         :                    +- FileScan parquet default.income_band[ib_income_band_sk#18685,ib_lower_bound#18686,ib_upper_bound#18687] Batched: true, DataFilters: [isnotnull(ib_lower_bound#18686), isnotnull(ib_upper_bound#18687), (ib_lower_bound#18686 >= 38128..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/income_band], PartitionFilters: [], PushedFilters: [IsNotNull(ib_lower_bound), IsNotNull(ib_upper_bound), GreaterThanOrEqual(ib_lower_bound,38128), ..., ReadSchema: struct<ib_income_band_sk:int,ib_lower_bound:int,ib_upper_bound:int>
         +- BroadcastQueryStage 4
            +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=129806]
               +- *(5) Filter isnotnull(sr_cdemo_sk#8)
                  +- *(5) ColumnarToRow
                     +- FileScan parquet default.store_returns[sr_cdemo_sk#8] Batched: true, DataFilters: [isnotnull(sr_cdemo_sk#8)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_returns], PartitionFilters: [], PushedFilters: [IsNotNull(sr_cdemo_sk)], ReadSchema: struct<sr_cdemo_sk:int>

==== q85 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[substr(r_reason_desc, 1, 20)#18704 ASC NULLS FIRST,avg(ws_quantity)#18705 ASC NULLS FIRST,avg(wr_refunded_cash)#18706 ASC NULLS FIRST,avg(wr_fee)#18707 ASC NULLS FIRST], output=[substr(r_reason_desc, 1, 20)#18704,avg(ws_quantity)#18705,avg(wr_refunded_cash)#18706,avg(wr_fee)#18707])
   +- *(9) HashAggregate(keys=[r_reason_desc#3783], functions=[avg(ws_quantity#181), avg(UnscaledValue(wr_refunded_cash#3347)), avg(UnscaledValue(wr_fee#3345))], output=[substr(r_reason_desc, 1, 20)#18704, avg(ws_quantity)#18705, avg(wr_refunded_cash)#18706, avg(wr_fee)#18707])
      +- ShuffleQueryStage 7
         +- Exchange hashpartitioning(r_reason_desc#3783, 20), ENSURE_REQUIREMENTS, [plan_id=131197]
            +- *(8) HashAggregate(keys=[r_reason_desc#3783], functions=[partial_avg(ws_quantity#181), partial_avg(UnscaledValue(wr_refunded_cash#3347)), partial_avg(UnscaledValue(wr_fee#3345))], output=[r_reason_desc#3783, sum#18721, count#18722L, sum#18723, count#18724L, sum#18725, count#18726L])
               +- *(8) Project [ws_quantity#181, wr_fee#3345, wr_refunded_cash#3347, r_reason_desc#3783]
                  +- *(8) BroadcastHashJoin [wr_reason_sk#3339], [r_reason_sk#3781], Inner, BuildRight, false
                     :- *(8) Project [ws_quantity#181, wr_reason_sk#3339, wr_fee#3345, wr_refunded_cash#3347]
                     :  +- *(8) BroadcastHashJoin [ws_sold_date_sk#163], [d_date_sk#24], Inner, BuildRight, false
                     :     :- *(8) Project [ws_sold_date_sk#163, ws_quantity#181, wr_reason_sk#3339, wr_fee#3345, wr_refunded_cash#3347]
                     :     :  +- *(8) BroadcastHashJoin [wr_refunded_addr_sk#3333], [ca_address_sk#3717], Inner, BuildRight, ((((ca_state#3725 IN (IN,OH,NJ) AND (ws_net_profit#196 >= 100.00)) AND (ws_net_profit#196 <= 200.00)) OR ((ca_state#3725 IN (WI,CT,KY) AND (ws_net_profit#196 >= 150.00)) AND (ws_net_profit#196 <= 300.00))) OR ((ca_state#3725 IN (LA,IA,AR) AND (ws_net_profit#196 >= 50.00)) AND (ws_net_profit#196 <= 250.00))), false
                     :     :     :- *(8) Project [ws_sold_date_sk#163, ws_quantity#181, ws_net_profit#196, wr_refunded_addr_sk#3333, wr_reason_sk#3339, wr_fee#3345, wr_refunded_cash#3347]
                     :     :     :  +- *(8) BroadcastHashJoin [wr_returning_cdemo_sk#3335, cd_marital_status#3635, cd_education_status#3636], [cd_demo_sk#18691, cd_marital_status#18693, cd_education_status#18694], Inner, BuildRight, false
                     :     :     :     :- *(8) Project [ws_sold_date_sk#163, ws_quantity#181, ws_net_profit#196, wr_refunded_addr_sk#3333, wr_returning_cdemo_sk#3335, wr_reason_sk#3339, wr_fee#3345, wr_refunded_cash#3347, cd_marital_status#3635, cd_education_status#3636]
                     :     :     :     :  +- *(8) BroadcastHashJoin [wr_refunded_cdemo_sk#3331], [cd_demo_sk#3633], Inner, BuildRight, ((((((cd_marital_status#3635 = M) AND (cd_education_status#3636 = Advanced Degree     )) AND (ws_sales_price#184 >= 100.00)) AND (ws_sales_price#184 <= 150.00)) OR ((((cd_marital_status#3635 = S) AND (cd_education_status#3636 = College             )) AND (ws_sales_price#184 >= 50.00)) AND (ws_sales_price#184 <= 100.00))) OR ((((cd_marital_status#3635 = W) AND (cd_education_status#3636 = 2 yr Degree         )) AND (ws_sales_price#184 >= 150.00)) AND (ws_sales_price#184 <= 200.00))), false
                     :     :     :     :     :- *(8) Project [ws_sold_date_sk#163, ws_quantity#181, ws_sales_price#184, ws_net_profit#196, wr_refunded_cdemo_sk#3331, wr_refunded_addr_sk#3333, wr_returning_cdemo_sk#3335, wr_reason_sk#3339, wr_fee#3345, wr_refunded_cash#3347]
                     :     :     :     :     :  +- *(8) BroadcastHashJoin [ws_web_page_sk#175], [wp_web_page_sk#17548], Inner, BuildRight, false
                     :     :     :     :     :     :- *(8) Project [ws_sold_date_sk#163, ws_web_page_sk#175, ws_quantity#181, ws_sales_price#184, ws_net_profit#196, wr_refunded_cdemo_sk#3331, wr_refunded_addr_sk#3333, wr_returning_cdemo_sk#3335, wr_reason_sk#3339, wr_fee#3345, wr_refunded_cash#3347]
                     :     :     :     :     :     :  +- *(8) BroadcastHashJoin [ws_item_sk#166, ws_order_number#180], [wr_item_sk#3329, wr_order_number#3340], Inner, BuildRight, false
                     :     :     :     :     :     :     :- *(8) Filter (((((isnotnull(ws_item_sk#166) AND isnotnull(ws_order_number#180)) AND isnotnull(ws_web_page_sk#175)) AND isnotnull(ws_sold_date_sk#163)) AND ((((ws_sales_price#184 >= 100.00) AND (ws_sales_price#184 <= 150.00)) OR ((ws_sales_price#184 >= 50.00) AND (ws_sales_price#184 <= 100.00))) OR ((ws_sales_price#184 >= 150.00) AND (ws_sales_price#184 <= 200.00)))) AND ((((ws_net_profit#196 >= 100.00) AND (ws_net_profit#196 <= 200.00)) OR ((ws_net_profit#196 >= 150.00) AND (ws_net_profit#196 <= 300.00))) OR ((ws_net_profit#196 >= 50.00) AND (ws_net_profit#196 <= 250.00))))
                     :     :     :     :     :     :     :  +- *(8) ColumnarToRow
                     :     :     :     :     :     :     :     +- FileScan parquet default.web_sales[ws_sold_date_sk#163,ws_item_sk#166,ws_web_page_sk#175,ws_order_number#180,ws_quantity#181,ws_sales_price#184,ws_net_profit#196] Batched: true, DataFilters: [isnotnull(ws_item_sk#166), isnotnull(ws_order_number#180), isnotnull(ws_web_page_sk#175), isnotn..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_item_sk), IsNotNull(ws_order_number), IsNotNull(ws_web_page_sk), IsNotNull(ws_sold_..., ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_web_page_sk:int,ws_order_number:int,ws_quantity:int,...
                     :     :     :     :     :     :     +- BroadcastQueryStage 0
                     :     :     :     :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List((shiftleft(cast(input[0, int, false] as bigint), 32) | (cast(input[5, int, false] as bigint) & 4294967295))),false), [plan_id=130388]
                     :     :     :     :     :     :           +- *(1) Filter (((((isnotnull(wr_item_sk#3329) AND isnotnull(wr_order_number#3340)) AND isnotnull(wr_refunded_cdemo_sk#3331)) AND isnotnull(wr_returning_cdemo_sk#3335)) AND isnotnull(wr_refunded_addr_sk#3333)) AND isnotnull(wr_reason_sk#3339))
                     :     :     :     :     :     :              +- *(1) ColumnarToRow
                     :     :     :     :     :     :                 +- FileScan parquet default.web_returns[wr_item_sk#3329,wr_refunded_cdemo_sk#3331,wr_refunded_addr_sk#3333,wr_returning_cdemo_sk#3335,wr_reason_sk#3339,wr_order_number#3340,wr_fee#3345,wr_refunded_cash#3347] Batched: true, DataFilters: [isnotnull(wr_item_sk#3329), isnotnull(wr_order_number#3340), isnotnull(wr_refunded_cdemo_sk#3331..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_returns], PartitionFilters: [], PushedFilters: [IsNotNull(wr_item_sk), IsNotNull(wr_order_number), IsNotNull(wr_refunded_cdemo_sk), IsNotNull(wr..., ReadSchema: struct<wr_item_sk:int,wr_refunded_cdemo_sk:int,wr_refunded_addr_sk:int,wr_returning_cdemo_sk:int,...
                     :     :     :     :     :     +- BroadcastQueryStage 1
                     :     :     :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=130405]
                     :     :     :     :     :           +- *(2) Filter isnotnull(wp_web_page_sk#17548)
                     :     :     :     :     :              +- *(2) ColumnarToRow
                     :     :     :     :     :                 +- FileScan parquet default.web_page[wp_web_page_sk#17548] Batched: true, DataFilters: [isnotnull(wp_web_page_sk#17548)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_page], PartitionFilters: [], PushedFilters: [IsNotNull(wp_web_page_sk)], ReadSchema: struct<wp_web_page_sk:int>
                     :     :     :     :     +- BroadcastQueryStage 2
                     :     :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=130422]
                     :     :     :     :           +- *(3) Filter (((isnotnull(cd_demo_sk#3633) AND isnotnull(cd_marital_status#3635)) AND isnotnull(cd_education_status#3636)) AND ((((cd_marital_status#3635 = M) AND (cd_education_status#3636 = Advanced Degree     )) OR ((cd_marital_status#3635 = S) AND (cd_education_status#3636 = College             ))) OR ((cd_marital_status#3635 = W) AND (cd_education_status#3636 = 2 yr Degree         ))))
                     :     :     :     :              +- *(3) ColumnarToRow
                     :     :     :     :                 +- FileScan parquet default.customer_demographics[cd_demo_sk#3633,cd_marital_status#3635,cd_education_status#3636] Batched: true, DataFilters: [isnotnull(cd_demo_sk#3633), isnotnull(cd_marital_status#3635), isnotnull(cd_education_status#363..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer_demographics], PartitionFilters: [], PushedFilters: [IsNotNull(cd_demo_sk), IsNotNull(cd_marital_status), IsNotNull(cd_education_status), Or(Or(And(E..., ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string,cd_education_status:string>
                     :     :     :     +- BroadcastQueryStage 3
                     :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(input[0, int, false], input[1, string, false], input[2, string, false]),false), [plan_id=130439]
                     :     :     :           +- *(4) Filter ((isnotnull(cd_demo_sk#18691) AND isnotnull(cd_marital_status#18693)) AND isnotnull(cd_education_status#18694))
                     :     :     :              +- *(4) ColumnarToRow
                     :     :     :                 +- FileScan parquet default.customer_demographics[cd_demo_sk#18691,cd_marital_status#18693,cd_education_status#18694] Batched: true, DataFilters: [isnotnull(cd_demo_sk#18691), isnotnull(cd_marital_status#18693), isnotnull(cd_education_status#1..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer_demographics], PartitionFilters: [], PushedFilters: [IsNotNull(cd_demo_sk), IsNotNull(cd_marital_status), IsNotNull(cd_education_status)], ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string,cd_education_status:string>
                     :     :     +- BroadcastQueryStage 4
                     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=130458]
                     :     :           +- *(5) Project [ca_address_sk#3717, ca_state#3725]
                     :     :              +- *(5) Filter (((isnotnull(ca_country#3727) AND (ca_country#3727 = United States)) AND isnotnull(ca_address_sk#3717)) AND ((ca_state#3725 IN (IN,OH,NJ) OR ca_state#3725 IN (WI,CT,KY)) OR ca_state#3725 IN (LA,IA,AR)))
                     :     :                 +- *(5) ColumnarToRow
                     :     :                    +- FileScan parquet default.customer_address[ca_address_sk#3717,ca_state#3725,ca_country#3727] Batched: true, DataFilters: [isnotnull(ca_country#3727), (ca_country#3727 = United States), isnotnull(ca_address_sk#3717), ((..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_country), EqualTo(ca_country,United States), IsNotNull(ca_address_sk), Or(Or(In(ca_..., ReadSchema: struct<ca_address_sk:int,ca_state:string,ca_country:string>
                     :     +- BroadcastQueryStage 5
                     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=130479]
                     :           +- *(6) Project [d_date_sk#24]
                     :              +- *(6) Filter ((isnotnull(d_year#30) AND (d_year#30 = 2000)) AND isnotnull(d_date_sk#24))
                     :                 +- *(6) ColumnarToRow
                     :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30] Batched: true, DataFilters: [isnotnull(d_year#30), (d_year#30 = 2000), isnotnull(d_date_sk#24)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,2000), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int>
                     +- BroadcastQueryStage 6
                        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=130498]
                           +- *(7) Filter isnotnull(r_reason_sk#3781)
                              +- *(7) ColumnarToRow
                                 +- FileScan parquet default.reason[r_reason_sk#3781,r_reason_desc#3783] Batched: true, DataFilters: [isnotnull(r_reason_sk#3781)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/reason], PartitionFilters: [], PushedFilters: [IsNotNull(r_reason_sk)], ReadSchema: struct<r_reason_sk:int,r_reason_desc:string>

==== q86 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[lochierarchy#18746 DESC NULLS LAST,CASE WHEN (lochierarchy#18746 = 0) THEN i_category#18755 END ASC NULLS FIRST,rank_within_parent#18747 ASC NULLS FIRST], output=[total_sum#18745,i_category#18755,i_class#18756,lochierarchy#18746,rank_within_parent#18747])
   +- *(6) Project [total_sum#18745, i_category#18755, i_class#18756, lochierarchy#18746, rank_within_parent#18747]
      +- Window [rank(_w3#18771) windowspecdefinition(_w1#18769, _w2#18770, _w3#18771 DESC NULLS LAST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS rank_within_parent#18747], [_w1#18769, _w2#18770], [_w3#18771 DESC NULLS LAST]
         +- *(5) Sort [_w1#18769 ASC NULLS FIRST, _w2#18770 ASC NULLS FIRST, _w3#18771 DESC NULLS LAST], false, 0
            +- ShuffleQueryStage 3
               +- Exchange hashpartitioning(_w1#18769, _w2#18770, 20), ENSURE_REQUIREMENTS, [plan_id=131620]
                  +- *(4) HashAggregate(keys=[i_category#18755, i_class#18756, spark_grouping_id#18754L], functions=[sum(UnscaledValue(ws_net_paid#192))], output=[total_sum#18745, i_category#18755, i_class#18756, lochierarchy#18746, _w1#18769, _w2#18770, _w3#18771])
                     +- ShuffleQueryStage 2
                        +- Exchange hashpartitioning(i_category#18755, i_class#18756, spark_grouping_id#18754L, 20), ENSURE_REQUIREMENTS, [plan_id=131570]
                           +- *(3) HashAggregate(keys=[i_category#18755, i_class#18756, spark_grouping_id#18754L], functions=[partial_sum(UnscaledValue(ws_net_paid#192))], output=[i_category#18755, i_class#18756, spark_grouping_id#18754L, sum#18784L])
                              +- *(3) Expand [[ws_net_paid#192, i_category#449, i_class#447, 0], [ws_net_paid#192, i_category#449, null, 1], [ws_net_paid#192, null, null, 3]], [ws_net_paid#192, i_category#18755, i_class#18756, spark_grouping_id#18754L]
                                 +- *(3) Project [ws_net_paid#192, i_category#449, i_class#447]
                                    +- *(3) BroadcastHashJoin [ws_item_sk#166], [i_item_sk#437], Inner, BuildRight, false
                                       :- *(3) Project [ws_item_sk#166, ws_net_paid#192]
                                       :  +- *(3) BroadcastHashJoin [ws_sold_date_sk#163], [d_date_sk#24], Inner, BuildRight, false
                                       :     :- *(3) Filter (isnotnull(ws_sold_date_sk#163) AND isnotnull(ws_item_sk#166))
                                       :     :  +- *(3) ColumnarToRow
                                       :     :     +- FileScan parquet default.web_sales[ws_sold_date_sk#163,ws_item_sk#166,ws_net_paid#192] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#163), isnotnull(ws_item_sk#166)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_item_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_net_paid:decimal(7,2)>
                                       :     +- BroadcastQueryStage 0
                                       :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=131385]
                                       :           +- *(1) Project [d_date_sk#24]
                                       :              +- *(1) Filter (((isnotnull(d_month_seq#27) AND (d_month_seq#27 >= 1200)) AND (d_month_seq#27 <= 1211)) AND isnotnull(d_date_sk#24))
                                       :                 +- *(1) ColumnarToRow
                                       :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_month_seq#27] Batched: true, DataFilters: [isnotnull(d_month_seq#27), (d_month_seq#27 >= 1200), (d_month_seq#27 <= 1211), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1200), LessThanOrEqual(d_month_seq,1211),..., ReadSchema: struct<d_date_sk:int,d_month_seq:int>
                                       +- BroadcastQueryStage 1
                                          +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=131404]
                                             +- *(2) Filter isnotnull(i_item_sk#437)
                                                +- *(2) ColumnarToRow
                                                   +- FileScan parquet default.item[i_item_sk#437,i_class#447,i_category#449] Batched: true, DataFilters: [isnotnull(i_item_sk#437)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_class:string,i_category:string>

==== q87 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   *(14) HashAggregate(keys=[], functions=[count(1)], output=[count(1)#18883L])
   +- ShuffleQueryStage 16
      +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=132912]
         +- *(13) HashAggregate(keys=[], functions=[partial_count(1)], output=[count#18890L])
            +- *(13) Project
               +- *(13) BroadcastHashJoin [coalesce(c_last_name#90, ), isnull(c_last_name#90), coalesce(c_first_name#89, ), isnull(c_first_name#89), coalesce(d_date#26, 1970-01-01), isnull(d_date#26)], [coalesce(c_last_name#18874, ), isnull(c_last_name#18874), coalesce(c_first_name#18873, ), isnull(c_first_name#18873), coalesce(d_date#18839, 1970-01-01), isnull(d_date#18839)], LeftAnti, BuildRight, false
                  :- *(13) BroadcastHashJoin [coalesce(c_last_name#90, ), isnull(c_last_name#90), coalesce(c_first_name#89, ), isnull(c_first_name#89), coalesce(d_date#26, 1970-01-01), isnull(d_date#26)], [coalesce(c_last_name#18828, ), isnull(c_last_name#18828), coalesce(c_first_name#18827, ), isnull(c_first_name#18827), coalesce(d_date#18793, 1970-01-01), isnull(d_date#18793)], LeftAnti, BuildRight, false
                  :  :- AQEShuffleRead local
                  :  :  +- ShuffleQueryStage 13
                  :  :     +- Exchange hashpartitioning(coalesce(c_last_name#90, ), isnull(c_last_name#90), coalesce(c_first_name#89, ), isnull(c_first_name#89), coalesce(d_date#26, 1970-01-01), isnull(d_date#26), 20), ENSURE_REQUIREMENTS, [plan_id=132700]
                  :  :        +- *(10) HashAggregate(keys=[c_last_name#90, c_first_name#89, d_date#26], functions=[], output=[c_last_name#90, c_first_name#89, d_date#26])
                  :  :           +- ShuffleQueryStage 10
                  :  :              +- Exchange hashpartitioning(c_last_name#90, c_first_name#89, d_date#26, 20), ENSURE_REQUIREMENTS, [plan_id=132485]
                  :  :                 +- *(7) HashAggregate(keys=[c_last_name#90, c_first_name#89, d_date#26], functions=[], output=[c_last_name#90, c_first_name#89, d_date#26])
                  :  :                    +- *(7) Project [c_last_name#90, c_first_name#89, d_date#26]
                  :  :                       +- *(7) BroadcastHashJoin [ss_customer_sk#417], [c_customer_sk#81], Inner, BuildRight, false
                  :  :                          :- *(7) Project [ss_customer_sk#417, d_date#26]
                  :  :                          :  +- *(7) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#24], Inner, BuildRight, false
                  :  :                          :     :- *(7) Filter (isnotnull(ss_sold_date_sk#414) AND isnotnull(ss_customer_sk#417))
                  :  :                          :     :  +- *(7) ColumnarToRow
                  :  :                          :     :     +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_customer_sk#417] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#414), isnotnull(ss_customer_sk#417)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk), IsNotNull(ss_customer_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_customer_sk:int>
                  :  :                          :     +- BroadcastQueryStage 0
                  :  :                          :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=131996]
                  :  :                          :           +- *(1) Project [d_date_sk#24, d_date#26]
                  :  :                          :              +- *(1) Filter (((isnotnull(d_month_seq#27) AND (d_month_seq#27 >= 1200)) AND (d_month_seq#27 <= 1211)) AND isnotnull(d_date_sk#24))
                  :  :                          :                 +- *(1) ColumnarToRow
                  :  :                          :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_date#26,d_month_seq#27] Batched: true, DataFilters: [isnotnull(d_month_seq#27), (d_month_seq#27 >= 1200), (d_month_seq#27 <= 1211), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1200), LessThanOrEqual(d_month_seq,1211),..., ReadSchema: struct<d_date_sk:int,d_date:date,d_month_seq:int>
                  :  :                          +- BroadcastQueryStage 1
                  :  :                             +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=132015]
                  :  :                                +- *(2) Filter isnotnull(c_customer_sk#81)
                  :  :                                   +- *(2) ColumnarToRow
                  :  :                                      +- FileScan parquet default.customer[c_customer_sk#81,c_first_name#89,c_last_name#90] Batched: true, DataFilters: [isnotnull(c_customer_sk#81)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk)], ReadSchema: struct<c_customer_sk:int,c_first_name:string,c_last_name:string>
                  :  +- BroadcastQueryStage 14
                  :     +- BroadcastExchange HashedRelationBroadcastMode(List(coalesce(input[0, string, true], ), isnull(input[0, string, true]), coalesce(input[1, string, true], ), isnull(input[1, string, true]), coalesce(input[2, date, true], 1970-01-01), isnull(input[2, date, true])),false), [plan_id=132765]
                  :        +- *(11) HashAggregate(keys=[c_last_name#18828, c_first_name#18827, d_date#18793], functions=[], output=[c_last_name#18828, c_first_name#18827, d_date#18793])
                  :           +- ShuffleQueryStage 11
                  :              +- Exchange hashpartitioning(c_last_name#18828, c_first_name#18827, d_date#18793, 20), ENSURE_REQUIREMENTS, [plan_id=132528]
                  :                 +- *(8) HashAggregate(keys=[c_last_name#18828, c_first_name#18827, d_date#18793], functions=[], output=[c_last_name#18828, c_first_name#18827, d_date#18793])
                  :                    +- *(8) Project [c_last_name#18828, c_first_name#18827, d_date#18793]
                  :                       +- *(8) BroadcastHashJoin [cs_bill_customer_sk#200], [c_customer_sk#18819], Inner, BuildRight, false
                  :                          :- *(8) Project [cs_bill_customer_sk#200, d_date#18793]
                  :                          :  +- *(8) BroadcastHashJoin [cs_sold_date_sk#197], [d_date_sk#18791], Inner, BuildRight, false
                  :                          :     :- *(8) Filter (isnotnull(cs_sold_date_sk#197) AND isnotnull(cs_bill_customer_sk#200))
                  :                          :     :  +- *(8) ColumnarToRow
                  :                          :     :     +- FileScan parquet default.catalog_sales[cs_sold_date_sk#197,cs_bill_customer_sk#200] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#197), isnotnull(cs_bill_customer_sk#200)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk), IsNotNull(cs_bill_customer_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_bill_customer_sk:int>
                  :                          :     +- BroadcastQueryStage 3
                  :                          :        +- ReusedExchange [d_date_sk#18791, d_date#18793], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=131996]
                  :                          +- BroadcastQueryStage 5
                  :                             +- ReusedExchange [c_customer_sk#18819, c_first_name#18827, c_last_name#18828], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=132015]
                  +- BroadcastQueryStage 15
                     +- BroadcastExchange HashedRelationBroadcastMode(List(coalesce(input[0, string, true], ), isnull(input[0, string, true]), coalesce(input[1, string, true], ), isnull(input[1, string, true]), coalesce(input[2, date, true], 1970-01-01), isnull(input[2, date, true])),false), [plan_id=132817]
                        +- *(12) HashAggregate(keys=[c_last_name#18874, c_first_name#18873, d_date#18839], functions=[], output=[c_last_name#18874, c_first_name#18873, d_date#18839])
                           +- ShuffleQueryStage 12
                              +- Exchange hashpartitioning(c_last_name#18874, c_first_name#18873, d_date#18839, 20), ENSURE_REQUIREMENTS, [plan_id=132572]
                                 +- *(9) HashAggregate(keys=[c_last_name#18874, c_first_name#18873, d_date#18839], functions=[], output=[c_last_name#18874, c_first_name#18873, d_date#18839])
                                    +- *(9) Project [c_last_name#18874, c_first_name#18873, d_date#18839]
                                       +- *(9) BroadcastHashJoin [ws_bill_customer_sk#167], [c_customer_sk#18865], Inner, BuildRight, false
                                          :- *(9) Project [ws_bill_customer_sk#167, d_date#18839]
                                          :  +- *(9) BroadcastHashJoin [ws_sold_date_sk#163], [d_date_sk#18837], Inner, BuildRight, false
                                          :     :- *(9) Filter (isnotnull(ws_sold_date_sk#163) AND isnotnull(ws_bill_customer_sk#167))
                                          :     :  +- *(9) ColumnarToRow
                                          :     :     +- FileScan parquet default.web_sales[ws_sold_date_sk#163,ws_bill_customer_sk#167] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#163), isnotnull(ws_bill_customer_sk#167)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_bill_customer_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_bill_customer_sk:int>
                                          :     +- BroadcastQueryStage 7
                                          :        +- ReusedExchange [d_date_sk#18837, d_date#18839], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=131996]
                                          +- BroadcastQueryStage 9
                                             +- ReusedExchange [c_customer_sk#18865, c_first_name#18873, c_last_name#18874], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=132015]


==== q88 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   *(40) BroadcastNestedLoopJoin BuildRight, Inner
   :- *(40) BroadcastNestedLoopJoin BuildRight, Inner
   :  :- *(40) BroadcastNestedLoopJoin BuildRight, Inner
   :  :  :- *(40) BroadcastNestedLoopJoin BuildRight, Inner
   :  :  :  :- *(40) BroadcastNestedLoopJoin BuildRight, Inner
   :  :  :  :  :- *(40) BroadcastNestedLoopJoin BuildRight, Inner
   :  :  :  :  :  :- *(40) BroadcastNestedLoopJoin BuildRight, Inner
   :  :  :  :  :  :  :- *(40) HashAggregate(keys=[], functions=[count(1)], output=[h8_30_to_9#18891L])
   :  :  :  :  :  :  :  +- ShuffleQueryStage 41
   :  :  :  :  :  :  :     +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=137021]
   :  :  :  :  :  :  :        +- *(28) HashAggregate(keys=[], functions=[partial_count(1)], output=[count#19413L])
   :  :  :  :  :  :  :           +- *(28) Project
   :  :  :  :  :  :  :              +- *(28) BroadcastHashJoin [ss_store_sk#421], [s_store_sk#52], Inner, BuildRight, false
   :  :  :  :  :  :  :                 :- *(28) Project [ss_store_sk#421]
   :  :  :  :  :  :  :                 :  +- *(28) BroadcastHashJoin [ss_sold_time_sk#415], [t_time_sk#15635], Inner, BuildRight, false
   :  :  :  :  :  :  :                 :     :- *(28) Project [ss_sold_time_sk#415, ss_store_sk#421]
   :  :  :  :  :  :  :                 :     :  +- *(28) BroadcastHashJoin [ss_hdemo_sk#419], [hd_demo_sk#5552], Inner, BuildRight, false
   :  :  :  :  :  :  :                 :     :     :- *(28) Filter ((isnotnull(ss_hdemo_sk#419) AND isnotnull(ss_sold_time_sk#415)) AND isnotnull(ss_store_sk#421))
   :  :  :  :  :  :  :                 :     :     :  +- *(28) ColumnarToRow
   :  :  :  :  :  :  :                 :     :     :     +- FileScan parquet default.store_sales[ss_sold_time_sk#415,ss_hdemo_sk#419,ss_store_sk#421] Batched: true, DataFilters: [isnotnull(ss_hdemo_sk#419), isnotnull(ss_sold_time_sk#415), isnotnull(ss_store_sk#421)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>
   :  :  :  :  :  :  :                 :     :     +- BroadcastQueryStage 0
   :  :  :  :  :  :  :                 :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=133720]
   :  :  :  :  :  :  :                 :     :           +- *(1) Project [hd_demo_sk#5552]
   :  :  :  :  :  :  :                 :     :              +- *(1) Filter (((((hd_dep_count#5555 = 4) AND (hd_vehicle_count#5556 <= 6)) OR ((hd_dep_count#5555 = 2) AND (hd_vehicle_count#5556 <= 4))) OR ((hd_dep_count#5555 = 0) AND (hd_vehicle_count#5556 <= 2))) AND isnotnull(hd_demo_sk#5552))
   :  :  :  :  :  :  :                 :     :                 +- *(1) ColumnarToRow
   :  :  :  :  :  :  :                 :     :                    +- FileScan parquet default.household_demographics[hd_demo_sk#5552,hd_dep_count#5555,hd_vehicle_count#5556] Batched: true, DataFilters: [((((hd_dep_count#5555 = 4) AND (hd_vehicle_count#5556 <= 6)) OR ((hd_dep_count#5555 = 2) AND (hd..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/household_demographics], PartitionFilters: [], PushedFilters: [Or(Or(And(EqualTo(hd_dep_count,4),LessThanOrEqual(hd_vehicle_count,6)),And(EqualTo(hd_dep_count,..., ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int,hd_vehicle_count:int>
   :  :  :  :  :  :  :                 :     +- BroadcastQueryStage 1
   :  :  :  :  :  :  :                 :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=133741]
   :  :  :  :  :  :  :                 :           +- *(2) Project [t_time_sk#15635]
   :  :  :  :  :  :  :                 :              +- *(2) Filter ((((isnotnull(t_hour#15638) AND isnotnull(t_minute#15639)) AND (t_hour#15638 = 8)) AND (t_minute#15639 >= 30)) AND isnotnull(t_time_sk#15635))
   :  :  :  :  :  :  :                 :                 +- *(2) ColumnarToRow
   :  :  :  :  :  :  :                 :                    +- FileScan parquet default.time_dim[t_time_sk#15635,t_hour#15638,t_minute#15639] Batched: true, DataFilters: [isnotnull(t_hour#15638), isnotnull(t_minute#15639), (t_hour#15638 = 8), (t_minute#15639 >= 30), ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,8), GreaterThanOrEqual(t_minute,30), IsNo..., ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>
   :  :  :  :  :  :  :                 +- BroadcastQueryStage 2
   :  :  :  :  :  :  :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=133762]
   :  :  :  :  :  :  :                       +- *(3) Project [s_store_sk#52]
   :  :  :  :  :  :  :                          +- *(3) Filter ((isnotnull(s_store_name#57) AND (s_store_name#57 = ese)) AND isnotnull(s_store_sk#52))
   :  :  :  :  :  :  :                             +- *(3) ColumnarToRow
   :  :  :  :  :  :  :                                +- FileScan parquet default.store[s_store_sk#52,s_store_name#57] Batched: true, DataFilters: [isnotnull(s_store_name#57), (s_store_name#57 = ese), isnotnull(s_store_sk#52)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_name), EqualTo(s_store_name,ese), IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_name:string>
   :  :  :  :  :  :  +- BroadcastQueryStage 52
   :  :  :  :  :  :     +- BroadcastExchange IdentityBroadcastMode, [plan_id=138729]
   :  :  :  :  :  :        +- *(39) HashAggregate(keys=[], functions=[count(1)], output=[h9_to_9_30#18892L])
   :  :  :  :  :  :           +- ShuffleQueryStage 45
   :  :  :  :  :  :              +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=137920]
   :  :  :  :  :  :                 +- *(32) HashAggregate(keys=[], functions=[partial_count(1)], output=[count#19415L])
   :  :  :  :  :  :                    +- *(32) Project
   :  :  :  :  :  :                       +- *(32) BroadcastHashJoin [ss_store_sk#18914], [s_store_sk#18945], Inner, BuildRight, false
   :  :  :  :  :  :                          :- *(32) Project [ss_store_sk#18914]
   :  :  :  :  :  :                          :  +- *(32) BroadcastHashJoin [ss_sold_time_sk#18908], [t_time_sk#18935], Inner, BuildRight, false
   :  :  :  :  :  :                          :     :- *(32) Project [ss_sold_time_sk#18908, ss_store_sk#18914]
   :  :  :  :  :  :                          :     :  +- *(32) BroadcastHashJoin [ss_hdemo_sk#18912], [hd_demo_sk#18930], Inner, BuildRight, false
   :  :  :  :  :  :                          :     :     :- *(32) Filter ((isnotnull(ss_hdemo_sk#18912) AND isnotnull(ss_sold_time_sk#18908)) AND isnotnull(ss_store_sk#18914))
   :  :  :  :  :  :                          :     :     :  +- *(32) ColumnarToRow
   :  :  :  :  :  :                          :     :     :     +- FileScan parquet default.store_sales[ss_sold_time_sk#18908,ss_hdemo_sk#18912,ss_store_sk#18914] Batched: true, DataFilters: [isnotnull(ss_hdemo_sk#18912), isnotnull(ss_sold_time_sk#18908), isnotnull(ss_store_sk#18914)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>
   :  :  :  :  :  :                          :     :     +- BroadcastQueryStage 4
   :  :  :  :  :  :                          :     :        +- ReusedExchange [hd_demo_sk#18930], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=133720]
   :  :  :  :  :  :                          :     +- BroadcastQueryStage 5
   :  :  :  :  :  :                          :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=133847]
   :  :  :  :  :  :                          :           +- *(5) Project [t_time_sk#18935]
   :  :  :  :  :  :                          :              +- *(5) Filter ((((isnotnull(t_hour#18938) AND isnotnull(t_minute#18939)) AND (t_hour#18938 = 9)) AND (t_minute#18939 < 30)) AND isnotnull(t_time_sk#18935))
   :  :  :  :  :  :                          :                 +- *(5) ColumnarToRow
   :  :  :  :  :  :                          :                    +- FileScan parquet default.time_dim[t_time_sk#18935,t_hour#18938,t_minute#18939] Batched: true, DataFilters: [isnotnull(t_hour#18938), isnotnull(t_minute#18939), (t_hour#18938 = 9), (t_minute#18939 < 30), i..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,9), LessThan(t_minute,30), IsNotNull(t_ti..., ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>
   :  :  :  :  :  :                          +- BroadcastQueryStage 7
   :  :  :  :  :  :                             +- ReusedExchange [s_store_sk#18945], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=133762]
   :  :  :  :  :  +- BroadcastQueryStage 48
   :  :  :  :  :     +- BroadcastExchange IdentityBroadcastMode, [plan_id=138218]
   :  :  :  :  :        +- *(35) HashAggregate(keys=[], functions=[count(1)], output=[h9_30_to_10#18893L])
   :  :  :  :  :           +- ShuffleQueryStage 38
   :  :  :  :  :              +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=135904]
   :  :  :  :  :                 +- *(25) HashAggregate(keys=[], functions=[partial_count(1)], output=[count#19417L])
   :  :  :  :  :                    +- *(25) Project
   :  :  :  :  :                       +- *(25) BroadcastHashJoin [ss_store_sk#18981], [s_store_sk#19012], Inner, BuildRight, false
   :  :  :  :  :                          :- *(25) Project [ss_store_sk#18981]
   :  :  :  :  :                          :  +- *(25) BroadcastHashJoin [ss_sold_time_sk#18975], [t_time_sk#19002], Inner, BuildRight, false
   :  :  :  :  :                          :     :- *(25) Project [ss_sold_time_sk#18975, ss_store_sk#18981]
   :  :  :  :  :                          :     :  +- *(25) BroadcastHashJoin [ss_hdemo_sk#18979], [hd_demo_sk#18997], Inner, BuildRight, false
   :  :  :  :  :                          :     :     :- *(25) Filter ((isnotnull(ss_hdemo_sk#18979) AND isnotnull(ss_sold_time_sk#18975)) AND isnotnull(ss_store_sk#18981))
   :  :  :  :  :                          :     :     :  +- *(25) ColumnarToRow
   :  :  :  :  :                          :     :     :     +- FileScan parquet default.store_sales[ss_sold_time_sk#18975,ss_hdemo_sk#18979,ss_store_sk#18981] Batched: true, DataFilters: [isnotnull(ss_hdemo_sk#18979), isnotnull(ss_sold_time_sk#18975), isnotnull(ss_store_sk#18981)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>
   :  :  :  :  :                          :     :     +- BroadcastQueryStage 9
   :  :  :  :  :                          :     :        +- ReusedExchange [hd_demo_sk#18997], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=133720]
   :  :  :  :  :                          :     +- BroadcastQueryStage 10
   :  :  :  :  :                          :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=133957]
   :  :  :  :  :                          :           +- *(8) Project [t_time_sk#19002]
   :  :  :  :  :                          :              +- *(8) Filter ((((isnotnull(t_hour#19005) AND isnotnull(t_minute#19006)) AND (t_hour#19005 = 9)) AND (t_minute#19006 >= 30)) AND isnotnull(t_time_sk#19002))
   :  :  :  :  :                          :                 +- *(8) ColumnarToRow
   :  :  :  :  :                          :                    +- FileScan parquet default.time_dim[t_time_sk#19002,t_hour#19005,t_minute#19006] Batched: true, DataFilters: [isnotnull(t_hour#19005), isnotnull(t_minute#19006), (t_hour#19005 = 9), (t_minute#19006 >= 30), ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,9), GreaterThanOrEqual(t_minute,30), IsNo..., ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>
   :  :  :  :  :                          +- BroadcastQueryStage 12
   :  :  :  :  :                             +- ReusedExchange [s_store_sk#19012], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=133762]
   :  :  :  :  +- BroadcastQueryStage 50
   :  :  :  :     +- BroadcastExchange IdentityBroadcastMode, [plan_id=138347]
   :  :  :  :        +- *(37) HashAggregate(keys=[], functions=[count(1)], output=[h10_to_10_30#18894L])
   :  :  :  :           +- ShuffleQueryStage 43
   :  :  :  :              +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=137554]
   :  :  :  :                 +- *(30) HashAggregate(keys=[], functions=[partial_count(1)], output=[count#19419L])
   :  :  :  :                    +- *(30) Project
   :  :  :  :                       +- *(30) BroadcastHashJoin [ss_store_sk#19048], [s_store_sk#19079], Inner, BuildRight, false
   :  :  :  :                          :- *(30) Project [ss_store_sk#19048]
   :  :  :  :                          :  +- *(30) BroadcastHashJoin [ss_sold_time_sk#19042], [t_time_sk#19069], Inner, BuildRight, false
   :  :  :  :                          :     :- *(30) Project [ss_sold_time_sk#19042, ss_store_sk#19048]
   :  :  :  :                          :     :  +- *(30) BroadcastHashJoin [ss_hdemo_sk#19046], [hd_demo_sk#19064], Inner, BuildRight, false
   :  :  :  :                          :     :     :- *(30) Filter ((isnotnull(ss_hdemo_sk#19046) AND isnotnull(ss_sold_time_sk#19042)) AND isnotnull(ss_store_sk#19048))
   :  :  :  :                          :     :     :  +- *(30) ColumnarToRow
   :  :  :  :                          :     :     :     +- FileScan parquet default.store_sales[ss_sold_time_sk#19042,ss_hdemo_sk#19046,ss_store_sk#19048] Batched: true, DataFilters: [isnotnull(ss_hdemo_sk#19046), isnotnull(ss_sold_time_sk#19042), isnotnull(ss_store_sk#19048)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>
   :  :  :  :                          :     :     +- BroadcastQueryStage 14
   :  :  :  :                          :     :        +- ReusedExchange [hd_demo_sk#19064], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=133720]
   :  :  :  :                          :     +- BroadcastQueryStage 15
   :  :  :  :                          :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=134067]
   :  :  :  :                          :           +- *(11) Project [t_time_sk#19069]
   :  :  :  :                          :              +- *(11) Filter ((((isnotnull(t_hour#19072) AND isnotnull(t_minute#19073)) AND (t_hour#19072 = 10)) AND (t_minute#19073 < 30)) AND isnotnull(t_time_sk#19069))
   :  :  :  :                          :                 +- *(11) ColumnarToRow
   :  :  :  :                          :                    +- FileScan parquet default.time_dim[t_time_sk#19069,t_hour#19072,t_minute#19073] Batched: true, DataFilters: [isnotnull(t_hour#19072), isnotnull(t_minute#19073), (t_hour#19072 = 10), (t_minute#19073 < 30), ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,10), LessThan(t_minute,30), IsNotNull(t_t..., ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>
   :  :  :  :                          +- BroadcastQueryStage 17
   :  :  :  :                             +- ReusedExchange [s_store_sk#19079], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=133762]
   :  :  :  +- BroadcastQueryStage 46
   :  :  :     +- BroadcastExchange IdentityBroadcastMode, [plan_id=138083]
   :  :  :        +- *(33) HashAggregate(keys=[], functions=[count(1)], output=[h10_30_to_11#18895L])
   :  :  :           +- ShuffleQueryStage 39
   :  :  :              +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=136321]
   :  :  :                 +- *(26) HashAggregate(keys=[], functions=[partial_count(1)], output=[count#19421L])
   :  :  :                    +- *(26) Project
   :  :  :                       +- *(26) BroadcastHashJoin [ss_store_sk#19115], [s_store_sk#19146], Inner, BuildRight, false
   :  :  :                          :- *(26) Project [ss_store_sk#19115]
   :  :  :                          :  +- *(26) BroadcastHashJoin [ss_sold_time_sk#19109], [t_time_sk#19136], Inner, BuildRight, false
   :  :  :                          :     :- *(26) Project [ss_sold_time_sk#19109, ss_store_sk#19115]
   :  :  :                          :     :  +- *(26) BroadcastHashJoin [ss_hdemo_sk#19113], [hd_demo_sk#19131], Inner, BuildRight, false
   :  :  :                          :     :     :- *(26) Filter ((isnotnull(ss_hdemo_sk#19113) AND isnotnull(ss_sold_time_sk#19109)) AND isnotnull(ss_store_sk#19115))
   :  :  :                          :     :     :  +- *(26) ColumnarToRow
   :  :  :                          :     :     :     +- FileScan parquet default.store_sales[ss_sold_time_sk#19109,ss_hdemo_sk#19113,ss_store_sk#19115] Batched: true, DataFilters: [isnotnull(ss_hdemo_sk#19113), isnotnull(ss_sold_time_sk#19109), isnotnull(ss_store_sk#19115)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>
   :  :  :                          :     :     +- BroadcastQueryStage 19
   :  :  :                          :     :        +- ReusedExchange [hd_demo_sk#19131], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=133720]
   :  :  :                          :     +- BroadcastQueryStage 20
   :  :  :                          :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=134177]
   :  :  :                          :           +- *(14) Project [t_time_sk#19136]
   :  :  :                          :              +- *(14) Filter ((((isnotnull(t_hour#19139) AND isnotnull(t_minute#19140)) AND (t_hour#19139 = 10)) AND (t_minute#19140 >= 30)) AND isnotnull(t_time_sk#19136))
   :  :  :                          :                 +- *(14) ColumnarToRow
   :  :  :                          :                    +- FileScan parquet default.time_dim[t_time_sk#19136,t_hour#19139,t_minute#19140] Batched: true, DataFilters: [isnotnull(t_hour#19139), isnotnull(t_minute#19140), (t_hour#19139 = 10), (t_minute#19140 >= 30),..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,10), GreaterThanOrEqual(t_minute,30), IsN..., ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>
   :  :  :                          +- BroadcastQueryStage 22
   :  :  :                             +- ReusedExchange [s_store_sk#19146], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=133762]
   :  :  +- BroadcastQueryStage 47
   :  :     +- BroadcastExchange IdentityBroadcastMode, [plan_id=138151]
   :  :        +- *(34) HashAggregate(keys=[], functions=[count(1)], output=[h11_to_11_30#18896L])
   :  :           +- ShuffleQueryStage 40
   :  :              +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=136694]
   :  :                 +- *(27) HashAggregate(keys=[], functions=[partial_count(1)], output=[count#19423L])
   :  :                    +- *(27) Project
   :  :                       +- *(27) BroadcastHashJoin [ss_store_sk#19182], [s_store_sk#19213], Inner, BuildRight, false
   :  :                          :- *(27) Project [ss_store_sk#19182]
   :  :                          :  +- *(27) BroadcastHashJoin [ss_sold_time_sk#19176], [t_time_sk#19203], Inner, BuildRight, false
   :  :                          :     :- *(27) Project [ss_sold_time_sk#19176, ss_store_sk#19182]
   :  :                          :     :  +- *(27) BroadcastHashJoin [ss_hdemo_sk#19180], [hd_demo_sk#19198], Inner, BuildRight, false
   :  :                          :     :     :- *(27) Filter ((isnotnull(ss_hdemo_sk#19180) AND isnotnull(ss_sold_time_sk#19176)) AND isnotnull(ss_store_sk#19182))
   :  :                          :     :     :  +- *(27) ColumnarToRow
   :  :                          :     :     :     +- FileScan parquet default.store_sales[ss_sold_time_sk#19176,ss_hdemo_sk#19180,ss_store_sk#19182] Batched: true, DataFilters: [isnotnull(ss_hdemo_sk#19180), isnotnull(ss_sold_time_sk#19176), isnotnull(ss_store_sk#19182)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>
   :  :                          :     :     +- BroadcastQueryStage 24
   :  :                          :     :        +- ReusedExchange [hd_demo_sk#19198], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=133720]
   :  :                          :     +- BroadcastQueryStage 25
   :  :                          :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=134287]
   :  :                          :           +- *(17) Project [t_time_sk#19203]
   :  :                          :              +- *(17) Filter ((((isnotnull(t_hour#19206) AND isnotnull(t_minute#19207)) AND (t_hour#19206 = 11)) AND (t_minute#19207 < 30)) AND isnotnull(t_time_sk#19203))
   :  :                          :                 +- *(17) ColumnarToRow
   :  :                          :                    +- FileScan parquet default.time_dim[t_time_sk#19203,t_hour#19206,t_minute#19207] Batched: true, DataFilters: [isnotnull(t_hour#19206), isnotnull(t_minute#19207), (t_hour#19206 = 11), (t_minute#19207 < 30), ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,11), LessThan(t_minute,30), IsNotNull(t_t..., ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>
   :  :                          +- BroadcastQueryStage 27
   :  :                             +- ReusedExchange [s_store_sk#19213], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=133762]
   :  +- BroadcastQueryStage 49
   :     +- BroadcastExchange IdentityBroadcastMode, [plan_id=138287]
   :        +- *(36) HashAggregate(keys=[], functions=[count(1)], output=[h11_30_to_12#18897L])
   :           +- ShuffleQueryStage 42
   :              +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=137312]
   :                 +- *(29) HashAggregate(keys=[], functions=[partial_count(1)], output=[count#19425L])
   :                    +- *(29) Project
   :                       +- *(29) BroadcastHashJoin [ss_store_sk#19249], [s_store_sk#19280], Inner, BuildRight, false
   :                          :- *(29) Project [ss_store_sk#19249]
   :                          :  +- *(29) BroadcastHashJoin [ss_sold_time_sk#19243], [t_time_sk#19270], Inner, BuildRight, false
   :                          :     :- *(29) Project [ss_sold_time_sk#19243, ss_store_sk#19249]
   :                          :     :  +- *(29) BroadcastHashJoin [ss_hdemo_sk#19247], [hd_demo_sk#19265], Inner, BuildRight, false
   :                          :     :     :- *(29) Filter ((isnotnull(ss_hdemo_sk#19247) AND isnotnull(ss_sold_time_sk#19243)) AND isnotnull(ss_store_sk#19249))
   :                          :     :     :  +- *(29) ColumnarToRow
   :                          :     :     :     +- FileScan parquet default.store_sales[ss_sold_time_sk#19243,ss_hdemo_sk#19247,ss_store_sk#19249] Batched: true, DataFilters: [isnotnull(ss_hdemo_sk#19247), isnotnull(ss_sold_time_sk#19243), isnotnull(ss_store_sk#19249)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>
   :                          :     :     +- BroadcastQueryStage 29
   :                          :     :        +- ReusedExchange [hd_demo_sk#19265], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=133720]
   :                          :     +- BroadcastQueryStage 30
   :                          :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=134397]
   :                          :           +- *(20) Project [t_time_sk#19270]
   :                          :              +- *(20) Filter ((((isnotnull(t_hour#19273) AND isnotnull(t_minute#19274)) AND (t_hour#19273 = 11)) AND (t_minute#19274 >= 30)) AND isnotnull(t_time_sk#19270))
   :                          :                 +- *(20) ColumnarToRow
   :                          :                    +- FileScan parquet default.time_dim[t_time_sk#19270,t_hour#19273,t_minute#19274] Batched: true, DataFilters: [isnotnull(t_hour#19273), isnotnull(t_minute#19274), (t_hour#19273 = 11), (t_minute#19274 >= 30),..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,11), GreaterThanOrEqual(t_minute,30), IsN..., ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>
   :                          +- BroadcastQueryStage 32
   :                             +- ReusedExchange [s_store_sk#19280], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=133762]
   +- BroadcastQueryStage 51
      +- BroadcastExchange IdentityBroadcastMode, [plan_id=138454]
         +- *(38) HashAggregate(keys=[], functions=[count(1)], output=[h12_to_12_30#18898L])
            +- ShuffleQueryStage 44
               +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=137763]
                  +- *(31) HashAggregate(keys=[], functions=[partial_count(1)], output=[count#19427L])
                     +- *(31) Project
                        +- *(31) BroadcastHashJoin [ss_store_sk#19316], [s_store_sk#19347], Inner, BuildRight, false
                           :- *(31) Project [ss_store_sk#19316]
                           :  +- *(31) BroadcastHashJoin [ss_sold_time_sk#19310], [t_time_sk#19337], Inner, BuildRight, false
                           :     :- *(31) Project [ss_sold_time_sk#19310, ss_store_sk#19316]
                           :     :  +- *(31) BroadcastHashJoin [ss_hdemo_sk#19314], [hd_demo_sk#19332], Inner, BuildRight, false
                           :     :     :- *(31) Filter ((isnotnull(ss_hdemo_sk#19314) AND isnotnull(ss_sold_time_sk#19310)) AND isnotnull(ss_store_sk#19316))
                           :     :     :  +- *(31) ColumnarToRow
                           :     :     :     +- FileScan parquet default.store_sales[ss_sold_time_sk#19310,ss_hdemo_sk#19314,ss_store_sk#19316] Batched: true, DataFilters: [isnotnull(ss_hdemo_sk#19314), isnotnull(ss_sold_time_sk#19310), isnotnull(ss_store_sk#19316)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>
                           :     :     +- BroadcastQueryStage 34
                           :     :        +- ReusedExchange [hd_demo_sk#19332], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=133720]
                           :     +- BroadcastQueryStage 35
                           :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=134507]
                           :           +- *(23) Project [t_time_sk#19337]
                           :              +- *(23) Filter ((((isnotnull(t_hour#19340) AND isnotnull(t_minute#19341)) AND (t_hour#19340 = 12)) AND (t_minute#19341 < 30)) AND isnotnull(t_time_sk#19337))
                           :                 +- *(23) ColumnarToRow
                           :                    +- FileScan parquet default.time_dim[t_time_sk#19337,t_hour#19340,t_minute#19341] Batched: true, DataFilters: [isnotnull(t_hour#19340), isnotnull(t_minute#19341), (t_hour#19340 = 12), (t_minute#19341 < 30), ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,12), LessThan(t_minute,30), IsNotNull(t_t..., ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>
                           +- BroadcastQueryStage 37
                              +- ReusedExchange [s_store_sk#19347], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=133762]


==== q89 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[CheckOverflow((promote_precision(cast(sum_sales#19428 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#19429 as decimal(22,6)))), DecimalType(22,6)) ASC NULLS FIRST,s_store_name#57 ASC NULLS FIRST], output=[i_category#449,i_class#447,i_brand#445,s_store_name#57,s_company_name#69,d_moy#32,sum_sales#19428,avg_monthly_sales#19429])
   +- *(7) Project [i_category#449, i_class#447, i_brand#445, s_store_name#57, s_company_name#69, d_moy#32, sum_sales#19428, avg_monthly_sales#19429]
      +- *(7) Filter CASE WHEN NOT (avg_monthly_sales#19429 = 0.000000) THEN (CheckOverflow((promote_precision(abs(CheckOverflow((promote_precision(cast(sum_sales#19428 as decimal(22,6))) - promote_precision(cast(avg_monthly_sales#19429 as decimal(22,6)))), DecimalType(22,6)))) / promote_precision(cast(avg_monthly_sales#19429 as decimal(22,6)))), DecimalType(38,16)) > 0.1000000000000000) END
         +- Window [avg(_w0#19433) windowspecdefinition(i_category#449, i_brand#445, s_store_name#57, s_company_name#69, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS avg_monthly_sales#19429], [i_category#449, i_brand#445, s_store_name#57, s_company_name#69]
            +- *(6) Sort [i_category#449 ASC NULLS FIRST, i_brand#445 ASC NULLS FIRST, s_store_name#57 ASC NULLS FIRST, s_company_name#69 ASC NULLS FIRST], false, 0
               +- ShuffleQueryStage 4
                  +- Exchange hashpartitioning(i_category#449, i_brand#445, s_store_name#57, s_company_name#69, 20), ENSURE_REQUIREMENTS, [plan_id=139306]
                     +- *(5) HashAggregate(keys=[i_category#449, i_class#447, i_brand#445, s_store_name#57, s_company_name#69, d_moy#32], functions=[sum(UnscaledValue(ss_sales_price#427))], output=[i_category#449, i_class#447, i_brand#445, s_store_name#57, s_company_name#69, d_moy#32, sum_sales#19428, _w0#19433])
                        +- ShuffleQueryStage 3
                           +- Exchange hashpartitioning(i_category#449, i_class#447, i_brand#445, s_store_name#57, s_company_name#69, d_moy#32, 20), ENSURE_REQUIREMENTS, [plan_id=139248]
                              +- *(4) HashAggregate(keys=[i_category#449, i_class#447, i_brand#445, s_store_name#57, s_company_name#69, d_moy#32], functions=[partial_sum(UnscaledValue(ss_sales_price#427))], output=[i_category#449, i_class#447, i_brand#445, s_store_name#57, s_company_name#69, d_moy#32, sum#19443L])
                                 +- *(4) Project [i_brand#445, i_class#447, i_category#449, ss_sales_price#427, d_moy#32, s_store_name#57, s_company_name#69]
                                    +- *(4) BroadcastHashJoin [ss_store_sk#421], [s_store_sk#52], Inner, BuildRight, false
                                       :- *(4) Project [i_brand#445, i_class#447, i_category#449, ss_store_sk#421, ss_sales_price#427, d_moy#32]
                                       :  +- *(4) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#24], Inner, BuildRight, false
                                       :     :- *(4) Project [i_brand#445, i_class#447, i_category#449, ss_sold_date_sk#414, ss_store_sk#421, ss_sales_price#427]
                                       :     :  +- *(4) BroadcastHashJoin [i_item_sk#437], [ss_item_sk#416], Inner, BuildLeft, false
                                       :     :     :- BroadcastQueryStage 0
                                       :     :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=138952]
                                       :     :     :     +- *(1) Filter (((i_category#449 IN (Books                                             ,Electronics                                       ,Sports                                            ) AND i_class#447 IN (computers                                         ,stereo                                            ,football                                          )) OR (i_category#449 IN (Men                                               ,Jewelry                                           ,Women                                             ) AND i_class#447 IN (shirts                                            ,birdal                                            ,dresses                                           ))) AND isnotnull(i_item_sk#437))
                                       :     :     :        +- *(1) ColumnarToRow
                                       :     :     :           +- FileScan parquet default.item[i_item_sk#437,i_brand#445,i_class#447,i_category#449] Batched: true, DataFilters: [((i_category#449 IN (Books                                             ,Electronics             ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [Or(And(In(i_category, [Books                                             ,Electronics           ..., ReadSchema: struct<i_item_sk:int,i_brand:string,i_class:string,i_category:string>
                                       :     :     +- *(4) Filter ((isnotnull(ss_item_sk#416) AND isnotnull(ss_sold_date_sk#414)) AND isnotnull(ss_store_sk#421))
                                       :     :        +- *(4) ColumnarToRow
                                       :     :           +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_item_sk#416,ss_store_sk#421,ss_sales_price#427] Batched: true, DataFilters: [isnotnull(ss_item_sk#416), isnotnull(ss_sold_date_sk#414), isnotnull(ss_store_sk#421)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_store_sk:int,ss_sales_price:decimal(7,2)>
                                       :     +- BroadcastQueryStage 1
                                       :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=138971]
                                       :           +- *(2) Project [d_date_sk#24, d_moy#32]
                                       :              +- *(2) Filter ((isnotnull(d_year#30) AND (d_year#30 = 1999)) AND isnotnull(d_date_sk#24))
                                       :                 +- *(2) ColumnarToRow
                                       :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30,d_moy#32] Batched: true, DataFilters: [isnotnull(d_year#30), (d_year#30 = 1999), isnotnull(d_date_sk#24)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), EqualTo(d_year,1999), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                                       +- BroadcastQueryStage 2
                                          +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=138990]
                                             +- *(3) Filter isnotnull(s_store_sk#52)
                                                +- *(3) ColumnarToRow
                                                   +- FileScan parquet default.store[s_store_sk#52,s_store_name#57,s_company_name#69] Batched: true, DataFilters: [isnotnull(s_store_sk#52)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_name:string,s_company_name:string>

==== q90 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   *(10) Project [CheckOverflow((promote_precision(cast(amc#19449L as decimal(15,4))) / promote_precision(cast(pmc#19450L as decimal(15,4)))), DecimalType(35,20)) AS am_pm_ratio#19451]
   +- *(10) BroadcastNestedLoopJoin BuildRight, Inner
      :- *(10) HashAggregate(keys=[], functions=[count(1)], output=[amc#19449L])
      :  +- ShuffleQueryStage 8
      :     +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=140194]
      :        +- *(7) HashAggregate(keys=[], functions=[partial_count(1)], output=[count#19523L])
      :           +- *(7) Project
      :              +- *(7) BroadcastHashJoin [ws_web_page_sk#175], [wp_web_page_sk#17548], Inner, BuildRight, false
      :                 :- *(7) Project [ws_web_page_sk#175]
      :                 :  +- *(7) BroadcastHashJoin [ws_sold_time_sk#164], [t_time_sk#15635], Inner, BuildRight, false
      :                 :     :- *(7) Project [ws_sold_time_sk#164, ws_web_page_sk#175]
      :                 :     :  +- *(7) BroadcastHashJoin [ws_ship_hdemo_sk#173], [hd_demo_sk#5552], Inner, BuildRight, false
      :                 :     :     :- *(7) Filter ((isnotnull(ws_ship_hdemo_sk#173) AND isnotnull(ws_sold_time_sk#164)) AND isnotnull(ws_web_page_sk#175))
      :                 :     :     :  +- *(7) ColumnarToRow
      :                 :     :     :     +- FileScan parquet default.web_sales[ws_sold_time_sk#164,ws_ship_hdemo_sk#173,ws_web_page_sk#175] Batched: true, DataFilters: [isnotnull(ws_ship_hdemo_sk#173), isnotnull(ws_sold_time_sk#164), isnotnull(ws_web_page_sk#175)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_ship_hdemo_sk), IsNotNull(ws_sold_time_sk), IsNotNull(ws_web_page_sk)], ReadSchema: struct<ws_sold_time_sk:int,ws_ship_hdemo_sk:int,ws_web_page_sk:int>
      :                 :     :     +- BroadcastQueryStage 0
      :                 :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=139575]
      :                 :     :           +- *(1) Project [hd_demo_sk#5552]
      :                 :     :              +- *(1) Filter ((isnotnull(hd_dep_count#5555) AND (hd_dep_count#5555 = 6)) AND isnotnull(hd_demo_sk#5552))
      :                 :     :                 +- *(1) ColumnarToRow
      :                 :     :                    +- FileScan parquet default.household_demographics[hd_demo_sk#5552,hd_dep_count#5555] Batched: true, DataFilters: [isnotnull(hd_dep_count#5555), (hd_dep_count#5555 = 6), isnotnull(hd_demo_sk#5552)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/household_demographics], PartitionFilters: [], PushedFilters: [IsNotNull(hd_dep_count), EqualTo(hd_dep_count,6), IsNotNull(hd_demo_sk)], ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int>
      :                 :     +- BroadcastQueryStage 1
      :                 :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=139596]
      :                 :           +- *(2) Project [t_time_sk#15635]
      :                 :              +- *(2) Filter (((isnotnull(t_hour#15638) AND (t_hour#15638 >= 8)) AND (t_hour#15638 <= 9)) AND isnotnull(t_time_sk#15635))
      :                 :                 +- *(2) ColumnarToRow
      :                 :                    +- FileScan parquet default.time_dim[t_time_sk#15635,t_hour#15638] Batched: true, DataFilters: [isnotnull(t_hour#15638), (t_hour#15638 >= 8), (t_hour#15638 <= 9), isnotnull(t_time_sk#15635)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), GreaterThanOrEqual(t_hour,8), LessThanOrEqual(t_hour,9), IsNotNull(t_time_sk)], ReadSchema: struct<t_time_sk:int,t_hour:int>
      :                 +- BroadcastQueryStage 2
      :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=139617]
      :                       +- *(3) Project [wp_web_page_sk#17548]
      :                          +- *(3) Filter (((isnotnull(wp_char_count#17558) AND (wp_char_count#17558 >= 5000)) AND (wp_char_count#17558 <= 5200)) AND isnotnull(wp_web_page_sk#17548))
      :                             +- *(3) ColumnarToRow
      :                                +- FileScan parquet default.web_page[wp_web_page_sk#17548,wp_char_count#17558] Batched: true, DataFilters: [isnotnull(wp_char_count#17558), (wp_char_count#17558 >= 5000), (wp_char_count#17558 <= 5200), is..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_page], PartitionFilters: [], PushedFilters: [IsNotNull(wp_char_count), GreaterThanOrEqual(wp_char_count,5000), LessThanOrEqual(wp_char_count,..., ReadSchema: struct<wp_web_page_sk:int,wp_char_count:int>
      +- BroadcastQueryStage 10
         +- BroadcastExchange IdentityBroadcastMode, [plan_id=140301]
            +- *(9) HashAggregate(keys=[], functions=[count(1)], output=[pmc#19450L])
               +- ShuffleQueryStage 9
                  +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=140243]
                     +- *(8) HashAggregate(keys=[], functions=[partial_count(1)], output=[count#19525L])
                        +- *(8) Project
                           +- *(8) BroadcastHashJoin [ws_web_page_sk#19466], [wp_web_page_sk#19503], Inner, BuildRight, false
                              :- *(8) Project [ws_web_page_sk#19466]
                              :  +- *(8) BroadcastHashJoin [ws_sold_time_sk#19455], [t_time_sk#19493], Inner, BuildRight, false
                              :     :- *(8) Project [ws_sold_time_sk#19455, ws_web_page_sk#19466]
                              :     :  +- *(8) BroadcastHashJoin [ws_ship_hdemo_sk#19464], [hd_demo_sk#19488], Inner, BuildRight, false
                              :     :     :- *(8) Filter ((isnotnull(ws_ship_hdemo_sk#19464) AND isnotnull(ws_sold_time_sk#19455)) AND isnotnull(ws_web_page_sk#19466))
                              :     :     :  +- *(8) ColumnarToRow
                              :     :     :     +- FileScan parquet default.web_sales[ws_sold_time_sk#19455,ws_ship_hdemo_sk#19464,ws_web_page_sk#19466] Batched: true, DataFilters: [isnotnull(ws_ship_hdemo_sk#19464), isnotnull(ws_sold_time_sk#19455), isnotnull(ws_web_page_sk#19..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_ship_hdemo_sk), IsNotNull(ws_sold_time_sk), IsNotNull(ws_web_page_sk)], ReadSchema: struct<ws_sold_time_sk:int,ws_ship_hdemo_sk:int,ws_web_page_sk:int>
                              :     :     +- BroadcastQueryStage 4
                              :     :        +- ReusedExchange [hd_demo_sk#19488], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=139575]
                              :     +- BroadcastQueryStage 5
                              :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=139702]
                              :           +- *(5) Project [t_time_sk#19493]
                              :              +- *(5) Filter (((isnotnull(t_hour#19496) AND (t_hour#19496 >= 19)) AND (t_hour#19496 <= 20)) AND isnotnull(t_time_sk#19493))
                              :                 +- *(5) ColumnarToRow
                              :                    +- FileScan parquet default.time_dim[t_time_sk#19493,t_hour#19496] Batched: true, DataFilters: [isnotnull(t_hour#19496), (t_hour#19496 >= 19), (t_hour#19496 <= 20), isnotnull(t_time_sk#19493)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), GreaterThanOrEqual(t_hour,19), LessThanOrEqual(t_hour,20), IsNotNull(t_time_sk)], ReadSchema: struct<t_time_sk:int,t_hour:int>
                              +- BroadcastQueryStage 7
                                 +- ReusedExchange [wp_web_page_sk#19503], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=139617]


==== q91 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   *(8) HashAggregate(keys=[cc_call_center_id#7121, cc_name#7126, cc_manager#7131, cd_marital_status#3635, cd_education_status#3636], functions=[sum(UnscaledValue(cr_net_loss#3317))], output=[Call_Center#19526, Call_Center_Name#19527, Manager#19528, Returns_Loss#19529])
   +- ShuffleQueryStage 6
      +- Exchange hashpartitioning(cc_call_center_id#7121, cc_name#7126, cc_manager#7131, cd_marital_status#3635, cd_education_status#3636, 20), ENSURE_REQUIREMENTS, [plan_id=141220]
         +- *(7) HashAggregate(keys=[cc_call_center_id#7121, cc_name#7126, cc_manager#7131, cd_marital_status#3635, cd_education_status#3636], functions=[partial_sum(UnscaledValue(cr_net_loss#3317))], output=[cc_call_center_id#7121, cc_name#7126, cc_manager#7131, cd_marital_status#3635, cd_education_status#3636, sum#19537L])
            +- *(7) Project [cc_call_center_id#7121, cc_name#7126, cc_manager#7131, cr_net_loss#3317, cd_marital_status#3635, cd_education_status#3636]
               +- *(7) BroadcastHashJoin [c_current_hdemo_sk#84], [hd_demo_sk#5552], Inner, BuildRight, false
                  :- *(7) Project [cc_call_center_id#7121, cc_name#7126, cc_manager#7131, cr_net_loss#3317, c_current_hdemo_sk#84, cd_marital_status#3635, cd_education_status#3636]
                  :  +- *(7) BroadcastHashJoin [c_current_cdemo_sk#83], [cd_demo_sk#3633], Inner, BuildRight, false
                  :     :- *(7) Project [cc_call_center_id#7121, cc_name#7126, cc_manager#7131, cr_net_loss#3317, c_current_cdemo_sk#83, c_current_hdemo_sk#84]
                  :     :  +- *(7) BroadcastHashJoin [c_current_addr_sk#85], [ca_address_sk#3717], Inner, BuildRight, false
                  :     :     :- *(7) Project [cc_call_center_id#7121, cc_name#7126, cc_manager#7131, cr_net_loss#3317, c_current_cdemo_sk#83, c_current_hdemo_sk#84, c_current_addr_sk#85]
                  :     :     :  +- *(7) BroadcastHashJoin [cr_returning_customer_sk#3298], [c_customer_sk#81], Inner, BuildRight, false
                  :     :     :     :- *(7) Project [cc_call_center_id#7121, cc_name#7126, cc_manager#7131, cr_returning_customer_sk#3298, cr_net_loss#3317]
                  :     :     :     :  +- *(7) BroadcastHashJoin [cr_returned_date_sk#3291], [d_date_sk#24], Inner, BuildRight, false
                  :     :     :     :     :- *(7) Project [cc_call_center_id#7121, cc_name#7126, cc_manager#7131, cr_returned_date_sk#3291, cr_returning_customer_sk#3298, cr_net_loss#3317]
                  :     :     :     :     :  +- *(7) BroadcastHashJoin [cc_call_center_sk#7120], [cr_call_center_sk#3302], Inner, BuildLeft, false
                  :     :     :     :     :     :- BroadcastQueryStage 0
                  :     :     :     :     :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=140557]
                  :     :     :     :     :     :     +- *(1) Filter isnotnull(cc_call_center_sk#7120)
                  :     :     :     :     :     :        +- *(1) ColumnarToRow
                  :     :     :     :     :     :           +- FileScan parquet default.call_center[cc_call_center_sk#7120,cc_call_center_id#7121,cc_name#7126,cc_manager#7131] Batched: true, DataFilters: [isnotnull(cc_call_center_sk#7120)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/call_center], PartitionFilters: [], PushedFilters: [IsNotNull(cc_call_center_sk)], ReadSchema: struct<cc_call_center_sk:int,cc_call_center_id:string,cc_name:string,cc_manager:string>
                  :     :     :     :     :     +- *(7) Filter ((isnotnull(cr_call_center_sk#3302) AND isnotnull(cr_returned_date_sk#3291)) AND isnotnull(cr_returning_customer_sk#3298))
                  :     :     :     :     :        +- *(7) ColumnarToRow
                  :     :     :     :     :           +- FileScan parquet default.catalog_returns[cr_returned_date_sk#3291,cr_returning_customer_sk#3298,cr_call_center_sk#3302,cr_net_loss#3317] Batched: true, DataFilters: [isnotnull(cr_call_center_sk#3302), isnotnull(cr_returned_date_sk#3291), isnotnull(cr_returning_c..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_returns], PartitionFilters: [], PushedFilters: [IsNotNull(cr_call_center_sk), IsNotNull(cr_returned_date_sk), IsNotNull(cr_returning_customer_sk)], ReadSchema: struct<cr_returned_date_sk:int,cr_returning_customer_sk:int,cr_call_center_sk:int,cr_net_loss:dec...
                  :     :     :     :     +- BroadcastQueryStage 1
                  :     :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=140576]
                  :     :     :     :           +- *(2) Project [d_date_sk#24]
                  :     :     :     :              +- *(2) Filter ((((isnotnull(d_year#30) AND isnotnull(d_moy#32)) AND (d_year#30 = 1998)) AND (d_moy#32 = 11)) AND isnotnull(d_date_sk#24))
                  :     :     :     :                 +- *(2) ColumnarToRow
                  :     :     :     :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_year#30,d_moy#32] Batched: true, DataFilters: [isnotnull(d_year#30), isnotnull(d_moy#32), (d_year#30 = 1998), (d_moy#32 = 11), isnotnull(d_date..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_year), IsNotNull(d_moy), EqualTo(d_year,1998), EqualTo(d_moy,11), IsNotNull(d_date_sk)], ReadSchema: struct<d_date_sk:int,d_year:int,d_moy:int>
                  :     :     :     +- BroadcastQueryStage 2
                  :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=140595]
                  :     :     :           +- *(3) Filter (((isnotnull(c_customer_sk#81) AND isnotnull(c_current_addr_sk#85)) AND isnotnull(c_current_cdemo_sk#83)) AND isnotnull(c_current_hdemo_sk#84))
                  :     :     :              +- *(3) ColumnarToRow
                  :     :     :                 +- FileScan parquet default.customer[c_customer_sk#81,c_current_cdemo_sk#83,c_current_hdemo_sk#84,c_current_addr_sk#85] Batched: true, DataFilters: [isnotnull(c_customer_sk#81), isnotnull(c_current_addr_sk#85), isnotnull(c_current_cdemo_sk#83), ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer], PartitionFilters: [], PushedFilters: [IsNotNull(c_customer_sk), IsNotNull(c_current_addr_sk), IsNotNull(c_current_cdemo_sk), IsNotNull..., ReadSchema: struct<c_customer_sk:int,c_current_cdemo_sk:int,c_current_hdemo_sk:int,c_current_addr_sk:int>
                  :     :     +- BroadcastQueryStage 3
                  :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=140614]
                  :     :           +- *(4) Project [ca_address_sk#3717]
                  :     :              +- *(4) Filter ((isnotnull(ca_gmt_offset#3728) AND (ca_gmt_offset#3728 = -7.00)) AND isnotnull(ca_address_sk#3717))
                  :     :                 +- *(4) ColumnarToRow
                  :     :                    +- FileScan parquet default.customer_address[ca_address_sk#3717,ca_gmt_offset#3728] Batched: true, DataFilters: [isnotnull(ca_gmt_offset#3728), (ca_gmt_offset#3728 = -7.00), isnotnull(ca_address_sk#3717)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_gmt_offset), EqualTo(ca_gmt_offset,-7.00), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_gmt_offset:decimal(5,2)>
                  :     +- BroadcastQueryStage 4
                  :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=140633]
                  :           +- *(5) Filter ((((cd_marital_status#3635 = M) AND (cd_education_status#3636 = Unknown             )) OR ((cd_marital_status#3635 = W) AND (cd_education_status#3636 = Advanced Degree     ))) AND isnotnull(cd_demo_sk#3633))
                  :              +- *(5) ColumnarToRow
                  :                 +- FileScan parquet default.customer_demographics[cd_demo_sk#3633,cd_marital_status#3635,cd_education_status#3636] Batched: true, DataFilters: [(((cd_marital_status#3635 = M) AND (cd_education_status#3636 = Unknown             )) OR ((cd_ma..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer_demographics], PartitionFilters: [], PushedFilters: [Or(And(EqualTo(cd_marital_status,M),EqualTo(cd_education_status,Unknown             )),And(Equal..., ReadSchema: struct<cd_demo_sk:int,cd_marital_status:string,cd_education_status:string>
                  +- BroadcastQueryStage 5
                     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=140652]
                        +- *(6) Project [hd_demo_sk#5552]
                           +- *(6) Filter ((isnotnull(hd_buy_potential#5554) AND StartsWith(hd_buy_potential#5554, Unknown)) AND isnotnull(hd_demo_sk#5552))
                              +- *(6) ColumnarToRow
                                 +- FileScan parquet default.household_demographics[hd_demo_sk#5552,hd_buy_potential#5554] Batched: true, DataFilters: [isnotnull(hd_buy_potential#5554), StartsWith(hd_buy_potential#5554, Unknown), isnotnull(hd_demo_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/household_demographics], PartitionFilters: [], PushedFilters: [IsNotNull(hd_buy_potential), StringStartsWith(hd_buy_potential,Unknown), IsNotNull(hd_demo_sk)], ReadSchema: struct<hd_demo_sk:int,hd_buy_potential:string>

==== q92 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   *(7) HashAggregate(keys=[], functions=[sum(UnscaledValue(ws_ext_discount_amt#185))], output=[Excess Discount Amount #19543])
   +- ShuffleQueryStage 7
      +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=141937]
         +- *(6) HashAggregate(keys=[], functions=[partial_sum(UnscaledValue(ws_ext_discount_amt#185))], output=[sum#19613L])
            +- *(6) Project [ws_ext_discount_amt#185]
               +- *(6) BroadcastHashJoin [ws_sold_date_sk#163], [d_date_sk#24], Inner, BuildRight, false
                  :- *(6) Project [ws_sold_date_sk#163, ws_ext_discount_amt#185]
                  :  +- *(6) BroadcastHashJoin [i_item_sk#437], [ws_item_sk#19550], Inner, BuildLeft, (cast(ws_ext_discount_amt#185 as decimal(14,7)) > (1.3 * avg(ws_ext_discount_amt))#19546), false
                  :     :- BroadcastQueryStage 6
                  :     :  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[2, int, true] as bigint)),false), [plan_id=141850]
                  :     :     +- AQEShuffleRead local
                  :     :        +- ShuffleQueryStage 4
                  :     :           +- Exchange hashpartitioning(i_item_sk#437, 20), ENSURE_REQUIREMENTS, [plan_id=141657]
                  :     :              +- *(4) Project [ws_sold_date_sk#163, ws_ext_discount_amt#185, i_item_sk#437]
                  :     :                 +- *(4) BroadcastHashJoin [ws_item_sk#166], [i_item_sk#437], Inner, BuildRight, false
                  :     :                    :- *(4) Filter ((isnotnull(ws_item_sk#166) AND isnotnull(ws_ext_discount_amt#185)) AND isnotnull(ws_sold_date_sk#163))
                  :     :                    :  +- *(4) ColumnarToRow
                  :     :                    :     +- FileScan parquet default.web_sales[ws_sold_date_sk#163,ws_item_sk#166,ws_ext_discount_amt#185] Batched: true, DataFilters: [isnotnull(ws_item_sk#166), isnotnull(ws_ext_discount_amt#185), isnotnull(ws_sold_date_sk#163)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_item_sk), IsNotNull(ws_ext_discount_amt), IsNotNull(ws_sold_date_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_ext_discount_amt:decimal(7,2)>
                  :     :                    +- BroadcastQueryStage 0
                  :     :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=141463]
                  :     :                          +- *(1) Project [i_item_sk#437]
                  :     :                             +- *(1) Filter ((isnotnull(i_manufact_id#450) AND (i_manufact_id#450 = 350)) AND isnotnull(i_item_sk#437))
                  :     :                                +- *(1) ColumnarToRow
                  :     :                                   +- FileScan parquet default.item[i_item_sk#437,i_manufact_id#450] Batched: true, DataFilters: [isnotnull(i_manufact_id#450), (i_manufact_id#450 = 350), isnotnull(i_item_sk#437)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [IsNotNull(i_manufact_id), EqualTo(i_manufact_id,350), IsNotNull(i_item_sk)], ReadSchema: struct<i_item_sk:int,i_manufact_id:int>
                  :     +- *(6) Filter isnotnull((1.3 * avg(ws_ext_discount_amt))#19546)
                  :        +- *(6) HashAggregate(keys=[ws_item_sk#19550], functions=[avg(UnscaledValue(ws_ext_discount_amt#19569))], output=[(1.3 * avg(ws_ext_discount_amt))#19546, ws_item_sk#19550])
                  :           +- ShuffleQueryStage 5
                  :              +- Exchange hashpartitioning(ws_item_sk#19550, 20), ENSURE_REQUIREMENTS, [plan_id=141773]
                  :                 +- *(5) HashAggregate(keys=[ws_item_sk#19550], functions=[partial_avg(UnscaledValue(ws_ext_discount_amt#19569))], output=[ws_item_sk#19550, sum#19616, count#19617L])
                  :                    +- *(5) Project [ws_item_sk#19550, ws_ext_discount_amt#19569]
                  :                       +- *(5) BroadcastHashJoin [ws_sold_date_sk#19547], [d_date_sk#19581], Inner, BuildRight, false
                  :                          :- *(5) Filter (isnotnull(ws_sold_date_sk#19547) AND isnotnull(ws_item_sk#19550))
                  :                          :  +- *(5) ColumnarToRow
                  :                          :     +- FileScan parquet default.web_sales[ws_sold_date_sk#19547,ws_item_sk#19550,ws_ext_discount_amt#19569] Batched: true, DataFilters: [isnotnull(ws_sold_date_sk#19547), isnotnull(ws_item_sk#19550)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_sold_date_sk), IsNotNull(ws_item_sk)], ReadSchema: struct<ws_sold_date_sk:int,ws_item_sk:int,ws_ext_discount_amt:decimal(7,2)>
                  :                          +- BroadcastQueryStage 1
                  :                             +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=141486]
                  :                                +- *(2) Project [d_date_sk#19581]
                  :                                   +- *(2) Filter (((isnotnull(d_date#19583) AND (d_date#19583 >= 2000-01-27)) AND (d_date#19583 <= 2000-04-26)) AND isnotnull(d_date_sk#19581))
                  :                                      +- *(2) ColumnarToRow
                  :                                         +- FileScan parquet default.date_dim[d_date_sk#19581,d_date#19583] Batched: true, DataFilters: [isnotnull(d_date#19583), (d_date#19583 >= 2000-01-27), (d_date#19583 <= 2000-04-26), isnotnull(d..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,2000-01-27), LessThanOrEqual(d_date,2000-04-26), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>
                  +- BroadcastQueryStage 3
                     +- ReusedExchange [d_date_sk#24], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=141486]

==== q93 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[sumsales#19635 ASC NULLS FIRST,ss_customer_sk#417 ASC NULLS FIRST], output=[ss_customer_sk#417,sumsales#19635])
   +- *(4) HashAggregate(keys=[ss_customer_sk#417], functions=[sum(act_sales#19634)], output=[ss_customer_sk#417, sumsales#19635])
      +- ShuffleQueryStage 2
         +- Exchange hashpartitioning(ss_customer_sk#417, 20), ENSURE_REQUIREMENTS, [plan_id=142178]
            +- *(3) HashAggregate(keys=[ss_customer_sk#417], functions=[partial_sum(act_sales#19634)], output=[ss_customer_sk#417, sum#19641, isEmpty#19642])
               +- *(3) Project [ss_customer_sk#417, CASE WHEN isnotnull(sr_return_quantity#14) THEN CheckOverflow((promote_precision(cast((ss_quantity#424 - sr_return_quantity#14) as decimal(12,2))) * promote_precision(cast(ss_sales_price#427 as decimal(12,2)))), DecimalType(18,2)) ELSE CheckOverflow((promote_precision(cast(ss_quantity#424 as decimal(12,2))) * promote_precision(cast(ss_sales_price#427 as decimal(12,2)))), DecimalType(18,2)) END AS act_sales#19634]
                  +- *(3) BroadcastHashJoin [sr_reason_sk#12], [r_reason_sk#3781], Inner, BuildRight, false
                     :- *(3) Project [ss_customer_sk#417, ss_quantity#424, ss_sales_price#427, sr_reason_sk#12, sr_return_quantity#14]
                     :  +- *(3) BroadcastHashJoin [ss_item_sk#416, ss_ticket_number#423], [sr_item_sk#6, sr_ticket_number#13], Inner, BuildRight, false
                     :     :- *(3) ColumnarToRow
                     :     :  +- FileScan parquet default.store_sales[ss_item_sk#416,ss_customer_sk#417,ss_ticket_number#423,ss_quantity#424,ss_sales_price#427] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<ss_item_sk:int,ss_customer_sk:int,ss_ticket_number:int,ss_quantity:int,ss_sales_price:deci...
                     :     +- BroadcastQueryStage 0
                     :        +- BroadcastExchange HashedRelationBroadcastMode(List((shiftleft(cast(input[0, int, false] as bigint), 32) | (cast(input[2, int, false] as bigint) & 4294967295))),false), [plan_id=142058]
                     :           +- *(1) Filter ((isnotnull(sr_item_sk#6) AND isnotnull(sr_ticket_number#13)) AND isnotnull(sr_reason_sk#12))
                     :              +- *(1) ColumnarToRow
                     :                 +- FileScan parquet default.store_returns[sr_item_sk#6,sr_reason_sk#12,sr_ticket_number#13,sr_return_quantity#14] Batched: true, DataFilters: [isnotnull(sr_item_sk#6), isnotnull(sr_ticket_number#13), isnotnull(sr_reason_sk#12)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_returns], PartitionFilters: [], PushedFilters: [IsNotNull(sr_item_sk), IsNotNull(sr_ticket_number), IsNotNull(sr_reason_sk)], ReadSchema: struct<sr_item_sk:int,sr_reason_sk:int,sr_ticket_number:int,sr_return_quantity:int>
                     +- BroadcastQueryStage 1
                        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=142077]
                           +- *(2) Project [r_reason_sk#3781]
                              +- *(2) Filter ((isnotnull(r_reason_desc#3783) AND (r_reason_desc#3783 = reason 28                                                                                           )) AND isnotnull(r_reason_sk#3781))
                                 +- *(2) ColumnarToRow
                                    +- FileScan parquet default.reason[r_reason_sk#3781,r_reason_desc#3783] Batched: true, DataFilters: [isnotnull(r_reason_desc#3783), (r_reason_desc#3783 = reason 28                                  ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/reason], PartitionFilters: [], PushedFilters: [IsNotNull(r_reason_desc), EqualTo(r_reason_desc,reason 28                                       ..., ReadSchema: struct<r_reason_sk:int,r_reason_desc:string>


==== q94 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   *(8) HashAggregate(keys=[], functions=[sum(UnscaledValue(ws_ext_ship_cost#191)), sum(UnscaledValue(ws_net_profit#196)), count(distinct ws_order_number#180)], output=[order count #19649L, total shipping cost #19650, total net profit #19651])
   +- ShuffleQueryStage 6
      +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=143055]
         +- *(7) HashAggregate(keys=[], functions=[merge_sum(UnscaledValue(ws_ext_ship_cost#191)), merge_sum(UnscaledValue(ws_net_profit#196)), partial_count(distinct ws_order_number#180)], output=[sum#19696L, sum#19698L, count#19701L])
            +- *(7) HashAggregate(keys=[ws_order_number#180], functions=[merge_sum(UnscaledValue(ws_ext_ship_cost#191)), merge_sum(UnscaledValue(ws_net_profit#196))], output=[ws_order_number#180, sum#19696L, sum#19698L])
               +- ShuffleQueryStage 5
                  +- Exchange hashpartitioning(ws_order_number#180, 20), ENSURE_REQUIREMENTS, [plan_id=143007]
                     +- *(6) HashAggregate(keys=[ws_order_number#180], functions=[partial_sum(UnscaledValue(ws_ext_ship_cost#191)), partial_sum(UnscaledValue(ws_net_profit#196))], output=[ws_order_number#180, sum#19696L, sum#19698L])
                        +- *(6) Project [ws_order_number#180, ws_ext_ship_cost#191, ws_net_profit#196]
                           +- *(6) BroadcastHashJoin [ws_web_site_sk#176], [web_site_sk#3351], Inner, BuildRight, false
                              :- *(6) Project [ws_web_site_sk#176, ws_order_number#180, ws_ext_ship_cost#191, ws_net_profit#196]
                              :  +- *(6) BroadcastHashJoin [ws_ship_addr_sk#174], [ca_address_sk#3717], Inner, BuildRight, false
                              :     :- *(6) Project [ws_ship_addr_sk#174, ws_web_site_sk#176, ws_order_number#180, ws_ext_ship_cost#191, ws_net_profit#196]
                              :     :  +- *(6) BroadcastHashJoin [ws_ship_date_sk#165], [d_date_sk#24], Inner, BuildRight, false
                              :     :     :- *(6) BroadcastHashJoin [ws_order_number#180], [wr_order_number#3340], LeftAnti, BuildRight, false
                              :     :     :  :- *(6) Project [ws_ship_date_sk#165, ws_ship_addr_sk#174, ws_web_site_sk#176, ws_order_number#180, ws_ext_ship_cost#191, ws_net_profit#196]
                              :     :     :  :  +- *(6) BroadcastHashJoin [ws_order_number#180], [ws_order_number#19671], LeftSemi, BuildRight, NOT (ws_warehouse_sk#178 = ws_warehouse_sk#19669), false
                              :     :     :  :     :- *(6) Filter ((isnotnull(ws_ship_date_sk#165) AND isnotnull(ws_ship_addr_sk#174)) AND isnotnull(ws_web_site_sk#176))
                              :     :     :  :     :  +- *(6) ColumnarToRow
                              :     :     :  :     :     +- FileScan parquet default.web_sales[ws_ship_date_sk#165,ws_ship_addr_sk#174,ws_web_site_sk#176,ws_warehouse_sk#178,ws_order_number#180,ws_ext_ship_cost#191,ws_net_profit#196] Batched: true, DataFilters: [isnotnull(ws_ship_date_sk#165), isnotnull(ws_ship_addr_sk#174), isnotnull(ws_web_site_sk#176)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_ship_date_sk), IsNotNull(ws_ship_addr_sk), IsNotNull(ws_web_site_sk)], ReadSchema: struct<ws_ship_date_sk:int,ws_ship_addr_sk:int,ws_web_site_sk:int,ws_warehouse_sk:int,ws_order_nu...
                              :     :     :  :     +- BroadcastQueryStage 0
                              :     :     :  :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[1, int, true] as bigint)),false), [plan_id=142391]
                              :     :     :  :           +- *(1) ColumnarToRow
                              :     :     :  :              +- FileScan parquet default.web_sales[ws_warehouse_sk#19669,ws_order_number#19671] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<ws_warehouse_sk:int,ws_order_number:int>
                              :     :     :  +- BroadcastQueryStage 1
                              :     :     :     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=142404]
                              :     :     :        +- *(2) ColumnarToRow
                              :     :     :           +- FileScan parquet default.web_returns[wr_order_number#3340] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_returns], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<wr_order_number:int>
                              :     :     +- BroadcastQueryStage 2
                              :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=142420]
                              :     :           +- *(3) Project [d_date_sk#24]
                              :     :              +- *(3) Filter (((isnotnull(d_date#26) AND (d_date#26 >= 1999-02-01)) AND (d_date#26 <= 1999-04-02)) AND isnotnull(d_date_sk#24))
                              :     :                 +- *(3) ColumnarToRow
                              :     :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_date#26] Batched: true, DataFilters: [isnotnull(d_date#26), (d_date#26 >= 1999-02-01), (d_date#26 <= 1999-04-02), isnotnull(d_date_sk#..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,1999-02-01), LessThanOrEqual(d_date,1999-04-02), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>
                              :     +- BroadcastQueryStage 3
                              :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=142441]
                              :           +- *(4) Project [ca_address_sk#3717]
                              :              +- *(4) Filter ((isnotnull(ca_state#3725) AND (ca_state#3725 = IL)) AND isnotnull(ca_address_sk#3717))
                              :                 +- *(4) ColumnarToRow
                              :                    +- FileScan parquet default.customer_address[ca_address_sk#3717,ca_state#3725] Batched: true, DataFilters: [isnotnull(ca_state#3725), (ca_state#3725 = IL), isnotnull(ca_address_sk#3717)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_state), EqualTo(ca_state,IL), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_state:string>
                              +- BroadcastQueryStage 4
                                 +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=142462]
                                    +- *(5) Project [web_site_sk#3351]
                                       +- *(5) Filter ((isnotnull(web_company_name#3365) AND (web_company_name#3365 = pri                                               )) AND isnotnull(web_site_sk#3351))
                                          +- *(5) ColumnarToRow
                                             +- FileScan parquet default.web_site[web_site_sk#3351,web_company_name#3365] Batched: true, DataFilters: [isnotnull(web_company_name#3365), (web_company_name#3365 = pri                                  ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_site], PartitionFilters: [], PushedFilters: [IsNotNull(web_company_name), EqualTo(web_company_name,pri                                       ..., ReadSchema: struct<web_site_sk:int,web_company_name:string>

==== q95 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   *(15) HashAggregate(keys=[], functions=[sum(UnscaledValue(ws_ext_ship_cost#19852)), sum(UnscaledValue(ws_net_profit#19857)), count(distinct ws_order_number#19841)], output=[order count #19783L, total shipping cost #19784, total net profit #19785])
   +- ShuffleQueryStage 10
      +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=144744]
         +- *(14) HashAggregate(keys=[], functions=[merge_sum(UnscaledValue(ws_ext_ship_cost#19852)), merge_sum(UnscaledValue(ws_net_profit#19857)), partial_count(distinct ws_order_number#19841)], output=[sum#19868L, sum#19870L, count#19873L])
            +- *(14) HashAggregate(keys=[ws_order_number#19841], functions=[merge_sum(UnscaledValue(ws_ext_ship_cost#19852)), merge_sum(UnscaledValue(ws_net_profit#19857))], output=[ws_order_number#19841, sum#19868L, sum#19870L])
               +- *(14) HashAggregate(keys=[ws_order_number#19841], functions=[partial_sum(UnscaledValue(ws_ext_ship_cost#19852)), partial_sum(UnscaledValue(ws_net_profit#19857))], output=[ws_order_number#19841, sum#19868L, sum#19870L])
                  +- *(14) Project [ws_order_number#19841, ws_ext_ship_cost#19852, ws_net_profit#19857]
                     +- *(14) BroadcastHashJoin [ws_web_site_sk#19837], [web_site_sk#3351], Inner, BuildRight, false
                        :- *(14) Project [ws_web_site_sk#19837, ws_order_number#19841, ws_ext_ship_cost#19852, ws_net_profit#19857]
                        :  +- *(14) BroadcastHashJoin [ws_ship_addr_sk#19835], [ca_address_sk#3717], Inner, BuildRight, false
                        :     :- *(14) Project [ws_ship_addr_sk#19835, ws_web_site_sk#19837, ws_order_number#19841, ws_ext_ship_cost#19852, ws_net_profit#19857]
                        :     :  +- *(14) BroadcastHashJoin [ws_ship_date_sk#19826], [d_date_sk#24], Inner, BuildRight, false
                        :     :     :- *(14) SortMergeJoin [ws_order_number#19841], [wr_order_number#3340], LeftSemi
                        :     :     :  :- *(12) SortMergeJoin [ws_order_number#19841], [ws_order_number#180], LeftSemi
                        :     :     :  :  :- *(10) Sort [ws_order_number#19841 ASC NULLS FIRST], false, 0
                        :     :     :  :  :  +- ShuffleQueryStage 0
                        :     :     :  :  :     +- Exchange hashpartitioning(ws_order_number#19841, 20), ENSURE_REQUIREMENTS, [plan_id=143361]
                        :     :     :  :  :        +- *(1) Filter ((isnotnull(ws_ship_date_sk#19826) AND isnotnull(ws_ship_addr_sk#19835)) AND isnotnull(ws_web_site_sk#19837))
                        :     :     :  :  :           +- *(1) ColumnarToRow
                        :     :     :  :  :              +- FileScan parquet default.web_sales[ws_ship_date_sk#19826,ws_ship_addr_sk#19835,ws_web_site_sk#19837,ws_order_number#19841,ws_ext_ship_cost#19852,ws_net_profit#19857] Batched: true, DataFilters: [isnotnull(ws_ship_date_sk#19826), isnotnull(ws_ship_addr_sk#19835), isnotnull(ws_web_site_sk#198..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_ship_date_sk), IsNotNull(ws_ship_addr_sk), IsNotNull(ws_web_site_sk)], ReadSchema: struct<ws_ship_date_sk:int,ws_ship_addr_sk:int,ws_web_site_sk:int,ws_order_number:int,ws_ext_ship...
                        :     :     :  :  +- *(11) Sort [ws_order_number#180 ASC NULLS FIRST], false, 0
                        :     :     :  :     +- ShuffleQueryStage 8
                        :     :     :  :        +- Exchange hashpartitioning(ws_order_number#180, 20), ENSURE_REQUIREMENTS, [plan_id=144170]
                        :     :     :  :           +- *(8) Project [ws_order_number#180]
                        :     :     :  :              +- *(8) BroadcastHashJoin [ws_order_number#180], [ws_order_number#19807], Inner, BuildRight, NOT (ws_warehouse_sk#178 = ws_warehouse_sk#19805), false
                        :     :     :  :                 :- *(8) Filter (isnotnull(ws_order_number#180) AND isnotnull(ws_warehouse_sk#178))
                        :     :     :  :                 :  +- *(8) ColumnarToRow
                        :     :     :  :                 :     +- FileScan parquet default.web_sales[ws_warehouse_sk#178,ws_order_number#180] Batched: true, DataFilters: [isnotnull(ws_order_number#180), isnotnull(ws_warehouse_sk#178)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_order_number), IsNotNull(ws_warehouse_sk)], ReadSchema: struct<ws_warehouse_sk:int,ws_order_number:int>
                        :     :     :  :                 +- BroadcastQueryStage 1
                        :     :     :  :                    +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[1, int, false] as bigint)),false), [plan_id=143378]
                        :     :     :  :                       +- *(2) Filter (isnotnull(ws_order_number#19807) AND isnotnull(ws_warehouse_sk#19805))
                        :     :     :  :                          +- *(2) ColumnarToRow
                        :     :     :  :                             +- FileScan parquet default.web_sales[ws_warehouse_sk#19805,ws_order_number#19807] Batched: true, DataFilters: [isnotnull(ws_order_number#19807), isnotnull(ws_warehouse_sk#19805)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_order_number), IsNotNull(ws_warehouse_sk)], ReadSchema: struct<ws_warehouse_sk:int,ws_order_number:int>
                        :     :     :  +- *(13) Sort [wr_order_number#3340 ASC NULLS FIRST], false, 0
                        :     :     :     +- ShuffleQueryStage 9
                        :     :     :        +- Exchange hashpartitioning(wr_order_number#3340, 20), ENSURE_REQUIREMENTS, [plan_id=144497]
                        :     :     :           +- *(9) Project [wr_order_number#3340]
                        :     :     :              +- *(9) BroadcastHashJoin [wr_order_number#3340], [ws_order_number#180], Inner, BuildLeft, false
                        :     :     :                 :- BroadcastQueryStage 2
                        :     :     :                 :  +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=143398]
                        :     :     :                 :     +- *(3) Filter isnotnull(wr_order_number#3340)
                        :     :     :                 :        +- *(3) ColumnarToRow
                        :     :     :                 :           +- FileScan parquet default.web_returns[wr_order_number#3340] Batched: true, DataFilters: [isnotnull(wr_order_number#3340)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_returns], PartitionFilters: [], PushedFilters: [IsNotNull(wr_order_number)], ReadSchema: struct<wr_order_number:int>
                        :     :     :                 +- *(9) Project [ws_order_number#180]
                        :     :     :                    +- *(9) BroadcastHashJoin [ws_order_number#180], [ws_order_number#19807], Inner, BuildRight, NOT (ws_warehouse_sk#178 = ws_warehouse_sk#19805), false
                        :     :     :                       :- *(9) Filter (isnotnull(ws_order_number#180) AND isnotnull(ws_warehouse_sk#178))
                        :     :     :                       :  +- *(9) ColumnarToRow
                        :     :     :                       :     +- FileScan parquet default.web_sales[ws_warehouse_sk#178,ws_order_number#180] Batched: true, DataFilters: [isnotnull(ws_order_number#180), isnotnull(ws_warehouse_sk#178)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ws_order_number), IsNotNull(ws_warehouse_sk)], ReadSchema: struct<ws_warehouse_sk:int,ws_order_number:int>
                        :     :     :                       +- BroadcastQueryStage 4
                        :     :     :                          +- ReusedExchange [ws_warehouse_sk#19805, ws_order_number#19807], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[1, int, false] as bigint)),false), [plan_id=143378]
                        :     :     +- BroadcastQueryStage 5
                        :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=143439]
                        :     :           +- *(5) Project [d_date_sk#24]
                        :     :              +- *(5) Filter (((isnotnull(d_date#26) AND (d_date#26 >= 1999-02-01)) AND (d_date#26 <= 1999-04-02)) AND isnotnull(d_date_sk#24))
                        :     :                 +- *(5) ColumnarToRow
                        :     :                    +- FileScan parquet default.date_dim[d_date_sk#24,d_date#26] Batched: true, DataFilters: [isnotnull(d_date#26), (d_date#26 >= 1999-02-01), (d_date#26 <= 1999-04-02), isnotnull(d_date_sk#..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,1999-02-01), LessThanOrEqual(d_date,1999-04-02), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>
                        :     +- BroadcastQueryStage 6
                        :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=143460]
                        :           +- *(6) Project [ca_address_sk#3717]
                        :              +- *(6) Filter ((isnotnull(ca_state#3725) AND (ca_state#3725 = IL)) AND isnotnull(ca_address_sk#3717))
                        :                 +- *(6) ColumnarToRow
                        :                    +- FileScan parquet default.customer_address[ca_address_sk#3717,ca_state#3725] Batched: true, DataFilters: [isnotnull(ca_state#3725), (ca_state#3725 = IL), isnotnull(ca_address_sk#3717)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/customer_address], PartitionFilters: [], PushedFilters: [IsNotNull(ca_state), EqualTo(ca_state,IL), IsNotNull(ca_address_sk)], ReadSchema: struct<ca_address_sk:int,ca_state:string>
                        +- BroadcastQueryStage 7
                           +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=143481]
                              +- *(7) Project [web_site_sk#3351]
                                 +- *(7) Filter ((isnotnull(web_company_name#3365) AND (web_company_name#3365 = pri                                               )) AND isnotnull(web_site_sk#3351))
                                    +- *(7) ColumnarToRow
                                       +- FileScan parquet default.web_site[web_site_sk#3351,web_company_name#3365] Batched: true, DataFilters: [isnotnull(web_company_name#3365), (web_company_name#3365 = pri                                  ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/web_site], PartitionFilters: [], PushedFilters: [IsNotNull(web_company_name), EqualTo(web_company_name,pri                                       ..., ReadSchema: struct<web_site_sk:int,web_company_name:string>

==== q96 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   *(5) HashAggregate(keys=[], functions=[count(1)], output=[count(1)#19995L])
   +- ShuffleQueryStage 3
      +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=145149]
         +- *(4) HashAggregate(keys=[], functions=[partial_count(1)], output=[count#19998L])
            +- *(4) Project
               +- *(4) BroadcastHashJoin [ss_store_sk#421], [s_store_sk#52], Inner, BuildRight, false
                  :- *(4) Project [ss_store_sk#421]
                  :  +- *(4) BroadcastHashJoin [ss_sold_time_sk#415], [t_time_sk#15635], Inner, BuildRight, false
                  :     :- *(4) Project [ss_sold_time_sk#415, ss_store_sk#421]
                  :     :  +- *(4) BroadcastHashJoin [ss_hdemo_sk#419], [hd_demo_sk#5552], Inner, BuildRight, false
                  :     :     :- *(4) Filter ((isnotnull(ss_hdemo_sk#419) AND isnotnull(ss_sold_time_sk#415)) AND isnotnull(ss_store_sk#421))
                  :     :     :  +- *(4) ColumnarToRow
                  :     :     :     +- FileScan parquet default.store_sales[ss_sold_time_sk#415,ss_hdemo_sk#419,ss_store_sk#421] Batched: true, DataFilters: [isnotnull(ss_hdemo_sk#419), isnotnull(ss_sold_time_sk#415), isnotnull(ss_store_sk#421)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_hdemo_sk), IsNotNull(ss_sold_time_sk), IsNotNull(ss_store_sk)], ReadSchema: struct<ss_sold_time_sk:int,ss_hdemo_sk:int,ss_store_sk:int>
                  :     :     +- BroadcastQueryStage 0
                  :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=144925]
                  :     :           +- *(1) Project [hd_demo_sk#5552]
                  :     :              +- *(1) Filter ((isnotnull(hd_dep_count#5555) AND (hd_dep_count#5555 = 7)) AND isnotnull(hd_demo_sk#5552))
                  :     :                 +- *(1) ColumnarToRow
                  :     :                    +- FileScan parquet default.household_demographics[hd_demo_sk#5552,hd_dep_count#5555] Batched: true, DataFilters: [isnotnull(hd_dep_count#5555), (hd_dep_count#5555 = 7), isnotnull(hd_demo_sk#5552)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/household_demographics], PartitionFilters: [], PushedFilters: [IsNotNull(hd_dep_count), EqualTo(hd_dep_count,7), IsNotNull(hd_demo_sk)], ReadSchema: struct<hd_demo_sk:int,hd_dep_count:int>
                  :     +- BroadcastQueryStage 1
                  :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=144946]
                  :           +- *(2) Project [t_time_sk#15635]
                  :              +- *(2) Filter ((((isnotnull(t_hour#15638) AND isnotnull(t_minute#15639)) AND (t_hour#15638 = 20)) AND (t_minute#15639 >= 30)) AND isnotnull(t_time_sk#15635))
                  :                 +- *(2) ColumnarToRow
                  :                    +- FileScan parquet default.time_dim[t_time_sk#15635,t_hour#15638,t_minute#15639] Batched: true, DataFilters: [isnotnull(t_hour#15638), isnotnull(t_minute#15639), (t_hour#15638 = 20), (t_minute#15639 >= 30),..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/time_dim], PartitionFilters: [], PushedFilters: [IsNotNull(t_hour), IsNotNull(t_minute), EqualTo(t_hour,20), GreaterThanOrEqual(t_minute,30), IsN..., ReadSchema: struct<t_time_sk:int,t_hour:int,t_minute:int>
                  +- BroadcastQueryStage 2
                     +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=144967]
                        +- *(3) Project [s_store_sk#52]
                           +- *(3) Filter ((isnotnull(s_store_name#57) AND (s_store_name#57 = ese)) AND isnotnull(s_store_sk#52))
                              +- *(3) ColumnarToRow
                                 +- FileScan parquet default.store[s_store_sk#52,s_store_name#57] Batched: true, DataFilters: [isnotnull(s_store_name#57), (s_store_name#57 = ese), isnotnull(s_store_sk#52)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store], PartitionFilters: [], PushedFilters: [IsNotNull(s_store_name), EqualTo(s_store_name,ese), IsNotNull(s_store_sk)], ReadSchema: struct<s_store_sk:int,s_store_name:string>


==== q97 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   *(8) HashAggregate(keys=[], functions=[sum(CASE WHEN (isnotnull(customer_sk#20002) AND isnull(customer_sk#20004)) THEN 1 ELSE 0 END), sum(CASE WHEN (isnull(customer_sk#20002) AND isnotnull(customer_sk#20004)) THEN 1 ELSE 0 END), sum(CASE WHEN (isnotnull(customer_sk#20002) AND isnotnull(customer_sk#20004)) THEN 1 ELSE 0 END)], output=[store_only#19999L, catalog_only#20000L, store_and_catalog#20001L])
   +- ShuffleQueryStage 5
      +- Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=145645]
         +- *(7) HashAggregate(keys=[], functions=[partial_sum(CASE WHEN (isnotnull(customer_sk#20002) AND isnull(customer_sk#20004)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (isnull(customer_sk#20002) AND isnotnull(customer_sk#20004)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (isnotnull(customer_sk#20002) AND isnotnull(customer_sk#20004)) THEN 1 ELSE 0 END)], output=[sum#20044L, sum#20045L, sum#20046L])
            +- *(7) Project [customer_sk#20002, customer_sk#20004]
               +- *(7) SortMergeJoin [customer_sk#20002, item_sk#20003], [customer_sk#20004, item_sk#20005], FullOuter
                  :- *(5) Sort [customer_sk#20002 ASC NULLS FIRST, item_sk#20003 ASC NULLS FIRST], false, 0
                  :  +- *(5) HashAggregate(keys=[ss_customer_sk#417, ss_item_sk#416], functions=[], output=[customer_sk#20002, item_sk#20003])
                  :     +- ShuffleQueryStage 3
                  :        +- Exchange hashpartitioning(ss_customer_sk#417, ss_item_sk#416, 20), ENSURE_REQUIREMENTS, [plan_id=145514]
                  :           +- *(3) HashAggregate(keys=[ss_customer_sk#417, ss_item_sk#416], functions=[], output=[ss_customer_sk#417, ss_item_sk#416])
                  :              +- *(3) Project [ss_item_sk#416, ss_customer_sk#417]
                  :                 +- *(3) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#24], Inner, BuildRight, false
                  :                    :- *(3) Filter isnotnull(ss_sold_date_sk#414)
                  :                    :  +- *(3) ColumnarToRow
                  :                    :     +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_item_sk#416,ss_customer_sk#417] Batched: true, DataFilters: [isnotnull(ss_sold_date_sk#414)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_customer_sk:int>
                  :                    +- BroadcastQueryStage 0
                  :                       +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=145349]
                  :                          +- *(1) Project [d_date_sk#24]
                  :                             +- *(1) Filter (((isnotnull(d_month_seq#27) AND (d_month_seq#27 >= 1200)) AND (d_month_seq#27 <= 1211)) AND isnotnull(d_date_sk#24))
                  :                                +- *(1) ColumnarToRow
                  :                                   +- FileScan parquet default.date_dim[d_date_sk#24,d_month_seq#27] Batched: true, DataFilters: [isnotnull(d_month_seq#27), (d_month_seq#27 >= 1200), (d_month_seq#27 <= 1211), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1200), LessThanOrEqual(d_month_seq,1211),..., ReadSchema: struct<d_date_sk:int,d_month_seq:int>
                  +- *(6) Sort [customer_sk#20004 ASC NULLS FIRST, item_sk#20005 ASC NULLS FIRST], false, 0
                     +- *(6) HashAggregate(keys=[cs_bill_customer_sk#200, cs_item_sk#212], functions=[], output=[customer_sk#20004, item_sk#20005])
                        +- ShuffleQueryStage 4
                           +- Exchange hashpartitioning(cs_bill_customer_sk#200, cs_item_sk#212, 20), ENSURE_REQUIREMENTS, [plan_id=145546]
                              +- *(4) HashAggregate(keys=[cs_bill_customer_sk#200, cs_item_sk#212], functions=[], output=[cs_bill_customer_sk#200, cs_item_sk#212])
                                 +- *(4) Project [cs_bill_customer_sk#200, cs_item_sk#212]
                                    +- *(4) BroadcastHashJoin [cs_sold_date_sk#197], [d_date_sk#20006], Inner, BuildRight, false
                                       :- *(4) Filter isnotnull(cs_sold_date_sk#197)
                                       :  +- *(4) ColumnarToRow
                                       :     +- FileScan parquet default.catalog_sales[cs_sold_date_sk#197,cs_bill_customer_sk#200,cs_item_sk#212] Batched: true, DataFilters: [isnotnull(cs_sold_date_sk#197)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_sold_date_sk)], ReadSchema: struct<cs_sold_date_sk:int,cs_bill_customer_sk:int,cs_item_sk:int>
                                       +- BroadcastQueryStage 2
                                          +- ReusedExchange [d_date_sk#20006], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=145349]

==== q98 ====
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   *(7) Project [i_item_desc#441, i_category#449, i_class#447, i_current_price#442, itemrevenue#20062, revenueratio#20063]
   +- *(7) Sort [i_category#449 ASC NULLS FIRST, i_class#447 ASC NULLS FIRST, i_item_id#438 ASC NULLS FIRST, i_item_desc#441 ASC NULLS FIRST, revenueratio#20063 ASC NULLS FIRST], true, 0
      +- ShuffleQueryStage 4
         +- Exchange rangepartitioning(i_category#449 ASC NULLS FIRST, i_class#447 ASC NULLS FIRST, i_item_id#438 ASC NULLS FIRST, i_item_desc#441 ASC NULLS FIRST, revenueratio#20063 ASC NULLS FIRST, 20), ENSURE_REQUIREMENTS, [plan_id=146125]
            +- *(6) Project [i_item_desc#441, i_category#449, i_class#447, i_current_price#442, itemrevenue#20062, CheckOverflow((promote_precision(cast(CheckOverflow((promote_precision(_w0#20068) * 100.00), DecimalType(21,2)) as decimal(27,2))) / promote_precision(_we0#20070)), DecimalType(38,17)) AS revenueratio#20063, i_item_id#438]
               +- Window [sum(_w1#20069) windowspecdefinition(i_class#447, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS _we0#20070], [i_class#447]
                  +- *(5) Sort [i_class#447 ASC NULLS FIRST], false, 0
                     +- ShuffleQueryStage 3
                        +- Exchange hashpartitioning(i_class#447, 20), ENSURE_REQUIREMENTS, [plan_id=146076]
                           +- *(4) HashAggregate(keys=[i_item_id#438, i_item_desc#441, i_category#449, i_class#447, i_current_price#442], functions=[sum(UnscaledValue(ss_ext_sales_price#429))], output=[i_item_desc#441, i_category#449, i_class#447, i_current_price#442, itemrevenue#20062, _w0#20068, _w1#20069, i_item_id#438])
                              +- ShuffleQueryStage 2
                                 +- Exchange hashpartitioning(i_item_id#438, i_item_desc#441, i_category#449, i_class#447, i_current_price#442, 20), ENSURE_REQUIREMENTS, [plan_id=146011]
                                    +- *(3) HashAggregate(keys=[i_item_id#438, i_item_desc#441, i_category#449, i_class#447, i_current_price#442], functions=[partial_sum(UnscaledValue(ss_ext_sales_price#429))], output=[i_item_id#438, i_item_desc#441, i_category#449, i_class#447, i_current_price#442, sum#20078L])
                                       +- *(3) Project [ss_ext_sales_price#429, i_item_id#438, i_item_desc#441, i_current_price#442, i_class#447, i_category#449]
                                          +- *(3) BroadcastHashJoin [ss_sold_date_sk#414], [d_date_sk#24], Inner, BuildRight, false
                                             :- *(3) Project [ss_sold_date_sk#414, ss_ext_sales_price#429, i_item_id#438, i_item_desc#441, i_current_price#442, i_class#447, i_category#449]
                                             :  +- *(3) BroadcastHashJoin [ss_item_sk#416], [i_item_sk#437], Inner, BuildRight, false
                                             :     :- *(3) Filter (isnotnull(ss_item_sk#416) AND isnotnull(ss_sold_date_sk#414))
                                             :     :  +- *(3) ColumnarToRow
                                             :     :     +- FileScan parquet default.store_sales[ss_sold_date_sk#414,ss_item_sk#416,ss_ext_sales_price#429] Batched: true, DataFilters: [isnotnull(ss_item_sk#416), isnotnull(ss_sold_date_sk#414)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/store_sales], PartitionFilters: [], PushedFilters: [IsNotNull(ss_item_sk), IsNotNull(ss_sold_date_sk)], ReadSchema: struct<ss_sold_date_sk:int,ss_item_sk:int,ss_ext_sales_price:decimal(7,2)>
                                             :     +- BroadcastQueryStage 0
                                             :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=145811]
                                             :           +- *(1) Filter (i_category#449 IN (Sports                                            ,Books                                             ,Home                                              ) AND isnotnull(i_item_sk#437))
                                             :              +- *(1) ColumnarToRow
                                             :                 +- FileScan parquet default.item[i_item_sk#437,i_item_id#438,i_item_desc#441,i_current_price#442,i_class#447,i_category#449] Batched: true, DataFilters: [i_category#449 IN (Sports                                            ,Books                     ..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/item], PartitionFilters: [], PushedFilters: [In(i_category, [Books                                             ,Home                         ..., ReadSchema: struct<i_item_sk:int,i_item_id:string,i_item_desc:string,i_current_price:decimal(7,2),i_class:str...
                                             +- BroadcastQueryStage 1
                                                +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=145830]
                                                   +- *(2) Project [d_date_sk#24]
                                                      +- *(2) Filter (((isnotnull(d_date#26) AND (d_date#26 >= 1999-02-22)) AND (d_date#26 <= 1999-03-24)) AND isnotnull(d_date_sk#24))
                                                         +- *(2) ColumnarToRow
                                                            +- FileScan parquet default.date_dim[d_date_sk#24,d_date#26] Batched: true, DataFilters: [isnotnull(d_date#26), (d_date#26 >= 1999-02-22), (d_date#26 <= 1999-03-24), isnotnull(d_date_sk#..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_date), GreaterThanOrEqual(d_date,1999-02-22), LessThanOrEqual(d_date,1999-03-24), Is..., ReadSchema: struct<d_date_sk:int,d_date:date>

==== q99 ====
== Optimized Logical Plan ==
GlobalLimit 100, Statistics(sizeInBytes=10.5 KiB, rowCount=100)
+- LocalLimit 100, Statistics(sizeInBytes=2.33E+23 B)
   +- Sort [substr(w_warehouse_name, 1, 20)#20094 ASC NULLS FIRST, sm_type#15389 ASC NULLS FIRST, cc_name#7126 ASC NULLS FIRST], true, Statistics(sizeInBytes=2.33E+23 B)
      +- Aggregate [_groupingexpression#20103, sm_type#15389, cc_name#7126], [_groupingexpression#20103 AS substr(w_warehouse_name, 1, 20)#20094, sm_type#15389, cc_name#7126, sum(CASE WHEN ((cs_ship_date_sk#199 - cs_sold_date_sk#197) <= 30) THEN 1 ELSE 0 END) AS 30 days #20084L, sum(CASE WHEN (((cs_ship_date_sk#199 - cs_sold_date_sk#197) > 30) AND ((cs_ship_date_sk#199 - cs_sold_date_sk#197) <= 60)) THEN 1 ELSE 0 END) AS 31 - 60 days #20085L, sum(CASE WHEN (((cs_ship_date_sk#199 - cs_sold_date_sk#197) > 60) AND ((cs_ship_date_sk#199 - cs_sold_date_sk#197) <= 90)) THEN 1 ELSE 0 END) AS 61 - 90 days #20086L, sum(CASE WHEN (((cs_ship_date_sk#199 - cs_sold_date_sk#197) > 90) AND ((cs_ship_date_sk#199 - cs_sold_date_sk#197) <= 120)) THEN 1 ELSE 0 END) AS 91 - 120 days #20087L, sum(CASE WHEN ((cs_ship_date_sk#199 - cs_sold_date_sk#197) > 120) THEN 1 ELSE 0 END) AS >120 days #20088L], Statistics(sizeInBytes=2.33E+23 B)
         +- Project [cs_sold_date_sk#197, cs_ship_date_sk#199, sm_type#15389, cc_name#7126, substr(w_warehouse_name#7978, 1, 20) AS _groupingexpression#20103], Statistics(sizeInBytes=1.64E+23 B)
            +- Join Inner, (cs_ship_date_sk#199 = d_date_sk#24), Statistics(sizeInBytes=1.73E+23 B)
               :- Project [cs_sold_date_sk#197, cs_ship_date_sk#199, w_warehouse_name#7978, sm_type#15389, cc_name#7126], Statistics(sizeInBytes=1422.2 PiB)
               :  +- Join Inner, (cs_call_center_sk#208 = cc_call_center_sk#7120), Statistics(sizeInBytes=1571.9 PiB)
               :     :- Project [cs_sold_date_sk#197, cs_ship_date_sk#199, cs_call_center_sk#208, w_warehouse_name#7978, sm_type#15389], Statistics(sizeInBytes=374.5 TiB)
               :     :  +- Join Inner, (cs_ship_mode_sk#210 = sm_ship_mode_sk#15387), Statistics(sizeInBytes=424.4 TiB)
               :     :     :- Project [cs_sold_date_sk#197, cs_ship_date_sk#199, cs_call_center_sk#208, cs_ship_mode_sk#210, w_warehouse_name#7978], Statistics(sizeInBytes=33.7 GiB)
               :     :     :  +- Join Inner, (cs_warehouse_sk#211 = w_warehouse_sk#7976), Statistics(sizeInBytes=39.8 GiB)
               :     :     :     :- Project [cs_sold_date_sk#197, cs_ship_date_sk#199, cs_call_center_sk#208, cs_ship_mode_sk#210, cs_warehouse_sk#211], Statistics(sizeInBytes=14.5 MiB)
               :     :     :     :  +- Filter ((isnotnull(cs_warehouse_sk#211) AND isnotnull(cs_ship_mode_sk#210)) AND (isnotnull(cs_call_center_sk#208) AND isnotnull(cs_ship_date_sk#199))), Statistics(sizeInBytes=105.8 MiB)
               :     :     :     :     +- Relation default.catalog_sales[cs_sold_date_sk#197,cs_sold_time_sk#198,cs_ship_date_sk#199,cs_bill_customer_sk#200,cs_bill_cdemo_sk#201,cs_bill_hdemo_sk#202,cs_bill_addr_sk#203,cs_ship_customer_sk#204,cs_ship_cdemo_sk#205,cs_ship_hdemo_sk#206,cs_ship_addr_sk#207,cs_call_center_sk#208,cs_catalog_page_sk#209,cs_ship_mode_sk#210,cs_warehouse_sk#211,cs_item_sk#212,cs_promo_sk#213,cs_order_number#214,cs_quantity#215,cs_wholesale_cost#216,cs_list_price#217,cs_sales_price#218,cs_ext_discount_amt#219,cs_ext_sales_price#220,cs_ext_wholesale_cost#221,cs_ext_list_price#222,cs_ext_tax#223,cs_coupon_amt#224,cs_ext_ship_cost#225,cs_net_paid#226,cs_net_paid_inc_tax#227,cs_net_paid_inc_ship#228,cs_net_paid_inc_ship_tax#229,cs_net_profit#230] parquet, Statistics(sizeInBytes=105.8 MiB)
               :     :     :     +- Project [w_warehouse_sk#7976, w_warehouse_name#7978], Statistics(sizeInBytes=2.7 KiB)
               :     :     :        +- Filter isnotnull(w_warehouse_sk#7976), Statistics(sizeInBytes=20.9 KiB)
               :     :     :           +- Relation default.warehouse[w_warehouse_sk#7976,w_warehouse_id#7977,w_warehouse_name#7978,w_warehouse_sq_ft#7979,w_street_number#7980,w_street_name#7981,w_street_type#7982,w_suite_number#7983,w_city#7984,w_county#7985,w_state#7986,w_zip#7987,w_country#7988,w_gmt_offset#7989] parquet, Statistics(sizeInBytes=20.9 KiB)
               :     :     +- Project [sm_ship_mode_sk#15387, sm_type#15389], Statistics(sizeInBytes=12.6 KiB)
               :     :        +- Filter isnotnull(sm_ship_mode_sk#15387), Statistics(sizeInBytes=44.1 KiB)
               :     :           +- Relation default.ship_mode[sm_ship_mode_sk#15387,sm_ship_mode_id#15388,sm_type#15389,sm_code#15390,sm_carrier#15391,sm_contract#15392] parquet, Statistics(sizeInBytes=44.1 KiB)
               :     +- Project [cc_call_center_sk#7120, cc_name#7126], Statistics(sizeInBytes=4.2 KiB)
               :        +- Filter isnotnull(cc_call_center_sk#7120), Statistics(sizeInBytes=58.2 KiB)
               :           +- Relation default.call_center[cc_call_center_sk#7120,cc_call_center_id#7121,cc_rec_start_date#7122,cc_rec_end_date#7123,cc_closed_date_sk#7124,cc_open_date_sk#7125,cc_name#7126,cc_class#7127,cc_employees#7128,cc_sq_ft#7129,cc_hours#7130,cc_manager#7131,cc_mkt_id#7132,cc_mkt_class#7133,cc_mkt_desc#7134,cc_market_manager#7135,cc_division#7136,cc_division_name#7137,cc_company#7138,cc_company_name#7139,cc_street_number#7140,cc_street_name#7141,cc_street_type#7142,cc_suite_number#7143,cc_city#7144,cc_county#7145,cc_state#7146,cc_zip#7147,cc_country#7148,cc_gmt_offset#7149,cc_tax_percentage#7150] parquet, Statistics(sizeInBytes=58.2 KiB)
               +- Project [d_date_sk#24], Statistics(sizeInBytes=105.3 KiB)
                  +- Filter ((isnotnull(d_month_seq#27) AND ((d_month_seq#27 >= 1200) AND (d_month_seq#27 <= 1211))) AND isnotnull(d_date_sk#24)), Statistics(sizeInBytes=2.5 MiB)
                     +- Relation default.date_dim[d_date_sk#24,d_date_id#25,d_date#26,d_month_seq#27,d_week_seq#28,d_quarter_seq#29,d_year#30,d_dow#31,d_moy#32,d_dom#33,d_qoy#34,d_fy_year#35,d_fy_quarter_seq#36,d_fy_week_seq#37,d_day_name#38,d_quarter_name#39,d_holiday#40,d_weekend#41,d_following_holiday#42,d_first_dom#43,d_last_dom#44,d_same_day_ly#45,d_same_day_lq#46,d_current_day#47,d_current_week#48,d_current_month#49,d_current_quarter#50,d_current_year#51] parquet, Statistics(sizeInBytes=2.5 MiB)

== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=true
+- == Final Plan ==
   TakeOrderedAndProject(limit=100, orderBy=[substr(w_warehouse_name, 1, 20)#20094 ASC NULLS FIRST,sm_type#15389 ASC NULLS FIRST,cc_name#7126 ASC NULLS FIRST], output=[substr(w_warehouse_name, 1, 20)#20094,sm_type#15389,cc_name#7126,30 days #20084L,31 - 60 days #20085L,61 - 90 days #20086L,91 - 120 days #20087L,>120 days #20088L])
   +- *(6) HashAggregate(keys=[_groupingexpression#20103, sm_type#15389, cc_name#7126], functions=[sum(CASE WHEN ((cs_ship_date_sk#199 - cs_sold_date_sk#197) <= 30) THEN 1 ELSE 0 END), sum(CASE WHEN (((cs_ship_date_sk#199 - cs_sold_date_sk#197) > 30) AND ((cs_ship_date_sk#199 - cs_sold_date_sk#197) <= 60)) THEN 1 ELSE 0 END), sum(CASE WHEN (((cs_ship_date_sk#199 - cs_sold_date_sk#197) > 60) AND ((cs_ship_date_sk#199 - cs_sold_date_sk#197) <= 90)) THEN 1 ELSE 0 END), sum(CASE WHEN (((cs_ship_date_sk#199 - cs_sold_date_sk#197) > 90) AND ((cs_ship_date_sk#199 - cs_sold_date_sk#197) <= 120)) THEN 1 ELSE 0 END), sum(CASE WHEN ((cs_ship_date_sk#199 - cs_sold_date_sk#197) > 120) THEN 1 ELSE 0 END)], output=[substr(w_warehouse_name, 1, 20)#20094, sm_type#15389, cc_name#7126, 30 days #20084L, 31 - 60 days #20085L, 61 - 90 days #20086L, 91 - 120 days #20087L, >120 days #20088L])
      +- ShuffleQueryStage 4
         +- Exchange hashpartitioning(_groupingexpression#20103, sm_type#15389, cc_name#7126, 20), ENSURE_REQUIREMENTS, [plan_id=146659]
            +- *(5) HashAggregate(keys=[_groupingexpression#20103, sm_type#15389, cc_name#7126], functions=[partial_sum(CASE WHEN ((cs_ship_date_sk#199 - cs_sold_date_sk#197) <= 30) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (((cs_ship_date_sk#199 - cs_sold_date_sk#197) > 30) AND ((cs_ship_date_sk#199 - cs_sold_date_sk#197) <= 60)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (((cs_ship_date_sk#199 - cs_sold_date_sk#197) > 60) AND ((cs_ship_date_sk#199 - cs_sold_date_sk#197) <= 90)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN (((cs_ship_date_sk#199 - cs_sold_date_sk#197) > 90) AND ((cs_ship_date_sk#199 - cs_sold_date_sk#197) <= 120)) THEN 1 ELSE 0 END), partial_sum(CASE WHEN ((cs_ship_date_sk#199 - cs_sold_date_sk#197) > 120) THEN 1 ELSE 0 END)], output=[_groupingexpression#20103, sm_type#15389, cc_name#7126, sum#20109L, sum#20110L, sum#20111L, sum#20112L, sum#20113L])
               +- *(5) Project [cs_sold_date_sk#197, cs_ship_date_sk#199, sm_type#15389, cc_name#7126, substr(w_warehouse_name#7978, 1, 20) AS _groupingexpression#20103]
                  +- *(5) BroadcastHashJoin [cs_ship_date_sk#199], [d_date_sk#24], Inner, BuildRight, false
                     :- *(5) Project [cs_sold_date_sk#197, cs_ship_date_sk#199, w_warehouse_name#7978, sm_type#15389, cc_name#7126]
                     :  +- *(5) BroadcastHashJoin [cs_call_center_sk#208], [cc_call_center_sk#7120], Inner, BuildRight, false
                     :     :- *(5) Project [cs_sold_date_sk#197, cs_ship_date_sk#199, cs_call_center_sk#208, w_warehouse_name#7978, sm_type#15389]
                     :     :  +- *(5) BroadcastHashJoin [cs_ship_mode_sk#210], [sm_ship_mode_sk#15387], Inner, BuildRight, false
                     :     :     :- *(5) Project [cs_sold_date_sk#197, cs_ship_date_sk#199, cs_call_center_sk#208, cs_ship_mode_sk#210, w_warehouse_name#7978]
                     :     :     :  +- *(5) BroadcastHashJoin [cs_warehouse_sk#211], [w_warehouse_sk#7976], Inner, BuildRight, false
                     :     :     :     :- *(5) Filter (((isnotnull(cs_warehouse_sk#211) AND isnotnull(cs_ship_mode_sk#210)) AND isnotnull(cs_call_center_sk#208)) AND isnotnull(cs_ship_date_sk#199))
                     :     :     :     :  +- *(5) ColumnarToRow
                     :     :     :     :     +- FileScan parquet default.catalog_sales[cs_sold_date_sk#197,cs_ship_date_sk#199,cs_call_center_sk#208,cs_ship_mode_sk#210,cs_warehouse_sk#211] Batched: true, DataFilters: [isnotnull(cs_warehouse_sk#211), isnotnull(cs_ship_mode_sk#210), isnotnull(cs_call_center_sk#208)..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/catalog_sales], PartitionFilters: [], PushedFilters: [IsNotNull(cs_warehouse_sk), IsNotNull(cs_ship_mode_sk), IsNotNull(cs_call_center_sk), IsNotNull(..., ReadSchema: struct<cs_sold_date_sk:int,cs_ship_date_sk:int,cs_call_center_sk:int,cs_ship_mode_sk:int,cs_wareh...
                     :     :     :     +- BroadcastQueryStage 0
                     :     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=146313]
                     :     :     :           +- *(1) Filter isnotnull(w_warehouse_sk#7976)
                     :     :     :              +- *(1) ColumnarToRow
                     :     :     :                 +- FileScan parquet default.warehouse[w_warehouse_sk#7976,w_warehouse_name#7978] Batched: true, DataFilters: [isnotnull(w_warehouse_sk#7976)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/warehouse], PartitionFilters: [], PushedFilters: [IsNotNull(w_warehouse_sk)], ReadSchema: struct<w_warehouse_sk:int,w_warehouse_name:string>
                     :     :     +- BroadcastQueryStage 1
                     :     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=146330]
                     :     :           +- *(2) Filter isnotnull(sm_ship_mode_sk#15387)
                     :     :              +- *(2) ColumnarToRow
                     :     :                 +- FileScan parquet default.ship_mode[sm_ship_mode_sk#15387,sm_type#15389] Batched: true, DataFilters: [isnotnull(sm_ship_mode_sk#15387)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/ship_mode], PartitionFilters: [], PushedFilters: [IsNotNull(sm_ship_mode_sk)], ReadSchema: struct<sm_ship_mode_sk:int,sm_type:string>
                     :     +- BroadcastQueryStage 2
                     :        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=146347]
                     :           +- *(3) Filter isnotnull(cc_call_center_sk#7120)
                     :              +- *(3) ColumnarToRow
                     :                 +- FileScan parquet default.call_center[cc_call_center_sk#7120,cc_name#7126] Batched: true, DataFilters: [isnotnull(cc_call_center_sk#7120)], Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/call_center], PartitionFilters: [], PushedFilters: [IsNotNull(cc_call_center_sk)], ReadSchema: struct<cc_call_center_sk:int,cc_name:string>
                     +- BroadcastQueryStage 3
                        +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)),false), [plan_id=146366]
                           +- *(4) Project [d_date_sk#24]
                              +- *(4) Filter (((isnotnull(d_month_seq#27) AND (d_month_seq#27 >= 1200)) AND (d_month_seq#27 <= 1211)) AND isnotnull(d_date_sk#24))
                                 +- *(4) ColumnarToRow
                                    +- FileScan parquet default.date_dim[d_date_sk#24,d_month_seq#27] Batched: true, DataFilters: [isnotnull(d_month_seq#27), (d_month_seq#27 >= 1200), (d_month_seq#27 <= 1211), isnotnull(d_date_..., Format: Parquet, Location: InMemoryFileIndex(1 paths)[hdfs://node001:9100/benchmark/tpcdsTable/date_dim], PartitionFilters: [], PushedFilters: [IsNotNull(d_month_seq), GreaterThanOrEqual(d_month_seq,1200), LessThanOrEqual(d_month_seq,1211),..., ReadSchema: struct<d_date_sk:int,d_month_seq:int>